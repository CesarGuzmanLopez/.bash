[?1049h[22;0;0t[22;0t[?1h=[H[2J]11;?[?2004h[?u[c[?25h[?25l(B[m[H[2J[23Bchdir(/home/cesarguzmanlopez/.bash_vim)[K[H[23M
chdir(vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(vim)[K
-- More --[K]112[1 q[?25h[?25l[?1004h[?25h[?25l[>4;2m[24;1H[10Xchdir(/home/cesarguzmanlopez/.bash_vim)[H[M[23B-- More --[K[?25h[?25l[CSPACE/d/j: screen/page/line down, b/u/k: up, q: quit[?25h[?25l[24;1H[63Xchdir(/home/cesarguzmanlopez/.bash_vim)[H[23M
chdir(vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
Executing:     aunmenu *[K
Executing:     vnoremenu PopUp.Cut                     "+x[K
Executing:     vnoremenu PopUp.Copy                    "+y[K
Executing:     anoremenu PopUp.Paste                   "+gP[K
Executing:     vnoremenu PopUp.Paste                   "+P[K
Executing:     vnoremenu PopUp.Delete                  "_x[K
Executing:     nnoremenu PopUp.Select\ All             ggVG[K
Executing:     vnoremenu PopUp.Select\ All             gg0oG$[K
Executing:     inoremenu PopUp.Select\ All             <C-Home><C-O>VG[K
Executing:     anoremenu PopUp.-1-                     <Nop>[K
Executing:     anoremenu PopUp.How-to\ disable\ mouse  <Cmd>help disable-mouse<C
R>[K
Executing:[K
Searching for "ftplugin.vim" in runtime path[K
Searching for "/home/cesarguzmanlopez/.config/nvim/ftplugin.vim"[K
Searching for "/home/cesarguzmanlopez/.local/share/nvim/site/ftplugin.vim"[K
Searching for "/usr/share/nvim/site/ftplugin.vim"[K
-- More --[K[?25h[?25l[24;1H[10XSearching for "/usr/share/nvim/runtime/ftplugin.vim"[H[23M
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/usr/share/nvim/runtime)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
sourcing "/usr/share/nvim/runtime/ftplugin.vim"[K
line 1: " Vim support file to switch on loading plugins for file types[K
line 2: "[K
line 3: " Maintainer:^IBram Moolenaar <Bram@vim.org>[K
line 4: " Last change:^I2006 Apr 30[K
line 5:[K
line 6: if exists("did_load_ftplugin")[K
line 7:   finish[K
line 8: endif[K
line 9: let did_load_ftplugin = 1[K
line 10:[K
line 11: augroup filetypeplugin[K
line 12:   au FileType * call s:LoadFTPlugin()[K
line 13:[K
line 14:   func! s:LoadFTPlugin()[K
line 37: augroup END[K
finished sourcing /usr/share/nvim/runtime/ftplugin.vim[K
Searching for "indent.vim" in runtime path[K
Searching for "/home/cesarguzmanlopez/.config/nvim/indent.vim"[K
-- More --[K[?25h[?25l[24;1H[10XSearching for "/home/cesarguzmanlopez/.local/share/nvim/site/indent.vim"[H[23M
Searching for "/usr/share/nvim/site/indent.vim"[K
Searching for "/usr/share/nvim/runtime/indent.vim"[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/usr/share/nvim/runtime)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
sourcing "/usr/share/nvim/runtime/indent.vim"[K
line 1: " Vim support file to switch on loading indent files for file types[K
line 2: "[K
line 3: " Maintainer:^IBram Moolenaar <Bram@vim.org>[K
line 4: " Last Change:^I2008 Feb 22[K
line 5:[K
line 6: if exists("did_indent_on")[K
line 7:   finish[K
line 8: endif[K
line 9: let did_indent_on = 1[K
line 10:[K
line 11: augroup filetypeindent[K
line 12:   au FileType * call s:LoadIndent()[K
line 13:   func! s:LoadIndent()[K
line 32: augroup END[K
finished sourcing /usr/share/nvim/runtime/indent.vim[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
-- More --[K[?25h[?25l[24;1H[10Xchdir(/home/cesarguzmanlopez/.config/kdedefaults/nvim)[H[23M
chdir(/home/cesarguzmanlopez/.bash_vim)[K
could not source "/home/cesarguzmanlopez/.config/kdedefaults/nvim/sysinit.vim"[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/etc/xdg/nvim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
could not source "/etc/xdg/nvim/sysinit.vim"[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/usr/share/kde-settings/kde-profile/default/xdg/nvim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
could not source "/usr/share/kde-settings/kde-profile/default/xdg/nvim/sysinit.v
im"[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/usr/share/nvim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
sourcing "$VIM/sysinit.vim"[K
line 1: let g:python_host_prog = '/usr/bin/python2'[K
line 2: let g:python3_host_prog = '/usr/bin/python3'[K
line 3:[K
line 4: " In order for neovim to use installed plugins shared with vim[K
line 5: set runtimepath+=/usr/share/vim/vimfiles/[K
line 6:[K
line 7: augroup Fedora[K
-- More --[K[?25h[?25l[CSPACE/d/j: screen/page/line down, b/u/k: up, q: quit[?25h[?25l[24;1H[63Xline 8:   autocmd![H[23M
line 9:   " RPM spec file template[K
line 10:   autocmd BufNewFile *.spec silent! 0read /usr/share/nvim/template.spec
[K
line 11: augroup END[K
line 12:[K
line 13: " vim: et ts=2 sw=2[K
finished sourcing $VIM/sysinit.vim[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/home/cesarguzmanlopez/.config/nvim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
sourcing "/home/cesarguzmanlopez/.config/nvim/init.vim"[K
line 1: source ~/.bash_vim/init.vim[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
line 1: sourcing "/home/cesarguzmanlopez/.bash_vim/init.vim"[K
line 1: " source  ~/.config/nvim/init.vim[K
line 2: " echo stdpath('config')[K
line 3: " Directorio de plugins[K
line 4: " echo esto funciona perfect[K
line 5: let $OHS = "/home/cesarguzmanlopez/.bash_vim/"[K
line 6: set runtimepath^=$OHS/Config_Vim[K
-- More --[K[?25h[?25l[24;1H[10Xline 7: source $OHS/Config_Vim/Default.vim[H[23M
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim/Config_Vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
line 7: sourcing "/home/cesarguzmanlopez/.bash_vim/Config_Vim/Default.vim"[K
line 1: syntax enable[K
line 1: so $VIMRUNTIME/syntax/syntax.vim[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/usr/share/nvim/runtime/syntax)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
line 1: sourcing "/usr/share/nvim/runtime/syntax/syntax.vim"[K
line 1: " Vim syntax support file[K
line 2: " Maintainer:^IBram Moolenaar <Bram@vim.org>[K
line 3: " Last Change:^I2022 Apr 12[K
line 4:[K
line 5: " This file is used for ":syntax on".[K
line 6: " It installs the autocommands and starts highlighting for all buffers.[K
line 7:[K
line 8: if !has("syntax")[K
line 9:   finish[K
line 10: endif[K
line 11:[K
line 12: " If Syntax highlighting appears to be on already, turn it off first, s
-- More --[K[?25h[?25l[24;1H[10Xo that[H[23M
line 13: " any leftovers are cleared.[K
line 14: if exists("syntax_on") || exists("syntax_manual")[K
line 15:   so <sfile>:p:h/nosyntax.vim[K
line 16: endif[K
line 17:[K
line 18: " Load the Syntax autocommands and set the default methods for highligh
ting.[K
line 19: runtime syntax/synload.vim[K
Searching for "syntax/synload.vim" in runtime path[K
Searching for "/home/cesarguzmanlopez/.bash_vim/Config_Vim/syntax/synload.vim"[K
Searching for "/home/cesarguzmanlopez/.config/nvim/syntax/synload.vim"[K
Searching for "/home/cesarguzmanlopez/.local/share/nvim/site/syntax/synload.vim"
[K
Searching for "/usr/share/nvim/site/syntax/synload.vim"[K
Searching for "/usr/share/nvim/runtime/syntax/synload.vim"[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/usr/share/nvim/runtime/syntax)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
line 19: sourcing "/usr/share/nvim/runtime/syntax/synload.vim"[K
line 1: " Vim syntax support file[K
line 2: " Maintainer:^IBram Moolenaar <Bram@vim.org>[K
line 3: " Last Change:^I2022 Apr 12[K
-- More --[K[?25h[?25l[24;1H[10Xline 4:[H[23M
line 5: " This file sets up for syntax highlighting.[K
line 6: " It is loaded from "syntax.vim" and "manual.vim".[K
line 7: " 1. Set the default highlight groups.[K
line 8: " 2. Install Syntax autocommands for all the available syntax files.[K
line 9:[K
line 10: if !has("syntax")[K
line 11:   finish[K
line 12: endif[K
line 13:[K
line 14: " let others know that syntax has been switched on[K
line 15: let syntax_on = 1[K
line 16:[K
line 17: " Line continuation is used here, remove 'C' from 'cpoptions'[K
line 18: let s:cpo_save = &cpo[K
line 19: set cpo&vim[K
line 20:[K
line 21: " First remove all old syntax autocommands.[K
line 22: au! Syntax[K
line 23:[K
line 24: au Syntax *^I^Icall s:SynSet()[K
line 25:[K
line 26: fun! s:SynSet()[K
-- More --[K[?25h[?25l[24;1H[10Xline 57:[H[23M
line 58:[K
line 59: " Handle adding doxygen to other languages (C, C++, C#, IDL, java, php,
 DataScript)[K
line 60: au Syntax c,cpp,cs,idl,java,php,datascript if (exists('b:load_doxygen_s
yntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load
_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif[K
line 65:[K
line 66:[K
line 67: " Source the user-specified syntax highlighting file[K
line 68: if exists("mysyntaxfile")[K
line 69:   let s:fname = expand(mysyntaxfile)[K
line 70:   if filereadable(s:fname)[K
line 71:     execute "source " . fnameescape(s:fname)[K
line 72:   endif[K
line 73: endif[K
line 74:[K
line 75: " Restore 'cpoptions'[K
line 76: let &cpo = s:cpo_save[K
line 77: unlet s:cpo_save[K
finished sourcing /usr/share/nvim/runtime/syntax/synload.vim[K
continuing in /usr/share/nvim/runtime/syntax/syntax.vim[K
line 20:[K
-- More --[K[?25h[?25l[24;1H[10Xline 21: " Load the FileType autocommands if not done yet.[H[23M
line 22: if exists("did_load_filetypes")[K
line 23:   let s:did_ft = 1[K
line 24: else[K
line 25:   filetype on[K
Searching for "filetype.lua filetype.vim" in runtime path[K
Searching for "/home/cesarguzmanlopez/.bash_vim/Config_Vim/filetype.lua"[K
Searching for "/home/cesarguzmanlopez/.bash_vim/Config_Vim/filetype.vim"[K
Searching for "/home/cesarguzmanlopez/.config/nvim/filetype.lua"[K
Searching for "/home/cesarguzmanlopez/.config/nvim/filetype.vim"[K
Searching for "/home/cesarguzmanlopez/.local/share/nvim/site/filetype.lua"[K
Searching for "/home/cesarguzmanlopez/.local/share/nvim/site/filetype.vim"[K
Searching for "/usr/share/nvim/site/filetype.lua"[K
Searching for "/usr/share/nvim/site/filetype.vim"[K
Searching for "/usr/share/nvim/runtime/filetype.lua"[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/usr/share/nvim/runtime)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
line 25: sourcing "/usr/share/nvim/runtime/filetype.lua"[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/usr/share/nvim/runtime)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
-- More --[K[?25h[?25l[CSPACE/d/j: screen/page/line down, b/u/k: up, q: quit[?25h[?25l[24;1H[63Xchdir(/usr/share/nvim/runtime)[H[23M
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/usr/share/nvim/runtime)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
Executing:   augroup filetypedetect[K
Executing:   runtime! ftdetect/*.vim[K
Searching for "ftdetect/*.vim" in runtime path[K
Searching for "/home/cesarguzmanlopez/.bash_vim/Config_Vim/ftdetect/*.vim"[K
Searching for "/home/cesarguzmanlopez/.config/nvim/ftdetect/*.vim"[K
Searching for "/home/cesarguzmanlopez/.local/share/nvim/site/ftdetect/*.vim"[K
Searching for "/usr/share/nvim/site/ftdetect/*.vim"[K
Searching for "/usr/share/nvim/runtime/ftdetect/*.vim"[K
Searching for "/usr/share/vim/vimfiles/ftdetect/*.vim"[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/usr/share/vim/vimfiles/ftdetect)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
line 0: sourcing "/usr/share/vim/vimfiles/ftdetect/ninja.vim"[K
line 1: au! BufNewFile,BufRead *.ninja        setf ninja[K
finished sourcing /usr/share/vim/vimfiles/ftdetect/ninja.vim[K
continuing in nvim_exec() called at /usr/share/nvim/runtime/filetype.lua:0[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/usr/share/vim/vimfiles/ftdetect)[K
-- More --[K[?25h[?25l[24;1H[10Xchdir(/home/cesarguzmanlopez/.bash_vim)[H[23M
line 0: sourcing "/usr/share/vim/vimfiles/ftdetect/stp.vim"[K
line 1: augroup stpfiletype[K
line 2:   au BufNewFile,BufRead *.stp^Iset filetype=stp[K
line 3:   au BufNewFile,BufRead *.stpm^Iset filetype=stp[K
line 4: augroup end[K
finished sourcing /usr/share/vim/vimfiles/ftdetect/stp.vim[K
continuing in nvim_exec() called at /usr/share/nvim/runtime/filetype.lua:0[K
Executing:   runtime! ftdetect/*.lua[K
Searching for "ftdetect/*.lua" in runtime path[K
Searching for "/home/cesarguzmanlopez/.bash_vim/Config_Vim/ftdetect/*.lua"[K
Searching for "/home/cesarguzmanlopez/.config/nvim/ftdetect/*.lua"[K
Searching for "/home/cesarguzmanlopez/.local/share/nvim/site/ftdetect/*.lua"[K
Searching for "/usr/share/nvim/site/ftdetect/*.lua"[K
Searching for "/usr/share/nvim/runtime/ftdetect/*.lua"[K
Searching for "/usr/share/vim/vimfiles/ftdetect/*.lua"[K
not found in runtime path: "ftdetect/*.lua"[K
Executing:   augroup END[K
Executing:[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/usr/share/nvim/runtime)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
-- More --[K[?25h[?25l[24;1H[10Xchdir(/usr/share/nvim/runtime)[H[23M
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/usr/share/nvim/runtime)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
finished sourcing /usr/share/nvim/runtime/filetype.lua[K
continuing in /usr/share/nvim/runtime/syntax/syntax.vim[K
Searching for "/usr/share/nvim/runtime/filetype.vim"[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/usr/share/nvim/runtime)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
line 25: sourcing "/usr/share/nvim/runtime/filetype.vim"[K
line 1: " Vim support file to detect file types[K
line 2: "[K
line 3: " Maintainer:^IBram Moolenaar <Bram@vim.org>[K
line 4: " Last Change:^I2022 Sep 27[K
line 5:[K
line 6: " Only run this if enabled[K
line 7: if !exists("do_legacy_filetype")[K
line 8:   finish[K
finished sourcing /usr/share/nvim/runtime/filetype.vim[K
continuing in /usr/share/nvim/runtime/syntax/syntax.vim[K
Searching for "/usr/share/vim/vimfiles/filetype.lua"[K
-- More --[K[?25h[?25l[24;1H[10XSearching for "/usr/share/vim/vimfiles/filetype.vim"[H[23M
line 26:   let s:did_ft = 0[K
line 27: endif[K
line 28:[K
line 29: " Set up the connection between FileType and Syntax autocommands.[K
line 30: " This makes the syntax automatically set when the file type is detecte
d[K
line 31: " unless treesitter highlighting is enabled.[K
line 32: " Avoid an error when 'verbose' is set and <amatch> expansion fails.[K
line 33: augroup syntaxset[K
line 34:   au! FileType *^Iif !exists('b:ts_highlight') | 0verbose exe "set synt
ax=" . expand("<amatch>") | endif[K
line 35: augroup END[K
line 36:[K
line 37: " Execute the syntax autocommands for the each buffer.[K
line 38: " If the filetype wasn't detected yet, do that now.[K
line 39: " Always do the syntaxset autocommands, for buffers where the 'filetype
'[K
line 40: " already was set manually (e.g., help buffers).[K
line 41: doautoall syntaxset FileType[K
Executing FileType Autocommands for "*"[K
autocommand if !exists('b:ts_highlight') | 0verbose exe "set syntax=" . expand("
<amatch>") | endif[K
-- More --[K[?25h[?25l[24;1H[10XExecuting: if !exists('b:ts_highlight') | 0verbose exe "set syntax=" . expand("[H[M[23B[J[23;80H<[H[22M
amatch>") | endif[K
Executing:  0verbose exe "set syntax=" . expand("<amatch>") | endif[K
Executing:  endif[K
line 42: if !s:did_ft[K
line 43:   doautoall filetypedetect BufRead[K
Executing BufReadPost Autocommands for "*"[K
autocommand <Lua 5: /usr/share/nvim/runtime/filetype.lua:11>[K
Executing:[K
Executing BufReadPost Autocommands for "*"[K
autocommand if !did_filetype() && expand('<amatch>') !~ g:ft_ignore_pat | runtim
e! scripts.vim | endif[K
Executing: if !did_filetype() && expand('<amatch>') !~ g:ft_ignore_pat | runtime
! scripts.vim | endif[K
Executing:  runtime! scripts.vim | endif[K
Searching for "scripts.vim" in runtime path[K
Searching for "/home/cesarguzmanlopez/.bash_vim/Config_Vim/scripts.vim"[K
Searching for "/home/cesarguzmanlopez/.config/nvim/scripts.vim"[K
Searching for "/home/cesarguzmanlopez/.local/share/nvim/site/scripts.vim"[K
Searching for "/usr/share/nvim/site/scripts.vim"[K
Searching for "/usr/share/nvim/runtime/scripts.vim"[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/usr/share/nvim/runtime)[K
-- More --[K[?25h[?25l[24;1H[10Xchdir(/home/cesarguzmanlopez/.bash_vim)[H[23M
line 0: sourcing "/usr/share/nvim/runtime/scripts.vim"[K
line 1: " Vim support file to detect file types in scripts[K
line 2: "[K
line 3: " Maintainer:^IBram Moolenaar <Bram@vim.org>[K
line 4: " Last change:^I2021 Jan 22[K
line 5:[K
line 6: " This file is called by an autocommand for every file that has just bee
n[K
line 7: " loaded into a buffer.  It checks if the type of file can be recognized
 by[K
line 8: " the file contents.  The autocommand is in $VIMRUNTIME/filetype.vim.[K
line 9: "[K
line 10: " Note that the pattern matches are done with =~# to avoid the value of
 the[K
line 11: " 'ignorecase' option making a difference.  Where case is to be ignored
 use[K
line 12: " =~? instead.  Do not use =~ anywhere.[K
line 13:[K
line 14: " Only run when using legacy filetype[K
line 15: if !exists('g:do_legacy_filetype')[K
line 16:   finish[K
finished sourcing /usr/share/nvim/runtime/scripts.vim[K
-- More --[K[?25h[?25l[24;1H[10Xcontinuing in BufReadPost Autocommands for "*"[H[23M
Searching for "/usr/share/vim/vimfiles/scripts.vim"[K
Executing:  endif[K
line 44: endif[K
finished sourcing /usr/share/nvim/runtime/syntax/syntax.vim[K
continuing in /home/cesarguzmanlopez/.bash_vim/Config_Vim/Default.vim[K
line 2: "set colorcolumn=120 "Muestra una linea vertical en la columna 80[K
line 3: set autoindent "Indentacion automatica[K
line 4: set clipboard^=unnamed,unnamedplus[K
line 5: set cmdheight=1[K
line 6: set cursorline "Resalta la linea en la que se encuentra el cursor[K
line 7: set encoding=utf-8 "Codificacion de caracteres[K
line 8: set expandtab "Reemplaza los tabuladores por espacios[K
line 9: set modifiable[K
line 10: "set fileformat=unix "Formato de archivo[K
line 11: set foldlevel=1 "Nivel de colapso de las lineas de codigo[K
line 12: set foldlevelstart=0 "Nivel de colapso de las lineas de codigo 0 es que
 colapse automaticamente todo[K
line 13: set foldmethod=syntax "Permite que se puedan colapsar las lineas de cod
igo[K
line 14: set foldnestmax=10 "Nivel de colapso de las lineas de codigo[K
line 15: set hidden[K
line 16: set ignorecase "No distingue entre mayusculas y minusculas[K
-- More --[K[?25h[?25l[24;1H[10Xline 17: set lazyredraw "Permite que se actualice el archivo sin tener que cerr[H[M[23B[J[23;80Ha[H[22M
rlo[K
line 18: set list "Muestra los espacios en blanco y los caracteres especiales co
mo tabuladores[K
line 19: set mouse= "Desactiva el uso del mouse[K
line 20: set nobackup "No crea archivos de respaldo[K
line 21: set nofoldenable "Permite que se puedan colapsar las lineas de codigo[K
line 22: set nowrap "No permite que el texto se desborde de la pantalla[K
line 23: set nowritebackup[K
line 24: set number[K
line 25: set numberwidth=1 "Ancho de la columna de numeros de linea[K
line 26: set relativenumber "Muestra el numero de linea relativo" copy paste to[K
system clipboard[K
line 27: set ruler "Muestra la posicion del cursor en la parte inferior[K
line 28: set shiftwidth=4 "Ancho de sangria[K
line 29: set showcmd "Muestra el comando que se esta ejecutando en la parte infe
rior[K
line 30: set showmatch "Muestra el parentesis que cierra[K
line 31: set signcolumn=yes "Muestra la columna de signos[K
line 32: set smartcase "Si se escribe una mayuscula, se distingue entre mayuscul
as y minusculas[K
line 33: set smartindent "Indentacion inteligente[K
line 34: set spelllang=es,en_us[K
-- More --[K[?25h[?25l[CSPACE/d/j: screen/page/line down, b/u/k: up, q: quit[?25h[?25l[24;1H[63XSearching for "spell/es.vim" in runtime path[H[23M
Searching for "/home/cesarguzmanlopez/.bash_vim/Config_Vim/spell/es.vim"[K
Searching for "/home/cesarguzmanlopez/.config/nvim/spell/es.vim"[K
Searching for "/home/cesarguzmanlopez/.local/share/nvim/site/spell/es.vim"[K
Searching for "/usr/share/nvim/site/spell/es.vim"[K
Searching for "/usr/share/nvim/runtime/spell/es.vim"[K
Searching for "/usr/share/vim/vimfiles/spell/es.vim"[K
not found in runtime path: "spell/es.vim"[K
line 35: set tabstop=4 "Ancho de tabulacion[K
line 36: set undodir=~/.vim/undodir[K
line 37: set undofile "Permite que se pueda desacer en el achivo aun aun cuando[K
se haya cerrado[K
line 38: set updatetime=200 "Tiempo de espera para que se actualice el archivo[K
line 39: set nowrap "Permite que el texto se ajuste al tamaño de la pantalla[K
line 40: set wrapmargin=0 "Margen de ajuste de texto[K
line 41: "hacer que la tecla pg Up y pg Dn se muevan por pantalla al 90% de la p
antalla[K
line 42: set fcs=eob:\[K
finished sourcing /home/cesarguzmanlopez/.bash_vim/Config_Vim/Default.vim[K
continuing in /home/cesarguzmanlopez/.bash_vim/init.vim[K
line 8: source $OHS/Config_Vim/Plugins.vim[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim/Config_Vim)[K
-- More --[K[?25h[?25l[CSPACE/d/j: screen/page/line down, b/u/k: up, q: quit[?25h[?25l[24;1H[63Xchdir(/home/cesarguzmanlopez/.bash_vim)[H[23M
line 8: sourcing "/home/cesarguzmanlopez/.bash_vim/Config_Vim/Plugins.vim"[K
line 1: call plug#begin('~/.vim/plugged')[K
Searching for "autoload/plug.vim" in runtime path[K
Searching for "/home/cesarguzmanlopez/.bash_vim/Config_Vim/autoload/plug.vim"[K
Searching for "/home/cesarguzmanlopez/.config/nvim/autoload/plug.vim"[K
Searching for "/home/cesarguzmanlopez/.local/share/nvim/site/autoload/plug.vim"[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/home/cesarguzmanlopez/.local/share/nvim/site/autoload)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
line 1: sourcing "/home/cesarguzmanlopez/.local/share/nvim/site/autoload/plug.vi
m"[K
line 1: " vim-plug: Vim plugin manager[K
line 2: " ============================[K
line 3: "[K
line 4: " Download plug.vim and put it in ~/.vim/autoload[K
line 5: "[K
line 6: "   curl -fLo ~/.vim/autoload/plug.vim --create-dirs \[K
line 7: "     https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vi
m[K
line 8: "[K
line 9: " Edit your .vimrc[K
line 10: "[K
-- More --[K[?25h[?25l[H[L[Kchdir(/home/cesarguzmanlopez/.bash_vim/Config_Vim)[23B[10X-- More --[?25h[?25l[H[L[Kchdir(/home/cesarguzmanlopez/.bash_vim)[23B[26X-- More --[?25h[?25l[H[L[Kline 8: source $OHS/Config_Vim/Plugins.vim[23B[9X-- More --[?25h[?25l[H[L[Kcontinuing in /home/cesarguzmanlopez/.bash_vim/init.vim[23B [24;1H-- More --[?25h[?25l[CSPACE/d/j: screen/page/line down, b/u/k: up, q: quit[?25h[?25l[H[L[Kfinished sourcing /home/cesarguzmanlopez/.bash_vim/Config_Vim/Default.vim[23B[J-- More --[?25h[?25l[H[L[Kline 42: set fcs=eob:\[23B[62X-- More --[?25h[?25l[H[L[Kantalla[23B[9X-- More --[?25h[?25l[H[L[Kline 41: "hacer que la tecla pg Up y pg Dn se muevan por pantalla al 90% de la p[23B[57X-- More --[?25h[?25l[H[L[Kline 40: set wrapmargin=0 "Margen de ajuste de texto[23B[9X-- More --[?25h[?25l[H[L[Kline 39: set nowrap "Permite que el texto se ajuste al tamaño de la pantalla[23B[38X-- More --[?25h[?25l[H[L[Kline 38: set updatetime=200 "Tiempo de espera para que se actualice el archivo[23B[38X-- More --[?25h[?25l[H[L[Kse haya cerrado[23B  [24;1H-- More --[?25h[?25l[CSPACE/d/j: screen/page/line down, b/u/k: up, q: quit[?25h[?25l[H[L[Kline 37: set undofile "Permite que se pueda desacer en el achivo aun aun cuando[23B[J-- More --[?25h[?25l[CSPACE/d/j: screen/page/line down, b/u/k: up, q: quit[?25h[?25l[H[23Mline 1: sourcing "/home/cesarguzmanlopez/.local/share/nvim/site/autoload/plug.vi
m"[K
line 1: " vim-plug: Vim plugin manager[K
line 2: " ============================[K
line 3: "[K
line 4: " Download plug.vim and put it in ~/.vim/autoload[K
line 5: "[K
line 6: "   curl -fLo ~/.vim/autoload/plug.vim --create-dirs \[K
line 7: "     https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vi
m[K
line 8: "[K
line 9: " Edit your .vimrc[K
line 10: "[K
line 11: "   call plug#begin('~/.vim/plugged')[K
line 12: "[K
line 13: "   " Make sure you use single quotes[K
line 14: "[K
line 15: "   " Shorthand notation; fetches https://github.com/junegunn/vim-easy-
align[K
line 16: "   Plug 'junegunn/vim-easy-align'[K
line 17: "[K
line 18: "   " Any valid git URL is allowed[K
line 19: "   Plug 'https://github.com/junegunn/vim-github-dashboard.git'[K
-- More --[K[?25h[?25l[24;1H[10Xline 20: "[H[23M
line 21: "   " Multiple Plug commands can be written in a single line using | se
parators[K
line 22: "   Plug 'SirVer/ultisnips' | Plug 'honza/vim-snippets'[K
line 23: "[K
line 24: "   " On-demand loading[K
line 25: "   Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }[K
line 26: "   Plug 'tpope/vim-fireplace', { 'for': 'clojure' }[K
line 27: "[K
line 28: "   " Using a non-default branch[K
line 29: "   Plug 'rdnetto/YCM-Generator', { 'branch': 'stable' }[K
line 30: "[K
line 31: "   " Using a tagged release; wildcard allowed (requires git 1.9.2 or a
bove)[K
line 32: "   Plug 'fatih/vim-go', { 'tag': '*' }[K
line 33: "[K
line 34: "   " Plugin options[K
line 35: "   Plug 'nsf/gocode', { 'tag': 'v.20150303', 'rtp': 'vim' }[K
line 36: "[K
line 37: "   " Plugin outside ~/.vim/plugged with post-update hook[K
line 38: "   Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }[K
line 39: "[K
line 40: "   " Unmanaged plugin (manually installed and updated)[K
-- More --[K[?25h[?25l[CSPACE/d/j: screen/page/line down, b/u/k: up, q: quit[?25h[?25l[24;1H[63Xline 41: "   Plug '~/my-prototype-plugin'[H[23M
line 42: "[K
line 43: "   " Initialize plugin system[K
line 44: "   call plug#end()[K
line 45: "[K
line 46: " Then reload .vimrc and :PlugInstall to install plugins.[K
line 47: "[K
line 48: " Plug options:[K
line 49: "[K
line 50: "| Option                  | Description[K
       |[K
line 51: "| ----------------------- | ------------------------------------------
------ |[K
line 52: "| `branch`/`tag`/`commit` | Branch/tag/commit of the repository to use
       |[K
line 53: "| `rtp`                   | Subdirectory that contains Vim plugin[K
       |[K
line 54: "| `dir`                   | Custom directory for the plugin[K
       |[K
line 55: "| `as`                    | Use different name for the plugin[K
       |[K
line 56: "| `do`                    | Post-update hook (string or funcref)[K
       |[K
-- More --[K[?25h[?25l[CSPACE/d/j: screen/page/line down, b/u/k: up, q: quit[?25h[?25l[24;1H[63Xline 57: "| `on`                    | On-demand loading: Commands or `<Plug>`-m[H[M[23B[J[23;80Ha[H[22M
ppings |[K
line 58: "| `for`                   | On-demand loading: File types[K
       |[K
line 59: "| `frozen`                | Do not update unless explicitly specified[K
       |[K
line 60: "[K
line 61: " More information: https://github.com/junegunn/vim-plug[K
line 62: "[K
line 63: "[K
line 64: " Copyright (c) 2017 Junegunn Choi[K
line 65: "[K
line 66: " MIT License[K
line 67: "[K
line 68: " Permission is hereby granted, free of charge, to any person obtaining
[K
line 69: " a copy of this software and associated documentation files (the[K
line 70: " "Software"), to deal in the Software without restriction, including[K
line 71: " without limitation the rights to use, copy, modify, merge, publish,[K
line 72: " distribute, sublicense, and/or sell copies of the Software, and to[K
line 73: " permit persons to whom the Software is furnished to do so, subject to
[K
line 74: " the following conditions:[K
-- More --[K[?25h[?25l[24;1H[10Xline 75: "[H[23M
line 76: " The above copyright notice and this permission notice shall be[K
line 77: " included in all copies or substantial portions of the Software.[K
line 78: "[K
line 79: " THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,[K
line 80: " EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF[K
line 81: " MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND[K
line 82: " NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS B
E[K
line 83: " LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTIO
N[K
line 84: " OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
[K
line 85: " WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.[K
line 86:[K
line 87: if exists('g:loaded_plug')[K
line 88:   finish[K
line 89: endif[K
line 90: let g:loaded_plug = 1[K
line 91:[K
line 92: let s:cpo_save = &cpo[K
line 93: set cpo&vim[K
line 94:[K
-- More --[K[?25h[?25l[CSPACE/d/j: screen/page/line down, b/u/k: up, q: quit[?25h[?25l[24;1H[63Xline 95: let s:plug_src = 'https://github.com/junegunn/vim-plug.git'[H[23M
line 96: let s:plug_tab = get(s:, 'plug_tab', -1)[K
line 97: let s:plug_buf = get(s:, 'plug_buf', -1)[K
line 98: let s:mac_gui = has('gui_macvim') && has('gui_running')[K
line 99: let s:is_win = has('win32')[K
line 100: let s:nvim = has('nvim-0.2') || (has('nvim') && exists('*jobwait') &&[K
!s:is_win)[K
line 101: let s:vim8 = has('patch-8.0.0039') && exists('*job_start')[K
line 102: if s:is_win && &shellslash[K
line 103:   set noshellslash[K
line 104:   let s:me = resolve(expand('<sfile>:p'))[K
line 105:   set shellslash[K
line 106: else[K
line 107:   let s:me = resolve(expand('<sfile>:p'))[K
line 108: endif[K
line 109: let s:base_spec = { 'branch': '', 'frozen': 0 }[K
line 110: let s:TYPE = {   'string':  type(''),   'list':    type([]),   'dict':
    type({}),   'funcref': type(function('call')) }[K
line 116: let s:loaded = get(s:, 'loaded', {})[K
line 117: let s:triggers = get(s:, 'triggers', {})[K
line 118:[K
line 119: function! s:is_powershell(shell)[K
line 122:[K
-- More --[K[?25h[?25l[24;1H[10Xline 123: function! s:isabsolute(dir) abort[H[23M
line 126:[K
line 127: function! s:git_dir(dir) abort[K
line 141:[K
line 142: function! s:git_origin_url(dir) abort[K
line 150:[K
line 151: function! s:git_revision(dir) abort[K
line 178:[K
line 179: function! s:git_local_branch(dir) abort[K
line 188:[K
line 189: function! s:git_origin_branch(spec)[K
line 206:[K
line 207: if s:is_win[K
line 208:   function! s:plug_call(fn, ...)[K
line 217: else[K
line 218:   function! s:plug_call(fn, ...)[K
line 221: endif[K
line 222:[K
line 223: function! s:plug_getcwd()[K
line 226:[K
line 227: function! s:plug_fnamemodify(fname, mods)[K
line 230:[K
line 231: function! s:plug_expand(fmt)[K
-- More --[K[?25h[?25l[24;1H[10Xline 234:[H[23M
line 235: function! s:plug_tempname()[K
line 238:[K
line 239: function! plug#begin(...)[K
line 264:[K
line 265: function! s:define_commands()[K
line 288:[K
line 289: function! s:to_a(v)[K
line 292:[K
line 293: function! s:to_s(v)[K
line 296:[K
line 297: function! s:glob(from, pattern)[K
line 300:[K
line 301: function! s:source(from, ...)[K
line 311:[K
line 312: function! s:assoc(dict, key, val)[K
line 315:[K
line 316: function! s:ask(message, ...)[K
line 325:[K
line 326: function! s:ask_no_interrupt(...)[K
line 333:[K
line 334: function! s:lazy(plug, opt)[K
line 341:[K
-- More --[K[?25h[?25l[24;1H[10Xline 342: function! plug#end()[H[23M
line 434:[K
line 435: function! s:loaded_names()[K
line 438:[K
line 439: function! s:load_plugin(spec)[K
line 442:[K
line 443: function! s:reload_plugins()[K
line 448:[K
line 449: function! s:trim(str)[K
line 452:[K
line 453: function! s:version_requirement(val, min)[K
line 462:[K
line 463: function! s:git_version_requirement(...)[K
line 469:[K
line 470: function! s:progress_opt(base)[K
line 474:[K
line 475: function! s:rtp(spec)[K
line 478:[K
line 479: if s:is_win[K
line 480:   function! s:path(path)[K
line 483:[K
line 484:   function! s:dirpath(path)[K
line 487:[K
-- More --[K[?25h[?25l[24;1H[10Xline 488:   function! s:is_local_plug(repo)[H[23M
line 491:[K
line 492:   " Copied from fzf[K
line 493:   function! s:wrap_cmds(cmds)[K
line 507:[K
line 508:   function! s:batchfile(cmd)[K
line 517: else[K
line 518:   function! s:path(path)[K
line 521:[K
line 522:   function! s:dirpath(path)[K
line 525:[K
line 526:   function! s:is_local_plug(repo)[K
line 529: endif[K
line 530:[K
line 531: function! s:err(msg)[K
line 536:[K
line 537: function! s:warn(cmd, msg)[K
line 542:[K
line 543: function! s:esc(path)[K
line 546:[K
line 547: function! s:escrtp(path)[K
line 550:[K
line 551: function! s:remove_rtp()[K
-- More --[K[?25h[?25l[24;1H[10Xline 561:[H[23M
line 562: function! s:reorg_rtp()[K
line 588:[K
line 589: function! s:doautocmd(...)[K
line 594:[K
line 595: function! s:dobufread(names)[K
line 608:[K
line 609: function! plug#load(...)[K
line 632:[K
line 633: function! s:remove_triggers(name)[K
line 646:[K
line 647: function! s:lod(names, types, ...)[K
line 668:[K
line 669: function! s:lod_ft(pat, names)[K
line 676:[K
line 677: function! s:lod_cmd(cmd, bang, l1, l2, args, names)[K
line 682:[K
line 683: function! s:lod_map(map, names, with_prefix, prefix)[K
line 708:[K
line 709: function! plug#(repo, ...)[K
line 728:[K
line 729: function! s:parse_options(arg)[K
line 766:[K
-- More --[K[?25h[?25l[24;1H[10Xline 767: function! s:infer_properties(name, repo)[H[23M
line 784:[K
line 785: function! s:install(force, names)[K
line 788:[K
line 789: function! s:update(force, names)[K
line 792:[K
line 793: function! plug#helptags()[K
line 805:[K
line 806: function! s:syntax()[K
line 858:[K
line 859: function! s:lpad(str, len)[K
line 862:[K
line 863: function! s:lines(msg)[K
line 866:[K
line 867: function! s:lastline(msg)[K
line 870:[K
line 871: function! s:new_window()[K
line 874:[K
line 875: function! s:plug_window_exists()[K
line 879:[K
line 880: function! s:switch_in()[K
line 898:[K
line 899: function! s:switch_out(...)[K
-- More --[K[?25h[?25l[24;1H[10Xline 912:[H[23M
line 913: function! s:finish_bindings()[K
line 922:[K
line 923: function! s:prepare(...)[K
line 965:[K
line 966: function! s:close_pane()[K
line 974:[K
line 975: function! s:assign_name()[K
line 986:[K
line 987: function! s:chsh(swap)[K
line 1001:[K
line 1002: function! s:bang(cmd, ...)[K
line 1023:[K
line 1024: function! s:regress_bar()[K
line 1028:[K
line 1029: function! s:is_updated(dir)[K
line 1032:[K
line 1033: function! s:do(pull, force, todo)[K
line 1087:[K
line 1088: function! s:hash_match(a, b)[K
line 1091:[K
line 1092: function! s:checkout(spec)[K
line 1102:[K
-- More --[K[?25h[?25l[24;1H[10Xline 1103: function! s:finish(pull)[H[23M
line 1126:[K
line 1127: function! s:retry()[K
line 1135:[K
line 1136: function! s:is_managed(name)[K
line 1139:[K
line 1140: function! s:names(...)[K
line 1143:[K
line 1144: function! s:check_ruby()[K
line 1154:[K
line 1155: function! s:update_impl(pull, force, args) abort[K
line 1278:[K
line 1279: function! s:log4(name, msg)[K
line 1283:[K
line 1284: function! s:update_finish()[K
line 1345:[K
line 1346: function! s:job_abort()[K
line 1363:[K
line 1364: function! s:last_non_empty_line(lines)[K
line 1374:[K
line 1375: function! s:job_out_cb(self, data) abort[K
line 1388:[K
line 1389: function! s:job_exit_cb(self, data) abort[K
-- More --[K[?25h[?25l[CSPACE/d/j: screen/page/line down, b/u/k: up, q: quit[?25h[?25l[24;1H[63Xline 1395:[H[23M
line 1396: function! s:job_cb(fn, job, ch, data)[K
line 1402:[K
line 1403: function! s:nvim_cb(job_id, data, event) dict abort[K
line 1408:[K
line 1409: function! s:spawn(name, cmd, opts)[K
line 1459:[K
line 1460: function! s:reap(name)[K
line 1476:[K
line 1477: function! s:bar()[K
line 1486:[K
line 1487: function! s:logpos(name)[K
line 1501:[K
line 1502: function! s:log(bullet, name, lines)[K
line 1519:[K
line 1520: function! s:update_vim()[K
line 1526:[K
line 1527: function! s:tick()[K
line 1584:[K
line 1585: function! s:update_python()[K
line 1973:[K
line 1974: function! s:update_ruby()[K
line 2199:[K
-- More --[K[?25h[?25l[CSPACE/d/j: screen/page/line down, b/u/k: up, q: quit[?25h[?25l[24;1H[63Xline 2200: function! s:shellesc_cmd(arg, script)[H[23M
line 2204:[K
line 2205: function! s:shellesc_ps1(arg)[K
line 2208:[K
line 2209: function! s:shellesc_sh(arg)[K
line 2212:[K
line 2213: " Escape the shell argument based on the shell.[K
line 2214: " Vim and Neovim's shellescape() are insufficient.[K
line 2215: " 1. shellslash determines whether to use single/double quotes.[K
line 2216: "    Double-quote escaping is fragile for cmd.exe.[K
line 2217: " 2. It does not work for powershell.[K
line 2218: " 3. It does not work for *sh shells if the command is executed[K
line 2219: "    via cmd.exe (ie. cmd.exe /c sh -c command command_args)[K
line 2220: " 4. It does not support batchfile syntax.[K
line 2221: "[K
line 2222: " Accepts an optional dictionary with the following keys:[K
line 2223: " - shell: same as Vim/Neovim 'shell' option.[K
line 2224: "          If unset, fallback to 'cmd.exe' on Windows or 'sh'.[K
line 2225: " - script: If truthy and shell is cmd.exe, escape for batchfile synt
ax.[K
line 2226: function! plug#shellescape(arg, ...)[K
line 2240:[K
line 2241: function! s:glob_dir(path)[K
-- More --[K[?25h[?25l[24;1H[10Xline 2244:[H[23M
line 2245: function! s:progress_bar(line, bar, total)[K
line 2248:[K
line 2249: function! s:compare_git_uri(a, b)[K
line 2260:[K
line 2261: function! s:format_message(bullet, name, message)[K
line 2269:[K
line 2270: function! s:with_cd(cmd, dir, ...)[K
line 2274:[K
line 2275: function! s:system(cmd, ...)[K
line 2307:[K
line 2308: function! s:system_chomp(...)[K
line 2312:[K
line 2313: function! s:git_validate(spec, check_branch)[K
line 2373:[K
line 2374: function! s:rm_rf(dir)[K
line 2381:[K
line 2382: function! s:clean(force)[K
line 2452:[K
line 2453: function! s:delete_op(type, ...)[K
line 2456:[K
line 2457: function! s:delete(range, force)[K
line 2491:[K
-- More --[K[?25h[?25l[24;1H[10Xline 2492: function! s:upgrade()[H[23M
line 2518:[K
line 2519: function! s:upgrade_specs()[K
line 2524:[K
line 2525: function! s:status()[K
line 2570:[K
line 2571: function! s:extract_name(str, prefix, suffix)[K
line 2574:[K
line 2575: function! s:status_load(lnum)[K
line 2585:[K
line 2586: function! s:status_update() range[K
line 2594:[K
line 2595: function! s:is_preview_window_open()[K
line 2602:[K
line 2603: function! s:find_name(lnum)[K
line 2616:[K
line 2617: function! s:preview_commit()[K
line 2666:[K
line 2667: function! s:section(flags)[K
line 2670:[K
line 2671: function! s:format_git_log(line)[K
line 2682:[K
line 2683: function! s:append_ul(lnum, text)[K
-- More --[K[?25h[?25l[24;1H[10Xline 2686:[H[23M
line 2687: function! s:diff()[K
line 2747:[K
line 2748: function! s:revert()[K
line 2765:[K
line 2766: function! s:snapshot(force, ...) abort[K
line 2797:[K
line 2798: function! s:split_rtp()[K
line 2801:[K
line 2802: let s:first_rtp = s:escrtp(get(s:split_rtp(), 0, ''))[K
calling <SNR>16_split_rtp()[K
line 1:   return split(&rtp, '\\\@<!,')[K
<SNR>16_split_rtp returning ['/home/cesarguzmanlopez/.bash_vim/Con...vim/after',
 '/usr/share/vim/vimfiles/'][K
continuing in /home/cesarguzmanlopez/.local/share/nvim/site/autoload/plug.vim[K
calling <SNR>16_escrtp('/home/cesarguzmanlopez/.bash_vim/Config_Vim')[K
line 1:   return escape(a:path, ' ,')[K
<SNR>16_escrtp returning '/home/cesarguzmanlopez/.bash_vim/Config_Vim'[K
continuing in /home/cesarguzmanlopez/.local/share/nvim/site/autoload/plug.vim[K
line 2803: let s:last_rtp  = s:escrtp(get(s:split_rtp(), -1, ''))[K
calling <SNR>16_split_rtp()[K
line 1:   return split(&rtp, '\\\@<!,')[K
<SNR>16_split_rtp returning ['/home/cesarguzmanlopez/.bash_vim/Con...vim/after',
-- More --[K[?25h[?25l[24;1H[10X[C'/usr/share/vim/vimfiles/'][H[23M
continuing in /home/cesarguzmanlopez/.local/share/nvim/site/autoload/plug.vim[K
calling <SNR>16_escrtp('/usr/share/vim/vimfiles/')[K
line 1:   return escape(a:path, ' ,')[K
<SNR>16_escrtp returning '/usr/share/vim/vimfiles/'[K
continuing in /home/cesarguzmanlopez/.local/share/nvim/site/autoload/plug.vim[K
line 2804:[K
line 2805: if exists('g:plugs')[K
line 2806:   let g:plugs_order = get(g:, 'plugs_order', keys(g:plugs))[K
line 2807:   call s:upgrade_specs()[K
line 2808:   call s:define_commands()[K
line 2809: endif[K
line 2810:[K
line 2811: let &cpo = s:cpo_save[K
line 2812: unlet s:cpo_save[K
finished sourcing /home/cesarguzmanlopez/.local/share/nvim/site/autoload/plug.vi
m[K
continuing in /home/cesarguzmanlopez/.bash_vim/Config_Vim/Plugins.vim[K
calling plug#begin('~/.vim/plugged')[K
line 1:   if a:0 > 0[K
line 2:     let s:plug_home_org = a:1[K
line 3:     let home = s:path(s:plug_fnamemodify(s:plug_expand(a:1), ':p'))[K
calling <SNR>16_plug_expand('~/.vim/plugged')[K
-- More --[K[?25h[?25l[24;1H[10Xline 1:   return s:plug_call('expand', a:fmt, 1)[H[23M
calling <SNR>16_plug_call('expand', '~/.vim/plugged', 1)[K
line 1:     return call(a:fn, a:000)[K
<SNR>16_plug_call returning '/home/cesarguzmanlopez/.vim/plugged'[K
continuing in <SNR>16_plug_expand[K
<SNR>16_plug_expand returning '/home/cesarguzmanlopez/.vim/plugged'[K
continuing in plug#begin[K
calling <SNR>16_plug_fnamemodify('/home/cesarguzmanlopez/.vim/plugged', ':p')[K
line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)[K
calling <SNR>16_plug_call('fnamemodify', '/home/cesarguzmanlopez/.vim/plugged',[K
':p')[K
line 1:     return call(a:fn, a:000)[K
<SNR>16_plug_call returning '/home/cesarguzmanlopez/.vim/plugged/'[K
continuing in <SNR>16_plug_fnamemodify[K
<SNR>16_plug_fnamemodify returning '/home/cesarguzmanlopez/.vim/plugged/'[K
continuing in plug#begin[K
calling <SNR>16_path('/home/cesarguzmanlopez/.vim/plugged/')[K
line 1:     return s:trim(a:path)[K
calling <SNR>16_trim('/home/cesarguzmanlopez/.vim/plugged/')[K
line 1:   return substitute(a:str, '[\/]\+$', '', '')[K
<SNR>16_trim returning '/home/cesarguzmanlopez/.vim/plugged'[K
continuing in <SNR>16_path[K
<SNR>16_path returning '/home/cesarguzmanlopez/.vim/plugged'[K
-- More --[K[?25h[?25l[CSPACE/d/j: screen/page/line down, b/u/k: up, q: quit[?25h[?25l[24;1H[63Xcontinuing in plug#begin[H[23M
line 4:   elseif exists('g:plug_home')[K
line 5:     let home = s:path(g:plug_home)[K
line 6:   elseif has('nvim')[K
line 7:     let home = stdpath('data') . '/plugged'[K
line 8:   elseif !empty(&rtp)[K
line 9:     let home = s:path(split(&rtp, ',')[0]) . '/plugged'[K
line 10:   else[K
line 11:     return s:err('Unable to determine plug home. Try calling plug#begin
() with a path argument.')[K
line 12:   endif[K
line 13:   if s:plug_fnamemodify(home, ':t') ==# 'plugin' && s:plug_fnamemodify(
home, ':h') ==# s:first_rtp[K
calling <SNR>16_plug_fnamemodify('/home/cesarguzmanlopez/.vim/plugged', ':t')[K
line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)[K
calling <SNR>16_plug_call('fnamemodify', '/home/cesarguzmanlopez/.vim/plugged',[K
':t')[K
line 1:     return call(a:fn, a:000)[K
<SNR>16_plug_call returning 'plugged'[K
continuing in <SNR>16_plug_fnamemodify[K
<SNR>16_plug_fnamemodify returning 'plugged'[K
continuing in plug#begin[K
line 14:     return s:err('Invalid plug home. '.home.' is a standard Vim runtime
-- More --[K[?25h[?25l[24;1H[10X[Cpath and is not allowed.')[H[23M
line 15:   endif[K
line 16:[K
line 17:   let g:plug_home = home[K
line 18:   let g:plugs = {}[K
line 19:   let g:plugs_order = [][K
line 20:   let s:triggers = {}[K
line 21:[K
line 22:   call s:define_commands()[K
calling <SNR>16_define_commands()[K
line 1:   command! -nargs=+ -bar Plug call plug#(<args>)[K
line 2:   if !executable('git')[K
line 3:     return s:err('`git` executable not found. Most commands will not be[K
available. To suppress this message, prepend `silent!` to `call plug#begin(...)`
.')[K
line 4:   endif[K
line 5:   if has('win32') && &shellslash && (&shell =~# 'cmd\(\.exe\)\?$' || s:i
s_powershell(&shell))[K
line 8:     return s:err('vim-plug does not support shell, ' . &shell . ', when[K
shellslash is set.')[K
line 9:   endif[K
line 10:   if !has('nvim') && (has('win32') || has('win32unix')) && !has('multi_
byte')[K
-- More --[K[?25h[?25l[24;1H[10Xline 13:     return s:err('Vim needs +multi_byte feature on Windows to run shel[H[M[23B[J[23;80Hl[H[22M
 commands. Enable +iconv for best results.')[K
line 14:   endif[K
line 15:   command! -nargs=* -bar -bang -complete=customlist,s:names PlugInstall
 call s:install(<bang>0, [<f-args>])[K
line 16:   command! -nargs=* -bar -bang -complete=customlist,s:names PlugUpdate[K
 call s:update(<bang>0, [<f-args>])[K
line 17:   command! -nargs=0 -bar -bang PlugClean call s:clean(<bang>0)[K
line 18:   command! -nargs=0 -bar PlugUpgrade if s:upgrade() | execute 'source'[K
s:esc(s:me) | endif[K
line 19:   command! -nargs=0 -bar PlugStatus  call s:status()[K
line 20:   command! -nargs=0 -bar PlugDiff    call s:diff()[K
line 21:   command! -nargs=? -bar -bang -complete=file PlugSnapshot call s:snaps
hot(<bang>0, <f-args>)[K
<SNR>16_define_commands returning #0[K
continuing in plug#begin[K
line 23:   return 1[K
plug#begin returning #1[K
continuing in /home/cesarguzmanlopez/.bash_vim/Config_Vim/Plugins.vim[K
line 2:     "Plug 'ycm-core/YouCompleteMe', { 'do': './install.py --all' }[K
line 3:     Plug 'SirVer/ultisnips' | Plug 'honza/vim-snippets'[K
line 3: call plug#('SirVer/ultisnips')[K
calling plug#('SirVer/ultisnips')[K
-- More --[K[?25h[?25l[24;1H[10Xline 1:   if a:0 > 1[H[23M
line 2:     return s:err('Invalid number of arguments (1..2)')[K
line 3:   endif[K
line 4:[K
line 5:   try[K
line 6:     let repo = s:trim(a:repo)[K
calling <SNR>16_trim('SirVer/ultisnips')[K
line 1:   return substitute(a:str, '[\/]\+$', '', '')[K
<SNR>16_trim returning 'SirVer/ultisnips'[K
continuing in plug#[K
line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec[K
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??')
)[K
calling <SNR>16_plug_fnamemodify('SirVer/ultisnips', ':t:s?\.git$??')[K
line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)[K
calling <SNR>16_plug_call('fnamemodify', 'SirVer/ultisnips', ':t:s?\.git$??')[K
line 1:     return call(a:fn, a:000)[K
<SNR>16_plug_call returning 'ultisnips'[K
continuing in <SNR>16_plug_fnamemodify[K
<SNR>16_plug_fnamemodify returning 'ultisnips'[K
continuing in plug#[K
line 9:     let spec = extend(s:infer_properties(name, repo), opts)[K
calling <SNR>16_infer_properties('ultisnips', 'SirVer/ultisnips')[K
-- More --[K[?25h[?25l[24;1H[10Xline 1:   let repo = a:repo[H[23M
line 2:   if s:is_local_plug(repo)[K
calling <SNR>16_is_local_plug('SirVer/ultisnips')[K
line 1:     return a:repo[0] =~ '[/$~]'[K
<SNR>16_is_local_plug returning #0[K
continuing in <SNR>16_infer_properties[K
line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }[K
line 4:   else[K
line 5:     if repo =~ ':'[K
line 6:       let uri = repo[K
line 7:     else[K
line 8:       if repo !~ '/'[K
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expa
nsion is deprecated)', repo)[K
line 10:       endif[K
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s
.git')[K
line 12:       let uri = printf(fmt, repo)[K
line 13:     endif[K
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }[K
calling <SNR>16_dirpath('/home/cesarguzmanlopez/.vim/plugged/ultisnips')[K
line 1:     return substitute(a:path, '[/\\]*$', '/', '')[K
<SNR>16_dirpath returning '/home/cesarguzmanlopez/.vim/plugged/ultisnips/'[K
-- More --[K[?25h[?25l[24;1H[10Xcontinuing in <SNR>16_infer_properties[H[23M
<SNR>16_infer_properties returning {'uri': 'https://git::@github.com/SirV...argu
zmanlopez/.vim/plugged/ultisnips/'}[K
continuing in plug#[K
line 10:     if !has_key(g:plugs, name)[K
line 11:       call add(g:plugs_order, name)[K
line 12:     endif[K
line 13:     let g:plugs[name] = spec[K
line 14:     let s:loaded[name] = get(s:loaded, name, 0)[K
line 15:   catch[K
line 16:     return s:err(repo . ' ' . v:exception)[K
line 17:   endtry[K
plug# returning #0[K
continuing in /home/cesarguzmanlopez/.bash_vim/Config_Vim/Plugins.vim[K
line 3:  Plug 'honza/vim-snippets'[K
line 3: call plug#('honza/vim-snippets')[K
calling plug#('honza/vim-snippets')[K
line 1:   if a:0 > 1[K
line 2:     return s:err('Invalid number of arguments (1..2)')[K
line 3:   endif[K
line 4:[K
line 5:   try[K
line 6:     let repo = s:trim(a:repo)[K
-- More --[K[?25h[?25l[24;1H[10Xcalling <SNR>16_trim('honza/vim-snippets')[H[23M
line 1:   return substitute(a:str, '[\/]\+$', '', '')[K
<SNR>16_trim returning 'honza/vim-snippets'[K
continuing in plug#[K
line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec[K
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??')
)[K
calling <SNR>16_plug_fnamemodify('honza/vim-snippets', ':t:s?\.git$??')[K
line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)[K
calling <SNR>16_plug_call('fnamemodify', 'honza/vim-snippets', ':t:s?\.git$??')[K
line 1:     return call(a:fn, a:000)[K
<SNR>16_plug_call returning 'vim-snippets'[K
continuing in <SNR>16_plug_fnamemodify[K
<SNR>16_plug_fnamemodify returning 'vim-snippets'[K
continuing in plug#[K
line 9:     let spec = extend(s:infer_properties(name, repo), opts)[K
calling <SNR>16_infer_properties('vim-snippets', 'honza/vim-snippets')[K
line 1:   let repo = a:repo[K
line 2:   if s:is_local_plug(repo)[K
calling <SNR>16_is_local_plug('honza/vim-snippets')[K
line 1:     return a:repo[0] =~ '[/$~]'[K
<SNR>16_is_local_plug returning #0[K
continuing in <SNR>16_infer_properties[K
-- More --[K[?25h[?25l[24;1H[10Xline 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }[H[23M
line 4:   else[K
line 5:     if repo =~ ':'[K
line 6:       let uri = repo[K
line 7:     else[K
line 8:       if repo !~ '/'[K
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expa
nsion is deprecated)', repo)[K
line 10:       endif[K
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s
.git')[K
line 12:       let uri = printf(fmt, repo)[K
line 13:     endif[K
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }[K
calling <SNR>16_dirpath('/home/cesarguzmanlopez/.vim/plugged/vim-snippets')[K
line 1:     return substitute(a:path, '[/\\]*$', '/', '')[K
<SNR>16_dirpath returning '/home/cesarguzmanlopez/.vim/plugged/vim-snippets/'[K
continuing in <SNR>16_infer_properties[K
<SNR>16_infer_properties returning {'uri': 'https://git::@github.com/honz...uzma
nlopez/.vim/plugged/vim-snippets/'}[K
continuing in plug#[K
line 10:     if !has_key(g:plugs, name)[K
line 11:       call add(g:plugs_order, name)[K
-- More --[K[?25h[?25l[24;1H[10Xline 12:     endif[H[23M
line 13:     let g:plugs[name] = spec[K
line 14:     let s:loaded[name] = get(s:loaded, name, 0)[K
line 15:   catch[K
line 16:     return s:err(repo . ' ' . v:exception)[K
line 17:   endtry[K
plug# returning #0[K
continuing in /home/cesarguzmanlopez/.bash_vim/Config_Vim/Plugins.vim[K
line 4:     Plug 'Yggdroot/indentLine'[K
line 4: call plug#('Yggdroot/indentLine')[K
calling plug#('Yggdroot/indentLine')[K
line 1:   if a:0 > 1[K
line 2:     return s:err('Invalid number of arguments (1..2)')[K
line 3:   endif[K
line 4:[K
line 5:   try[K
line 6:     let repo = s:trim(a:repo)[K
calling <SNR>16_trim('Yggdroot/indentLine')[K
line 1:   return substitute(a:str, '[\/]\+$', '', '')[K
<SNR>16_trim returning 'Yggdroot/indentLine'[K
continuing in plug#[K
line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec[K
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??')
-- More --[K[?25h[?25l[24;1H[10X)[H[23M
calling <SNR>16_plug_fnamemodify('Yggdroot/indentLine', ':t:s?\.git$??')[K
line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)[K
calling <SNR>16_plug_call('fnamemodify', 'Yggdroot/indentLine', ':t:s?\.git$??')
[K
line 1:     return call(a:fn, a:000)[K
<SNR>16_plug_call returning 'indentLine'[K
continuing in <SNR>16_plug_fnamemodify[K
<SNR>16_plug_fnamemodify returning 'indentLine'[K
continuing in plug#[K
line 9:     let spec = extend(s:infer_properties(name, repo), opts)[K
calling <SNR>16_infer_properties('indentLine', 'Yggdroot/indentLine')[K
line 1:   let repo = a:repo[K
line 2:   if s:is_local_plug(repo)[K
calling <SNR>16_is_local_plug('Yggdroot/indentLine')[K
line 1:     return a:repo[0] =~ '[/$~]'[K
<SNR>16_is_local_plug returning #0[K
continuing in <SNR>16_infer_properties[K
line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }[K
line 4:   else[K
line 5:     if repo =~ ':'[K
line 6:       let uri = repo[K
line 7:     else[K
-- More --[K[?25h[?25l[24;1H[10Xline 8:       if repo !~ '/'[H[23M
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expa
nsion is deprecated)', repo)[K
line 10:       endif[K
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s
.git')[K
line 12:       let uri = printf(fmt, repo)[K
line 13:     endif[K
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }[K
calling <SNR>16_dirpath('/home/cesarguzmanlopez/.vim/plugged/indentLine')[K
line 1:     return substitute(a:path, '[/\\]*$', '/', '')[K
<SNR>16_dirpath returning '/home/cesarguzmanlopez/.vim/plugged/indentLine/'[K
continuing in <SNR>16_infer_properties[K
<SNR>16_infer_properties returning {'uri': 'https://git::@github.com/Yggd...rguz
manlopez/.vim/plugged/indentLine/'}[K
continuing in plug#[K
line 10:     if !has_key(g:plugs, name)[K
line 11:       call add(g:plugs_order, name)[K
line 12:     endif[K
line 13:     let g:plugs[name] = spec[K
line 14:     let s:loaded[name] = get(s:loaded, name, 0)[K
line 15:   catch[K
line 16:     return s:err(repo . ' ' . v:exception)[K
-- More --[K[?25h[?25l[24;1H[10Xline 17:   endtry[H[23M
plug# returning #0[K
continuing in /home/cesarguzmanlopez/.bash_vim/Config_Vim/Plugins.vim[K
line 5:     Plug 'akaron/vim-markdown-fold'[K
line 5: call plug#('akaron/vim-markdown-fold')[K
calling plug#('akaron/vim-markdown-fold')[K
line 1:   if a:0 > 1[K
line 2:     return s:err('Invalid number of arguments (1..2)')[K
line 3:   endif[K
line 4:[K
line 5:   try[K
line 6:     let repo = s:trim(a:repo)[K
calling <SNR>16_trim('akaron/vim-markdown-fold')[K
line 1:   return substitute(a:str, '[\/]\+$', '', '')[K
<SNR>16_trim returning 'akaron/vim-markdown-fold'[K
continuing in plug#[K
line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec[K
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??')
)[K
calling <SNR>16_plug_fnamemodify('akaron/vim-markdown-fold', ':t:s?\.git$??')[K
line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)[K
calling <SNR>16_plug_call('fnamemodify', 'akaron/vim-markdown-fold', ':t:s?\.git
$??')[K
-- More --[K[?25h[?25l[24;1H[10Xline 1:     return call(a:fn, a:000)[H[23M
<SNR>16_plug_call returning 'vim-markdown-fold'[K
continuing in <SNR>16_plug_fnamemodify[K
<SNR>16_plug_fnamemodify returning 'vim-markdown-fold'[K
continuing in plug#[K
line 9:     let spec = extend(s:infer_properties(name, repo), opts)[K
calling <SNR>16_infer_properties('vim-markdown-fold', 'akaron/vim-markdown-fold'
)[K
line 1:   let repo = a:repo[K
line 2:   if s:is_local_plug(repo)[K
calling <SNR>16_is_local_plug('akaron/vim-markdown-fold')[K
line 1:     return a:repo[0] =~ '[/$~]'[K
<SNR>16_is_local_plug returning #0[K
continuing in <SNR>16_infer_properties[K
line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }[K
line 4:   else[K
line 5:     if repo =~ ':'[K
line 6:       let uri = repo[K
line 7:     else[K
line 8:       if repo !~ '/'[K
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expa
nsion is deprecated)', repo)[K
line 10:       endif[K
-- More --[K[?25h[?25l[24;1H[10Xline 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%[H[M[23B[J[23;80Hs[H[22M
.git')[K
line 12:       let uri = printf(fmt, repo)[K
line 13:     endif[K
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }[K
calling <SNR>16_dirpath('/home/cesarguzmanlopez/.vim/plugged/vim-markdown-fold')
[K
line 1:     return substitute(a:path, '[/\\]*$', '/', '')[K
<SNR>16_dirpath returning '/home/cesarguzmanlopez/.vim/plugged/vim-markdown-fold
/'[K
continuing in <SNR>16_infer_properties[K
<SNR>16_infer_properties returning {'uri': 'https://git::@github.com/akar...lope
z/.vim/plugged/vim-markdown-fold/'}[K
continuing in plug#[K
line 10:     if !has_key(g:plugs, name)[K
line 11:       call add(g:plugs_order, name)[K
line 12:     endif[K
line 13:     let g:plugs[name] = spec[K
line 14:     let s:loaded[name] = get(s:loaded, name, 0)[K
line 15:   catch[K
line 16:     return s:err(repo . ' ' . v:exception)[K
line 17:   endtry[K
plug# returning #0[K
-- More --[K[?25h[?25l[24;1H[10Xcontinuing in /home/cesarguzmanlopez/.bash_vim/Config_Vim/Plugins.vim[H[23M
line 6:     Plug 'chrisbra/NrrwRgn'[K
line 6: call plug#('chrisbra/NrrwRgn')[K
calling plug#('chrisbra/NrrwRgn')[K
line 1:   if a:0 > 1[K
line 2:     return s:err('Invalid number of arguments (1..2)')[K
line 3:   endif[K
line 4:[K
line 5:   try[K
line 6:     let repo = s:trim(a:repo)[K
calling <SNR>16_trim('chrisbra/NrrwRgn')[K
line 1:   return substitute(a:str, '[\/]\+$', '', '')[K
<SNR>16_trim returning 'chrisbra/NrrwRgn'[K
continuing in plug#[K
line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec[K
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??')
)[K
calling <SNR>16_plug_fnamemodify('chrisbra/NrrwRgn', ':t:s?\.git$??')[K
line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)[K
calling <SNR>16_plug_call('fnamemodify', 'chrisbra/NrrwRgn', ':t:s?\.git$??')[K
line 1:     return call(a:fn, a:000)[K
<SNR>16_plug_call returning 'NrrwRgn'[K
continuing in <SNR>16_plug_fnamemodify[K
-- More --[K[?25h[?25l[24;1H[10X<SNR>16_plug_fnamemodify returning 'NrrwRgn'[H[23M
continuing in plug#[K
line 9:     let spec = extend(s:infer_properties(name, repo), opts)[K
calling <SNR>16_infer_properties('NrrwRgn', 'chrisbra/NrrwRgn')[K
line 1:   let repo = a:repo[K
line 2:   if s:is_local_plug(repo)[K
calling <SNR>16_is_local_plug('chrisbra/NrrwRgn')[K
line 1:     return a:repo[0] =~ '[/$~]'[K
<SNR>16_is_local_plug returning #0[K
continuing in <SNR>16_infer_properties[K
line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }[K
line 4:   else[K
line 5:     if repo =~ ':'[K
line 6:       let uri = repo[K
line 7:     else[K
line 8:       if repo !~ '/'[K
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expa
nsion is deprecated)', repo)[K
line 10:       endif[K
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s
.git')[K
line 12:       let uri = printf(fmt, repo)[K
line 13:     endif[K
-- More --[K[?25h[?25l[CSPACE/d/j: screen/page/line down, b/u/k: up, q: quit[?25h[?25l[24;1H[63Xline 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }[H[23M
calling <SNR>16_dirpath('/home/cesarguzmanlopez/.vim/plugged/NrrwRgn')[K
line 1:     return substitute(a:path, '[/\\]*$', '/', '')[K
<SNR>16_dirpath returning '/home/cesarguzmanlopez/.vim/plugged/NrrwRgn/'[K
continuing in <SNR>16_infer_properties[K
<SNR>16_infer_properties returning {'uri': 'https://git::@github.com/chri...esar
guzmanlopez/.vim/plugged/NrrwRgn/'}[K
continuing in plug#[K
line 10:     if !has_key(g:plugs, name)[K
line 11:       call add(g:plugs_order, name)[K
line 12:     endif[K
line 13:     let g:plugs[name] = spec[K
line 14:     let s:loaded[name] = get(s:loaded, name, 0)[K
line 15:   catch[K
line 16:     return s:err(repo . ' ' . v:exception)[K
line 17:   endtry[K
plug# returning #0[K
continuing in /home/cesarguzmanlopez/.bash_vim/Config_Vim/Plugins.vim[K
line 7:     Plug 'christoomey/vim-quicklink'[K
line 7: call plug#('christoomey/vim-quicklink')[K
calling plug#('christoomey/vim-quicklink')[K
line 1:   if a:0 > 1[K
line 2:     return s:err('Invalid number of arguments (1..2)')[K
-- More --[K[?25h[?25l[24;1H[10Xline 3:   endif[H[23M
line 4:[K
line 5:   try[K
line 6:     let repo = s:trim(a:repo)[K
calling <SNR>16_trim('christoomey/vim-quicklink')[K
line 1:   return substitute(a:str, '[\/]\+$', '', '')[K
<SNR>16_trim returning 'christoomey/vim-quicklink'[K
continuing in plug#[K
line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec[K
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??')
)[K
calling <SNR>16_plug_fnamemodify('christoomey/vim-quicklink', ':t:s?\.git$??')[K
line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)[K
calling <SNR>16_plug_call('fnamemodify', 'christoomey/vim-quicklink', ':t:s?\.gi
t$??')[K
line 1:     return call(a:fn, a:000)[K
<SNR>16_plug_call returning 'vim-quicklink'[K
continuing in <SNR>16_plug_fnamemodify[K
<SNR>16_plug_fnamemodify returning 'vim-quicklink'[K
continuing in plug#[K
line 9:     let spec = extend(s:infer_properties(name, repo), opts)[K
calling <SNR>16_infer_properties('vim-quicklink', 'christoomey/vim-quicklink')[K
line 1:   let repo = a:repo[K
-- More --[K[?25h[?25l[24;1H[10Xline 2:   if s:is_local_plug(repo)[H[23M
calling <SNR>16_is_local_plug('christoomey/vim-quicklink')[K
line 1:     return a:repo[0] =~ '[/$~]'[K
<SNR>16_is_local_plug returning #0[K
continuing in <SNR>16_infer_properties[K
line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }[K
line 4:   else[K
line 5:     if repo =~ ':'[K
line 6:       let uri = repo[K
line 7:     else[K
line 8:       if repo !~ '/'[K
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expa
nsion is deprecated)', repo)[K
line 10:       endif[K
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s
.git')[K
line 12:       let uri = printf(fmt, repo)[K
line 13:     endif[K
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }[K
calling <SNR>16_dirpath('/home/cesarguzmanlopez/.vim/plugged/vim-quicklink')[K
line 1:     return substitute(a:path, '[/\\]*$', '/', '')[K
<SNR>16_dirpath returning '/home/cesarguzmanlopez/.vim/plugged/vim-quicklink/'[K
continuing in <SNR>16_infer_properties[K
-- More --[K[?25h[?25l[24;1H[10X<SNR>16_infer_properties returning {'uri': 'https://git::@github.com/chri...zma[H[M[23B[J[23;80Hn[H[22M
lopez/.vim/plugged/vim-quicklink/'}[K
continuing in plug#[K
line 10:     if !has_key(g:plugs, name)[K
line 11:       call add(g:plugs_order, name)[K
line 12:     endif[K
line 13:     let g:plugs[name] = spec[K
line 14:     let s:loaded[name] = get(s:loaded, name, 0)[K
line 15:   catch[K
line 16:     return s:err(repo . ' ' . v:exception)[K
line 17:   endtry[K
plug# returning #0[K
continuing in /home/cesarguzmanlopez/.bash_vim/Config_Vim/Plugins.vim[K
line 8:     Plug 'christoomey/vim-quicklink'[K
line 8: call plug#('christoomey/vim-quicklink')[K
calling plug#('christoomey/vim-quicklink')[K
line 1:   if a:0 > 1[K
line 2:     return s:err('Invalid number of arguments (1..2)')[K
line 3:   endif[K
line 4:[K
line 5:   try[K
line 6:     let repo = s:trim(a:repo)[K
calling <SNR>16_trim('christoomey/vim-quicklink')[K
-- More --[K[?25h[?25l[CSPACE/d/j: screen/page/line down, b/u/k: up, q: quit[?25h[?25l[24;1H[63Xline 1:   return substitute(a:str, '[\/]\+$', '', '')[H[23M
<SNR>16_trim returning 'christoomey/vim-quicklink'[K
continuing in plug#[K
line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec[K
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??')
)[K
calling <SNR>16_plug_fnamemodify('christoomey/vim-quicklink', ':t:s?\.git$??')[K
line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)[K
calling <SNR>16_plug_call('fnamemodify', 'christoomey/vim-quicklink', ':t:s?\.gi
t$??')[K
line 1:     return call(a:fn, a:000)[K
<SNR>16_plug_call returning 'vim-quicklink'[K
continuing in <SNR>16_plug_fnamemodify[K
<SNR>16_plug_fnamemodify returning 'vim-quicklink'[K
continuing in plug#[K
line 9:     let spec = extend(s:infer_properties(name, repo), opts)[K
calling <SNR>16_infer_properties('vim-quicklink', 'christoomey/vim-quicklink')[K
line 1:   let repo = a:repo[K
line 2:   if s:is_local_plug(repo)[K
calling <SNR>16_is_local_plug('christoomey/vim-quicklink')[K
line 1:     return a:repo[0] =~ '[/$~]'[K
<SNR>16_is_local_plug returning #0[K
continuing in <SNR>16_infer_properties[K
-- More --[K[?25h[?25l[24;1H[10Xline 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }[H[23M
line 4:   else[K
line 5:     if repo =~ ':'[K
line 6:       let uri = repo[K
line 7:     else[K
line 8:       if repo !~ '/'[K
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expa
nsion is deprecated)', repo)[K
line 10:       endif[K
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s
.git')[K
line 12:       let uri = printf(fmt, repo)[K
line 13:     endif[K
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }[K
calling <SNR>16_dirpath('/home/cesarguzmanlopez/.vim/plugged/vim-quicklink')[K
line 1:     return substitute(a:path, '[/\\]*$', '/', '')[K
<SNR>16_dirpath returning '/home/cesarguzmanlopez/.vim/plugged/vim-quicklink/'[K
continuing in <SNR>16_infer_properties[K
<SNR>16_infer_properties returning {'uri': 'https://git::@github.com/chri...zman
lopez/.vim/plugged/vim-quicklink/'}[K
continuing in plug#[K
line 10:     if !has_key(g:plugs, name)[K
line 11:       call add(g:plugs_order, name)[K
-- More --[K[?25h[?25l[24;1H[10Xline 12:     endif[H[23M
line 13:     let g:plugs[name] = spec[K
line 14:     let s:loaded[name] = get(s:loaded, name, 0)[K
line 15:   catch[K
line 16:     return s:err(repo . ' ' . v:exception)[K
line 17:   endtry[K
plug# returning #0[K
continuing in /home/cesarguzmanlopez/.bash_vim/Config_Vim/Plugins.vim[K
line 9:     Plug 'github/copilot.vim'[K
line 9: call plug#('github/copilot.vim')[K
calling plug#('github/copilot.vim')[K
line 1:   if a:0 > 1[K
line 2:     return s:err('Invalid number of arguments (1..2)')[K
line 3:   endif[K
line 4:[K
line 5:   try[K
line 6:     let repo = s:trim(a:repo)[K
calling <SNR>16_trim('github/copilot.vim')[K
line 1:   return substitute(a:str, '[\/]\+$', '', '')[K
<SNR>16_trim returning 'github/copilot.vim'[K
continuing in plug#[K
line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec[K
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??')
-- More --[K[?25h[?25l[24;1H[10X)[H[23M
calling <SNR>16_plug_fnamemodify('github/copilot.vim', ':t:s?\.git$??')[K
line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)[K
calling <SNR>16_plug_call('fnamemodify', 'github/copilot.vim', ':t:s?\.git$??')[K
line 1:     return call(a:fn, a:000)[K
<SNR>16_plug_call returning 'copilot.vim'[K
continuing in <SNR>16_plug_fnamemodify[K
<SNR>16_plug_fnamemodify returning 'copilot.vim'[K
continuing in plug#[K
line 9:     let spec = extend(s:infer_properties(name, repo), opts)[K
calling <SNR>16_infer_properties('copilot.vim', 'github/copilot.vim')[K
line 1:   let repo = a:repo[K
line 2:   if s:is_local_plug(repo)[K
calling <SNR>16_is_local_plug('github/copilot.vim')[K
line 1:     return a:repo[0] =~ '[/$~]'[K
<SNR>16_is_local_plug returning #0[K
continuing in <SNR>16_infer_properties[K
line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }[K
line 4:   else[K
line 5:     if repo =~ ':'[K
line 6:       let uri = repo[K
line 7:     else[K
line 8:       if repo !~ '/'[K
-- More --[K[?25h[?25l[24;1H[10Xline 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' exp[H[M[23B[J[23;80Ha[H[22M
nsion is deprecated)', repo)[K
line 10:       endif[K
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s
.git')[K
line 12:       let uri = printf(fmt, repo)[K
line 13:     endif[K
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }[K
calling <SNR>16_dirpath('/home/cesarguzmanlopez/.vim/plugged/copilot.vim')[K
line 1:     return substitute(a:path, '[/\\]*$', '/', '')[K
<SNR>16_dirpath returning '/home/cesarguzmanlopez/.vim/plugged/copilot.vim/'[K
continuing in <SNR>16_infer_properties[K
<SNR>16_infer_properties returning {'uri': 'https://git::@github.com/gith...guzm
anlopez/.vim/plugged/copilot.vim/'}[K
continuing in plug#[K
line 10:     if !has_key(g:plugs, name)[K
line 11:       call add(g:plugs_order, name)[K
line 12:     endif[K
line 13:     let g:plugs[name] = spec[K
line 14:     let s:loaded[name] = get(s:loaded, name, 0)[K
line 15:   catch[K
line 16:     return s:err(repo . ' ' . v:exception)[K
line 17:   endtry[K
-- More --[K[?25h[?25l[CSPACE/d/j: screen/page/line down, b/u/k: up, q: quit[?25h[?25l[24;1H[63Xplug# returning #0[H[23M
continuing in /home/cesarguzmanlopez/.bash_vim/Config_Vim/Plugins.vim[K
line 10:     Plug 'iberianpig/tig-explorer.vim'[K
line 10: call plug#('iberianpig/tig-explorer.vim')[K
calling plug#('iberianpig/tig-explorer.vim')[K
line 1:   if a:0 > 1[K
line 2:     return s:err('Invalid number of arguments (1..2)')[K
line 3:   endif[K
line 4:[K
line 5:   try[K
line 6:     let repo = s:trim(a:repo)[K
calling <SNR>16_trim('iberianpig/tig-explorer.vim')[K
line 1:   return substitute(a:str, '[\/]\+$', '', '')[K
<SNR>16_trim returning 'iberianpig/tig-explorer.vim'[K
continuing in plug#[K
line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec[K
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??')
)[K
calling <SNR>16_plug_fnamemodify('iberianpig/tig-explorer.vim', ':t:s?\.git$??')
[K
line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)[K
calling <SNR>16_plug_call('fnamemodify', 'iberianpig/tig-explorer.vim', ':t:s?\.
git$??')[K
-- More --[K[?25h[?25l[24;1H[10Xline 1:     return call(a:fn, a:000)[H[23M
<SNR>16_plug_call returning 'tig-explorer.vim'[K
continuing in <SNR>16_plug_fnamemodify[K
<SNR>16_plug_fnamemodify returning 'tig-explorer.vim'[K
continuing in plug#[K
line 9:     let spec = extend(s:infer_properties(name, repo), opts)[K
calling <SNR>16_infer_properties('tig-explorer.vim', 'iberianpig/tig-explorer.vi
m')[K
line 1:   let repo = a:repo[K
line 2:   if s:is_local_plug(repo)[K
calling <SNR>16_is_local_plug('iberianpig/tig-explorer.vim')[K
line 1:     return a:repo[0] =~ '[/$~]'[K
<SNR>16_is_local_plug returning #0[K
continuing in <SNR>16_infer_properties[K
line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }[K
line 4:   else[K
line 5:     if repo =~ ':'[K
line 6:       let uri = repo[K
line 7:     else[K
line 8:       if repo !~ '/'[K
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expa
nsion is deprecated)', repo)[K
line 10:       endif[K
-- More --[K[?25h[?25l[24;1H[10Xline 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%[H[M[23B[J[23;80Hs[H[22M
.git')[K
line 12:       let uri = printf(fmt, repo)[K
line 13:     endif[K
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }[K
calling <SNR>16_dirpath('/home/cesarguzmanlopez/.vim/plugged/tig-explorer.vim')[K
line 1:     return substitute(a:path, '[/\\]*$', '/', '')[K
<SNR>16_dirpath returning '/home/cesarguzmanlopez/.vim/plugged/tig-explorer.vim/
'[K
continuing in <SNR>16_infer_properties[K
<SNR>16_infer_properties returning {'uri': 'https://git::@github.com/iber...nlop
ez/.vim/plugged/tig-explorer.vim/'}[K
continuing in plug#[K
line 10:     if !has_key(g:plugs, name)[K
line 11:       call add(g:plugs_order, name)[K
line 12:     endif[K
line 13:     let g:plugs[name] = spec[K
line 14:     let s:loaded[name] = get(s:loaded, name, 0)[K
line 15:   catch[K
line 16:     return s:err(repo . ' ' . v:exception)[K
line 17:   endtry[K
plug# returning #0[K
continuing in /home/cesarguzmanlopez/.bash_vim/Config_Vim/Plugins.vim[K
-- More --[K[?25h[?25l[24;1H[10Xline 11:     "Plug 'itchyny/lightline.vim'[H[23M
line 12:     Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }[K
line 12: call plug#('junegunn/fzf', { 'do': { -> fzf#install() } })[K
calling plug#('junegunn/fzf', {'do': function('<lambda>1')})[K
line 1:   if a:0 > 1[K
line 2:     return s:err('Invalid number of arguments (1..2)')[K
line 3:   endif[K
line 4:[K
line 5:   try[K
line 6:     let repo = s:trim(a:repo)[K
calling <SNR>16_trim('junegunn/fzf')[K
line 1:   return substitute(a:str, '[\/]\+$', '', '')[K
<SNR>16_trim returning 'junegunn/fzf'[K
continuing in plug#[K
line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec[K
calling <SNR>16_parse_options({'do': function('<lambda>1')})[K
line 1:   let opts = copy(s:base_spec)[K
line 2:   let type = type(a:arg)[K
line 3:   let opt_errfmt = 'Invalid argument for "%s" option of :Plug (expected:
 %s)'[K
line 4:   if type == s:TYPE.string[K
line 5:     if empty(a:arg)[K
line 6:       throw printf(opt_errfmt, 'tag', 'string')[K
-- More --[K[?25h[?25l[24;1H[10Xline 7:     endif[H[23M
line 8:     let opts.tag = a:arg[K
line 9:   elseif type == s:TYPE.dict[K
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as'][K
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || e
mpty(a:arg[opt]))[K
line 13:         throw printf(opt_errfmt, opt, 'string')[K
line 14:       endif[K
line 15:     endfor[K
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as'][K
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || e
mpty(a:arg[opt]))[K
line 13:         throw printf(opt_errfmt, opt, 'string')[K
line 14:       endif[K
line 15:     endfor[K
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as'][K
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || e
mpty(a:arg[opt]))[K
line 13:         throw printf(opt_errfmt, opt, 'string')[K
line 14:       endif[K
line 15:     endfor[K
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as'][K
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || e
-- More --[K[?25h[?25l[24;1H[10Xmpty(a:arg[opt]))[H[23M
line 13:         throw printf(opt_errfmt, opt, 'string')[K
line 14:       endif[K
line 15:     endfor[K
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as'][K
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || e
mpty(a:arg[opt]))[K
line 13:         throw printf(opt_errfmt, opt, 'string')[K
line 14:       endif[K
line 15:     endfor[K
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as'][K
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || e
mpty(a:arg[opt]))[K
line 13:         throw printf(opt_errfmt, opt, 'string')[K
line 14:       endif[K
line 15:     endfor[K
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as'][K
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || e
mpty(a:arg[opt]))[K
line 13:         throw printf(opt_errfmt, opt, 'string')[K
line 14:       endif[K
line 15:     endfor[K
line 16:     for opt in ['on', 'for'][K
-- More --[K[?25h[?25l[24;1H[10Xline 17:       if has_key(a:arg, opt) && type(a:arg[opt]) != s:TYPE.list && (ty[H[M[23B[J[23;80Hp[H[22M
e(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))[K
line 20:         throw printf(opt_errfmt, opt, 'string or list')[K
line 21:       endif[K
line 22:     endfor[K
line 16:     for opt in ['on', 'for'][K
line 17:       if has_key(a:arg, opt) && type(a:arg[opt]) != s:TYPE.list && (typ
e(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))[K
line 20:         throw printf(opt_errfmt, opt, 'string or list')[K
line 21:       endif[K
line 22:     endfor[K
line 16:     for opt in ['on', 'for'][K
line 17:       if has_key(a:arg, opt) && type(a:arg[opt]) != s:TYPE.list && (typ
e(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))[K
line 20:         throw printf(opt_errfmt, opt, 'string or list')[K
line 21:       endif[K
line 22:     endfor[K
line 23:     if has_key(a:arg, 'do') && type(a:arg.do) != s:TYPE.funcref && (typ
e(a:arg.do) != s:TYPE.string || empty(a:arg.do))[K
line 26:         throw printf(opt_errfmt, 'do', 'string or funcref')[K
line 27:     endif[K
line 28:     call extend(opts, a:arg)[K
line 29:     if has_key(opts, 'dir')[K
-- More --[K[?25h[?25l[24;1H[10Xline 30:       let opts.dir = s:dirpath(s:plug_expand(opts.dir))[H[23M
line 31:     endif[K
line 32:   else[K
line 33:     throw 'Invalid argument type (expected: string or dictionary)'[K
line 34:   endif[K
line 35:   return opts[K
<SNR>16_parse_options returning {'do': function('<lambda>1'), 'frozen': 0, 'bran
ch': ''}[K
continuing in plug#[K
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??')
)[K
calling <SNR>16_plug_fnamemodify('junegunn/fzf', ':t:s?\.git$??')[K
line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)[K
calling <SNR>16_plug_call('fnamemodify', 'junegunn/fzf', ':t:s?\.git$??')[K
line 1:     return call(a:fn, a:000)[K
<SNR>16_plug_call returning 'fzf'[K
continuing in <SNR>16_plug_fnamemodify[K
<SNR>16_plug_fnamemodify returning 'fzf'[K
continuing in plug#[K
line 9:     let spec = extend(s:infer_properties(name, repo), opts)[K
calling <SNR>16_infer_properties('fzf', 'junegunn/fzf')[K
line 1:   let repo = a:repo[K
line 2:   if s:is_local_plug(repo)[K
-- More --[K[?25h[?25l[24;1H[10Xcalling <SNR>16_is_local_plug('junegunn/fzf')[H[23M
line 1:     return a:repo[0] =~ '[/$~]'[K
<SNR>16_is_local_plug returning #0[K
continuing in <SNR>16_infer_properties[K
line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }[K
line 4:   else[K
line 5:     if repo =~ ':'[K
line 6:       let uri = repo[K
line 7:     else[K
line 8:       if repo !~ '/'[K
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expa
nsion is deprecated)', repo)[K
line 10:       endif[K
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s
.git')[K
line 12:       let uri = printf(fmt, repo)[K
line 13:     endif[K
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }[K
calling <SNR>16_dirpath('/home/cesarguzmanlopez/.vim/plugged/fzf')[K
line 1:     return substitute(a:path, '[/\\]*$', '/', '')[K
<SNR>16_dirpath returning '/home/cesarguzmanlopez/.vim/plugged/fzf/'[K
continuing in <SNR>16_infer_properties[K
<SNR>16_infer_properties returning {'uri': 'https://git::@github.com/june...me/c
-- More --[K[?25h[?25l[24;1H[10Xesarguzmanlopez/.vim/plugged/fzf/'}[H[23M
continuing in plug#[K
line 10:     if !has_key(g:plugs, name)[K
line 11:       call add(g:plugs_order, name)[K
line 12:     endif[K
line 13:     let g:plugs[name] = spec[K
line 14:     let s:loaded[name] = get(s:loaded, name, 0)[K
line 15:   catch[K
line 16:     return s:err(repo . ' ' . v:exception)[K
line 17:   endtry[K
plug# returning #0[K
continuing in /home/cesarguzmanlopez/.bash_vim/Config_Vim/Plugins.vim[K
line 13:     Plug 'junegunn/fzf.vim'[K
line 13: call plug#('junegunn/fzf.vim')[K
calling plug#('junegunn/fzf.vim')[K
line 1:   if a:0 > 1[K
line 2:     return s:err('Invalid number of arguments (1..2)')[K
line 3:   endif[K
line 4:[K
line 5:   try[K
line 6:     let repo = s:trim(a:repo)[K
calling <SNR>16_trim('junegunn/fzf.vim')[K
line 1:   return substitute(a:str, '[\/]\+$', '', '')[K
-- More --[K[?25h[?25l[CSPACE/d/j: screen/page/line down, b/u/k: up, q: quit[?25h[?25l[24;1H[63X<SNR>16_trim returning 'junegunn/fzf.vim'[H[23M
continuing in plug#[K
line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec[K
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??')
)[K
calling <SNR>16_plug_fnamemodify('junegunn/fzf.vim', ':t:s?\.git$??')[K
line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)[K
calling <SNR>16_plug_call('fnamemodify', 'junegunn/fzf.vim', ':t:s?\.git$??')[K
line 1:     return call(a:fn, a:000)[K
<SNR>16_plug_call returning 'fzf.vim'[K
continuing in <SNR>16_plug_fnamemodify[K
<SNR>16_plug_fnamemodify returning 'fzf.vim'[K
continuing in plug#[K
line 9:     let spec = extend(s:infer_properties(name, repo), opts)[K
calling <SNR>16_infer_properties('fzf.vim', 'junegunn/fzf.vim')[K
line 1:   let repo = a:repo[K
line 2:   if s:is_local_plug(repo)[K
calling <SNR>16_is_local_plug('junegunn/fzf.vim')[K
line 1:     return a:repo[0] =~ '[/$~]'[K
<SNR>16_is_local_plug returning #0[K
continuing in <SNR>16_infer_properties[K
line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }[K
line 4:   else[K
-- More --[K[?25h[?25l[24;1H[10Xline 5:     if repo =~ ':'[H[23M
line 6:       let uri = repo[K
line 7:     else[K
line 8:       if repo !~ '/'[K
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expa
nsion is deprecated)', repo)[K
line 10:       endif[K
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s
.git')[K
line 12:       let uri = printf(fmt, repo)[K
line 13:     endif[K
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }[K
calling <SNR>16_dirpath('/home/cesarguzmanlopez/.vim/plugged/fzf.vim')[K
line 1:     return substitute(a:path, '[/\\]*$', '/', '')[K
<SNR>16_dirpath returning '/home/cesarguzmanlopez/.vim/plugged/fzf.vim/'[K
continuing in <SNR>16_infer_properties[K
<SNR>16_infer_properties returning {'uri': 'https://git::@github.com/june...esar
guzmanlopez/.vim/plugged/fzf.vim/'}[K
continuing in plug#[K
line 10:     if !has_key(g:plugs, name)[K
line 11:       call add(g:plugs_order, name)[K
line 12:     endif[K
line 13:     let g:plugs[name] = spec[K
-- More --[K[?25h[?25l[24;1H[10Xline 14:     let s:loaded[name] = get(s:loaded, name, 0)[H[23M
line 15:   catch[K
line 16:     return s:err(repo . ' ' . v:exception)[K
line 17:   endtry[K
plug# returning #0[K
continuing in /home/cesarguzmanlopez/.bash_vim/Config_Vim/Plugins.vim[K
line 14:     Plug 'junegunn/goyo.vim'[K
line 14: call plug#('junegunn/goyo.vim')[K
calling plug#('junegunn/goyo.vim')[K
line 1:   if a:0 > 1[K
line 2:     return s:err('Invalid number of arguments (1..2)')[K
line 3:   endif[K
line 4:[K
line 5:   try[K
line 6:     let repo = s:trim(a:repo)[K
calling <SNR>16_trim('junegunn/goyo.vim')[K
line 1:   return substitute(a:str, '[\/]\+$', '', '')[K
<SNR>16_trim returning 'junegunn/goyo.vim'[K
continuing in plug#[K
line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec[K
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??')
)[K
calling <SNR>16_plug_fnamemodify('junegunn/goyo.vim', ':t:s?\.git$??')[K
-- More --[K[?25h[?25l[24;1H[10Xline 1:   return s:plug_call('fnamemodify', a:fname, a:mods)[H[23M
calling <SNR>16_plug_call('fnamemodify', 'junegunn/goyo.vim', ':t:s?\.git$??')[K
line 1:     return call(a:fn, a:000)[K
<SNR>16_plug_call returning 'goyo.vim'[K
continuing in <SNR>16_plug_fnamemodify[K
<SNR>16_plug_fnamemodify returning 'goyo.vim'[K
continuing in plug#[K
line 9:     let spec = extend(s:infer_properties(name, repo), opts)[K
calling <SNR>16_infer_properties('goyo.vim', 'junegunn/goyo.vim')[K
line 1:   let repo = a:repo[K
line 2:   if s:is_local_plug(repo)[K
calling <SNR>16_is_local_plug('junegunn/goyo.vim')[K
line 1:     return a:repo[0] =~ '[/$~]'[K
<SNR>16_is_local_plug returning #0[K
continuing in <SNR>16_infer_properties[K
line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }[K
line 4:   else[K
line 5:     if repo =~ ':'[K
line 6:       let uri = repo[K
line 7:     else[K
line 8:       if repo !~ '/'[K
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expa
nsion is deprecated)', repo)[K
-- More --[K[?25h[?25l[24;1H[10Xline 10:       endif[H[23M
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s
.git')[K
line 12:       let uri = printf(fmt, repo)[K
line 13:     endif[K
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }[K
calling <SNR>16_dirpath('/home/cesarguzmanlopez/.vim/plugged/goyo.vim')[K
line 1:     return substitute(a:path, '[/\\]*$', '/', '')[K
<SNR>16_dirpath returning '/home/cesarguzmanlopez/.vim/plugged/goyo.vim/'[K
continuing in <SNR>16_infer_properties[K
<SNR>16_infer_properties returning {'uri': 'https://git::@github.com/june...sarg
uzmanlopez/.vim/plugged/goyo.vim/'}[K
continuing in plug#[K
line 10:     if !has_key(g:plugs, name)[K
line 11:       call add(g:plugs_order, name)[K
line 12:     endif[K
line 13:     let g:plugs[name] = spec[K
line 14:     let s:loaded[name] = get(s:loaded, name, 0)[K
line 15:   catch[K
line 16:     return s:err(repo . ' ' . v:exception)[K
line 17:   endtry[K
plug# returning #0[K
continuing in /home/cesarguzmanlopez/.bash_vim/Config_Vim/Plugins.vim[K
-- More --[K[?25h[?25l[24;1H[10Xline 15:     Plug 'junegunn/limelight.vim'   " spotlight on cursorline[H[23M
line 15: call plug#('junegunn/limelight.vim')[K
calling plug#('junegunn/limelight.vim')[K
line 1:   if a:0 > 1[K
line 2:     return s:err('Invalid number of arguments (1..2)')[K
line 3:   endif[K
line 4:[K
line 5:   try[K
line 6:     let repo = s:trim(a:repo)[K
calling <SNR>16_trim('junegunn/limelight.vim')[K
line 1:   return substitute(a:str, '[\/]\+$', '', '')[K
<SNR>16_trim returning 'junegunn/limelight.vim'[K
continuing in plug#[K
line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec[K
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??')
)[K
calling <SNR>16_plug_fnamemodify('junegunn/limelight.vim', ':t:s?\.git$??')[K
line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)[K
calling <SNR>16_plug_call('fnamemodify', 'junegunn/limelight.vim', ':t:s?\.git$?
?')[K
line 1:     return call(a:fn, a:000)[K
<SNR>16_plug_call returning 'limelight.vim'[K
continuing in <SNR>16_plug_fnamemodify[K
-- More --[K[?25h[?25l[24;1H[10X<SNR>16_plug_fnamemodify returning 'limelight.vim'[H[23M
continuing in plug#[K
line 9:     let spec = extend(s:infer_properties(name, repo), opts)[K
calling <SNR>16_infer_properties('limelight.vim', 'junegunn/limelight.vim')[K
line 1:   let repo = a:repo[K
line 2:   if s:is_local_plug(repo)[K
calling <SNR>16_is_local_plug('junegunn/limelight.vim')[K
line 1:     return a:repo[0] =~ '[/$~]'[K
<SNR>16_is_local_plug returning #0[K
continuing in <SNR>16_infer_properties[K
line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }[K
line 4:   else[K
line 5:     if repo =~ ':'[K
line 6:       let uri = repo[K
line 7:     else[K
line 8:       if repo !~ '/'[K
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expa
nsion is deprecated)', repo)[K
line 10:       endif[K
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s
.git')[K
line 12:       let uri = printf(fmt, repo)[K
line 13:     endif[K
-- More --[K[?25h[?25l[24;1H[10Xline 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }[H[23M
calling <SNR>16_dirpath('/home/cesarguzmanlopez/.vim/plugged/limelight.vim')[K
line 1:     return substitute(a:path, '[/\\]*$', '/', '')[K
<SNR>16_dirpath returning '/home/cesarguzmanlopez/.vim/plugged/limelight.vim/'[K
continuing in <SNR>16_infer_properties[K
<SNR>16_infer_properties returning {'uri': 'https://git::@github.com/june...zman
lopez/.vim/plugged/limelight.vim/'}[K
continuing in plug#[K
line 10:     if !has_key(g:plugs, name)[K
line 11:       call add(g:plugs_order, name)[K
line 12:     endif[K
line 13:     let g:plugs[name] = spec[K
line 14:     let s:loaded[name] = get(s:loaded, name, 0)[K
line 15:   catch[K
line 16:     return s:err(repo . ' ' . v:exception)[K
line 17:   endtry[K
plug# returning #0[K
continuing in /home/cesarguzmanlopez/.bash_vim/Config_Vim/Plugins.vim[K
line 16:     Plug 'majutsushi/tagbar'[K
line 16: call plug#('majutsushi/tagbar')[K
calling plug#('majutsushi/tagbar')[K
line 1:   if a:0 > 1[K
line 2:     return s:err('Invalid number of arguments (1..2)')[K
-- More --[K[?25h[?25l[24;1H[10Xline 3:   endif[H[23M
line 4:[K
line 5:   try[K
line 6:     let repo = s:trim(a:repo)[K
calling <SNR>16_trim('majutsushi/tagbar')[K
line 1:   return substitute(a:str, '[\/]\+$', '', '')[K
<SNR>16_trim returning 'majutsushi/tagbar'[K
continuing in plug#[K
line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec[K
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??')
)[K
calling <SNR>16_plug_fnamemodify('majutsushi/tagbar', ':t:s?\.git$??')[K
line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)[K
calling <SNR>16_plug_call('fnamemodify', 'majutsushi/tagbar', ':t:s?\.git$??')[K
line 1:     return call(a:fn, a:000)[K
<SNR>16_plug_call returning 'tagbar'[K
continuing in <SNR>16_plug_fnamemodify[K
<SNR>16_plug_fnamemodify returning 'tagbar'[K
continuing in plug#[K
line 9:     let spec = extend(s:infer_properties(name, repo), opts)[K
calling <SNR>16_infer_properties('tagbar', 'majutsushi/tagbar')[K
line 1:   let repo = a:repo[K
line 2:   if s:is_local_plug(repo)[K
-- More --[K[?25h[?25l[24;1H[10Xcalling <SNR>16_is_local_plug('majutsushi/tagbar')[H[23M
line 1:     return a:repo[0] =~ '[/$~]'[K
<SNR>16_is_local_plug returning #0[K
continuing in <SNR>16_infer_properties[K
line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }[K
line 4:   else[K
line 5:     if repo =~ ':'[K
line 6:       let uri = repo[K
line 7:     else[K
line 8:       if repo !~ '/'[K
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expa
nsion is deprecated)', repo)[K
line 10:       endif[K
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s
.git')[K
line 12:       let uri = printf(fmt, repo)[K
line 13:     endif[K
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }[K
calling <SNR>16_dirpath('/home/cesarguzmanlopez/.vim/plugged/tagbar')[K
line 1:     return substitute(a:path, '[/\\]*$', '/', '')[K
<SNR>16_dirpath returning '/home/cesarguzmanlopez/.vim/plugged/tagbar/'[K
continuing in <SNR>16_infer_properties[K
<SNR>16_infer_properties returning {'uri': 'https://git::@github.com/maju...cesa
-- More --[K[?25h[?25l[CSPACE/d/j: screen/page/line down, b/u/k: up, q: quit[?25h[?25l[24;1H[63Xrguzmanlopez/.vim/plugged/tagbar/'}[H[23M
continuing in plug#[K
line 10:     if !has_key(g:plugs, name)[K
line 11:       call add(g:plugs_order, name)[K
line 12:     endif[K
line 13:     let g:plugs[name] = spec[K
line 14:     let s:loaded[name] = get(s:loaded, name, 0)[K
line 15:   catch[K
line 16:     return s:err(repo . ' ' . v:exception)[K
line 17:   endtry[K
plug# returning #0[K
continuing in /home/cesarguzmanlopez/.bash_vim/Config_Vim/Plugins.vim[K
line 17:     Plug 'matze/vim-tex-fold'[K
line 17: call plug#('matze/vim-tex-fold')[K
calling plug#('matze/vim-tex-fold')[K
line 1:   if a:0 > 1[K
line 2:     return s:err('Invalid number of arguments (1..2)')[K
line 3:   endif[K
line 4:[K
line 5:   try[K
line 6:     let repo = s:trim(a:repo)[K
calling <SNR>16_trim('matze/vim-tex-fold')[K
line 1:   return substitute(a:str, '[\/]\+$', '', '')[K
-- More --[K[?25h[?25l[24;1H[10X[H[23M
Exception thrown: Vim:Interrupt[K
<SNR>16_trim aborted[K
continuing in plug#[K
line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec[K
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??')
)[K
line 9:     let spec = extend(s:infer_properties(name, repo), opts)[K
line 10:     if !has_key(g:plugs, name)[K
line 11:       call add(g:plugs_order, name)[K
line 12:     endif[K
line 13:     let g:plugs[name] = spec[K
line 14:     let s:loaded[name] = get(s:loaded, name, 0)[K
line 15:   catch[K
Exception caught: Vim:Interrupt[K
line 16:     return s:err(repo . ' ' . v:exception)[K
Exception thrown: Vim(return):E121: Undefined variable: repo[K
Exception finished: Vim:Interrupt[K
line 17:   endtry[K
Exception discarded: Vim(return):E121: Undefined variable: repo[K
Error detected while processing /home/cesarguzmanlopez/.config/nvim/init.vim[1].
./home/cesarguzmanlopez/.bash_vim/init.vim[8]../home/cesarguzmanlopez/.bash_vim/
Config_Vim/Plugins.vim[17]..function plug#[17]../home/cesarguzmanlopez/.config/n
-- More --[K[?25h[?25l[24;1H[10X[H[23M
line   16:[K
E121: Undefined variable: repo[K
E116: Invalid arguments for function s:err[K
plug# aborted[K
continuing in /home/cesarguzmanlopez/.bash_vim/Config_Vim/Plugins.vim[K
Error detected while processing /home/cesarguzmanlopez/.config/nvim/init.vim[1].
./home/cesarguzmanlopez/.bash_vim/init.vim[8]../home/cesarguzmanlopez/.bash_vim/
Config_Vim/Plugins.vim:[K
line   17:[K
Interrupted[K
finished sourcing /home/cesarguzmanlopez/.bash_vim/Config_Vim/Plugins.vim[K
continuing in /home/cesarguzmanlopez/.bash_vim/init.vim[K
Error detected while processing /home/cesarguzmanlopez/.config/nvim/init.vim[1].
./home/cesarguzmanlopez/.bash_vim/init.vim:[K
line    8:[K
Interrupted[K
finished sourcing /home/cesarguzmanlopez/.bash_vim/init.vim[K
continuing in /home/cesarguzmanlopez/.config/nvim/init.vim[K
Error detected while processing /home/cesarguzmanlopez/.config/nvim/init.vim:[K
line    1:[K
Interrupted[K
finished sourcing /home/cesarguzmanlopez/.config/nvim/init.vim[K
-- More --[K[?25h[?25l[24;1H[10XSearching for "plugin/**/*.vim" in "/home/cesarguzmanlopez/.bash_vim/Config_Vim[H[M[23B[J[23;80H,[H[22M
/home/cesarguzmanlopez/.config/nvim,/home/cesarguzmanlopez/.config/kdedefaults/n
vim,/etc/xdg/nvim,/usr/share/kde-settings/kde-profile/default/xdg/nvim,/home/ces
arguzmanlopez/.local/share/nvim/site,/home/cesarguzmanlopez/.local/share/flatpak
/exports/share/nvim/site,/var/lib/flatpak/exports/share/nvim/site,/usr/local/sha
re/nvim/site,/usr/share/nvim/site,/var/lib/snapd/desktop/nvim/site,/usr/share/nv
im/runtime,/usr/lib/nvim,/var/lib/snapd/desktop/nvim/site/after,/usr/share/nvim/
site/after,/usr/local/share/nvim/site/after,/var/lib/flatpak/exports/share/nvim/
site/after,/home/cesarguzmanlopez/.local/share/flatpak/exports/share/nvim/site/a
fter,/home/cesarguzmanlopez/.local/share/nvim/site/after,/usr/share/kde-settings
/kde-profile/default/xdg/nvim/after,/etc/xdg/nvim/after,/home/cesarguzmanlopez/.
config/kdedefaults/nvim/after,/home/cesarguzmanlopez/.config/nvim/after,/usr/sha
re/vim/vimfiles/"[K
Searching for "/home/cesarguzmanlopez/.bash_vim/Config_Vim/plugin/**/*.vim"[K
Searching for "/home/cesarguzmanlopez/.config/nvim/plugin/**/*.vim"[K
Searching for "/home/cesarguzmanlopez/.config/kdedefaults/nvim/plugin/**/*.vim"[K
Searching for "/etc/xdg/nvim/plugin/**/*.vim"[K
Searching for "/usr/share/kde-settings/kde-profile/default/xdg/nvim/plugin/**/*.
vim"[K
Searching for "/home/cesarguzmanlopez/.local/share/nvim/site/plugin/**/*.vim"[K
Searching for "/home/cesarguzmanlopez/.local/share/flatpak/exports/share/nvim/si
te/plugin/**/*.vim"[K
Searching for "/var/lib/flatpak/exports/share/nvim/site/plugin/**/*.vim"[K
-- More --[K[?25h[?25l[24;1H[10XSearching for "/usr/local/share/nvim/site/plugin/**/*.vim"[H[23M
Searching for "/usr/share/nvim/site/plugin/**/*.vim"[K
Searching for "/var/lib/snapd/desktop/nvim/site/plugin/**/*.vim"[K
Searching for "/usr/share/nvim/runtime/plugin/**/*.vim"[K
Searching for "/usr/lib/nvim/plugin/**/*.vim"[K
Searching for "/usr/share/vim/vimfiles/plugin/**/*.vim"[K
not found in 'packpath': "plugin/**/*.vim"[K
Searching for "plugin/**/*.lua" in "/home/cesarguzmanlopez/.bash_vim/Config_Vim,
/home/cesarguzmanlopez/.config/nvim,/home/cesarguzmanlopez/.config/kdedefaults/n
vim,/etc/xdg/nvim,/usr/share/kde-settings/kde-profile/default/xdg/nvim,/home/ces
arguzmanlopez/.local/share/nvim/site,/home/cesarguzmanlopez/.local/share/flatpak
/exports/share/nvim/site,/var/lib/flatpak/exports/share/nvim/site,/usr/local/sha
re/nvim/site,/usr/share/nvim/site,/var/lib/snapd/desktop/nvim/site,/usr/share/nv
im/runtime,/usr/lib/nvim,/var/lib/snapd/desktop/nvim/site/after,/usr/share/nvim/
site/after,/usr/local/share/nvim/site/after,/var/lib/flatpak/exports/share/nvim/
site/after,/home/cesarguzmanlopez/.local/share/flatpak/exports/share/nvim/site/a
fter,/home/cesarguzmanlopez/.local/share/nvim/site/after,/usr/share/kde-settings
/kde-profile/default/xdg/nvim/after,/etc/xdg/nvim/after,/home/cesarguzmanlopez/.
config/kdedefaults/nvim/after,/home/cesarguzmanlopez/.config/nvim/after,/usr/sha
re/vim/vimfiles/"[K
Searching for "/home/cesarguzmanlopez/.bash_vim/Config_Vim/plugin/**/*.lua"[K
Searching for "/home/cesarguzmanlopez/.config/nvim/plugin/**/*.lua"[K
Searching for "/home/cesarguzmanlopez/.config/kdedefaults/nvim/plugin/**/*.lua"[K
-- More --[K[?25h[?25l[24;1H[10XSearching for "/etc/xdg/nvim/plugin/**/*.lua"[H[23M
Searching for "/usr/share/kde-settings/kde-profile/default/xdg/nvim/plugin/**/*.
lua"[K
Searching for "/home/cesarguzmanlopez/.local/share/nvim/site/plugin/**/*.lua"[K
Searching for "/home/cesarguzmanlopez/.local/share/flatpak/exports/share/nvim/si
te/plugin/**/*.lua"[K
Searching for "/var/lib/flatpak/exports/share/nvim/site/plugin/**/*.lua"[K
Searching for "/usr/local/share/nvim/site/plugin/**/*.lua"[K
Searching for "/usr/share/nvim/site/plugin/**/*.lua"[K
Searching for "/var/lib/snapd/desktop/nvim/site/plugin/**/*.lua"[K
Searching for "/usr/share/nvim/runtime/plugin/**/*.lua"[K
Searching for "/usr/lib/nvim/plugin/**/*.lua"[K
Searching for "/usr/share/vim/vimfiles/plugin/**/*.lua"[K
not found in 'packpath': "plugin/**/*.lua"[K
Searching for "pack/*/start/*" in "/home/cesarguzmanlopez/.config/nvim,/home/ces
arguzmanlopez/.config/kdedefaults/nvim,/etc/xdg/nvim,/usr/share/kde-settings/kde
-profile/default/xdg/nvim,/home/cesarguzmanlopez/.local/share/nvim/site,/home/ce
sarguzmanlopez/.local/share/flatpak/exports/share/nvim/site,/var/lib/flatpak/exp
orts/share/nvim/site,/usr/local/share/nvim/site,/usr/share/nvim/site,/var/lib/sn
apd/desktop/nvim/site,/usr/share/nvim/runtime,/usr/lib/nvim,/var/lib/snapd/deskt
op/nvim/site/after,/usr/share/nvim/site/after,/usr/local/share/nvim/site/after,/
var/lib/flatpak/exports/share/nvim/site/after,/home/cesarguzmanlopez/.local/shar
e/flatpak/exports/share/nvim/site/after,/home/cesarguzmanlopez/.local/share/nvim
-- More --[K[?25h[?25l[24;1H[10X[H[23M
Searching for "/home/cesarguzmanlopez/.config/nvim/pack/*/start/*"[K
Searching for "/home/cesarguzmanlopez/.config/kdedefaults/nvim/pack/*/start/*"[K
Searching for "/etc/xdg/nvim/pack/*/start/*"[K
Searching for "/usr/share/kde-settings/kde-profile/default/xdg/nvim/pack/*/start
/*"[K
Searching for "/home/cesarguzmanlopez/.local/share/nvim/site/pack/*/start/*"[K
Searching for "/home/cesarguzmanlopez/.local/share/flatpak/exports/share/nvim/si
te/pack/*/start/*"[K
Searching for "/var/lib/flatpak/exports/share/nvim/site/pack/*/start/*"[K
Searching for "/usr/local/share/nvim/site/pack/*/start/*"[K
Searching for "/usr/share/nvim/site/pack/*/start/*"[K
Searching for "/var/lib/snapd/desktop/nvim/site/pack/*/start/*"[K
Searching for "/usr/share/nvim/runtime/pack/*/start/*"[K
Searching for "/usr/lib/nvim/pack/*/start/*"[K
Searching for "/var/lib/snapd/desktop/nvim/site/after/pack/*/start/*"[K
Searching for "/usr/share/nvim/site/after/pack/*/start/*"[K
Searching for "/usr/local/share/nvim/site/after/pack/*/start/*"[K
Searching for "/var/lib/flatpak/exports/share/nvim/site/after/pack/*/start/*"[K
Searching for "/home/cesarguzmanlopez/.local/share/flatpak/exports/share/nvim/si
te/after/pack/*/start/*"[K
Searching for "/home/cesarguzmanlopez/.local/share/nvim/site/after/pack/*/start/
*"[K
-- More --[K[?25h[?25l[CSPACE/d/j: screen/page/line down, b/u/k: up, q: quit[?25h[?25l[24;1H[63XSearching for "/usr/share/kde-settings/kde-profile/default/xdg/nvim/after/pack/[H[M[23B[J[23;80H*[H[22M
/start/*"[K
Searching for "/etc/xdg/nvim/after/pack/*/start/*"[K
Searching for "/home/cesarguzmanlopez/.config/kdedefaults/nvim/after/pack/*/star
t/*"[K
Searching for "/home/cesarguzmanlopez/.config/nvim/after/pack/*/start/*"[K
not found in 'packpath': "pack/*/start/*"[K
Searching for "start/*" in "/home/cesarguzmanlopez/.config/nvim,/home/cesarguzma
nlopez/.config/kdedefaults/nvim,/etc/xdg/nvim,/usr/share/kde-settings/kde-profil
e/default/xdg/nvim,/home/cesarguzmanlopez/.local/share/nvim/site,/home/cesarguzm
anlopez/.local/share/flatpak/exports/share/nvim/site,/var/lib/flatpak/exports/sh
are/nvim/site,/usr/local/share/nvim/site,/usr/share/nvim/site,/var/lib/snapd/des
ktop/nvim/site,/usr/share/nvim/runtime,/usr/lib/nvim,/var/lib/snapd/desktop/nvim
/site/after,/usr/share/nvim/site/after,/usr/local/share/nvim/site/after,/var/lib
/flatpak/exports/share/nvim/site/after,/home/cesarguzmanlopez/.local/share/flatp
ak/exports/share/nvim/site/after,/home/cesarguzmanlopez/.local/share/nvim/site/a
fter,/usr/share/kde-settings/kde-profile/default/xdg/nvim/after,/etc/xdg/nvim/af
ter,/home/cesarguzmanlopez/.config/kdedefaults/nvim/after,/home/cesarguzmanlopez
/.config/nvim/after"[K
Searching for "/home/cesarguzmanlopez/.config/nvim/start/*"[K
Searching for "/home/cesarguzmanlopez/.config/kdedefaults/nvim/start/*"[K
Searching for "/etc/xdg/nvim/start/*"[K
Searching for "/usr/share/kde-settings/kde-profile/default/xdg/nvim/start/*"[K
-- More --[K[?25h[?25l[24;1H[10XSearching for "/home/cesarguzmanlopez/.local/share/nvim/site/start/*"[H[23M
Searching for "/home/cesarguzmanlopez/.local/share/flatpak/exports/share/nvim/si
te/start/*"[K
Searching for "/var/lib/flatpak/exports/share/nvim/site/start/*"[K
Searching for "/usr/local/share/nvim/site/start/*"[K
Searching for "/usr/share/nvim/site/start/*"[K
Searching for "/var/lib/snapd/desktop/nvim/site/start/*"[K
Searching for "/usr/share/nvim/runtime/start/*"[K
Searching for "/usr/lib/nvim/start/*"[K
Searching for "/var/lib/snapd/desktop/nvim/site/after/start/*"[K
Searching for "/usr/share/nvim/site/after/start/*"[K
Searching for "/usr/local/share/nvim/site/after/start/*"[K
Searching for "/var/lib/flatpak/exports/share/nvim/site/after/start/*"[K
Searching for "/home/cesarguzmanlopez/.local/share/flatpak/exports/share/nvim/si
te/after/start/*"[K
Searching for "/home/cesarguzmanlopez/.local/share/nvim/site/after/start/*"[K
Searching for "/usr/share/kde-settings/kde-profile/default/xdg/nvim/after/start/
*"[K
Searching for "/etc/xdg/nvim/after/start/*"[K
Searching for "/home/cesarguzmanlopez/.config/kdedefaults/nvim/after/start/*"[K
Searching for "/home/cesarguzmanlopez/.config/nvim/after/start/*"[K
not found in 'packpath': "start/*"[K
Searching for "plugin/**/*.vim" in runtime path[K
-- More --[K[?25h[?25l[CSPACE/d/j: screen/page/line down, b/u/k: up, q: quit[?25h[?25l[24;1H[63Xnot found in runtime path: "plugin/**/*.vim"[H[5M[19BSearching for "plugin/**/*.lua" in runtime path[K
not found in runtime path: "plugin/**/*.lua"[K
Reading ShaDa file "/home/cesarguzmanlopez/.local/state/nvim/shada/main.shada" i
Searching for "/home/cesarguzmanlopez/...g_Vim/autoload/provider/clipboard.vim"[K
Press ENTER or type command to continue[K]112[2 q]112[2 q[?25h[?25l[Aconfig/nvim/autoload/provider/clipboard.v
im"[36X[H[2M[22Blipboard.vim"                          [K
Press ENTER or type command to continue[K[?25h[?25l[ASearching for "/usr/share/nvim/site/autoload/provider/clipboard.vim"
[39XPress ENTER or type command to continue[23;32Hruntime/autoload/provider/clipboard.vim"
[39XPress ENTER or type command to continue[?25h[?25l[Achdir(/home/cesarguzmanlopez/.bash_vim)[32X
[39XPress ENTER or type command to continue[23;8Husr/share/nvim/runtime/autoload/provider)
[39XPress ENTER or type command to continue[?25h[?25l[23;8Hhome/cesarguzmanlopez/.bash_vim)[9X
[39XPress ENTER or type command to continue[Asourcing "/usr/share/nvim/runtime/autoload/provider/clipboard.vim"
[39XPress ENTER or type command to continue[?25h[?25l[H[24Mline 1: " The clipboard provider uses shell commands to communicate with the cli
pboard.[K
line 2: " The provider function will only be registered if a supported command i
s[K
line 3: " available.[K
line 4:[K
line 5: if exists('g:loaded_clipboard_provider')[K
line 6:   finish[K
line 7: endif[K
line 8: " Default to 1.  provider#clipboard#Executable() may set 2.[K
line 9: " To force a reload:[K
line 10: "   :unlet g:loaded_clipboard_provider[K
line 11: "   :runtime autoload/provider/clipboard.vim[K
line 12: let g:loaded_clipboard_provider = 1[K
line 13:[K
line 14: let s:copy = {}[K
line 15: let s:paste = {}[K
line 16: let s:clipboard = {}[K
line 17:[K
line 18: " When caching is enabled, store the jobid of the xclip/xsel process ke
eping[K
line 19: " ownership of the selection, so we know how long the cache is valid.[K
line 20: let s:selection = { 'owner': 0, 'data': [], 'stderr_buffered': v:true }
-- More --[K[?25h[?25l[CSPACE/d/j: screen/page/line down, b/u/k: up, q: quit[?25h[?25l[24;1H[63X[H[6M[18BError detected while processing /usr/share/nvim/runtime/autoload/provider/clipbo
ard.vim:[K
line   20:[K
Interrupted[K
finished sourcing /usr/share/nvim/runtime/autoload/provider/clipboard.vim[K
Press ENTER or type command to continue[K[?25h[?25l[H[96m[48;5;242m  (B[0;4m[93m1 (B[0;4m                                                                            (B[m[94m
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
(B[0;1;7m[No Name]                                                     0,0-1          All(B[m
[J[7;35HNVIM v0.8.1[9;19HNvim is open source and freely distributable[10;29Hhttps://neovim.io/#chat[12;18Htype  :help nvim[38;5;81m<Enter>(B[m       if you are new! [13;18Htype  :checkhealth[38;5;81m<Enter>(B[m     to optimize Nvim[14;18Htype  :q[38;5;81m<Enter>(B[m               to exit         [15;18Htype  :help[38;5;81m<Enter>(B[m            for help        [17;26HBecome a registered Vim user![18;18Htype  :help register[38;5;81m<Enter>(B[m   for information [1;5H[?25h[?25l[24;70Hq^@[1;5H[?25h[?25l[24;70H   [1;5H[?25h[?25l[H[23M
[K
[38;5;225m--- Terminal info --- {{{(B[m[K
&term: xterm-256color[K
Description: xterm with 256 colors[K
Aliases: xterm-256color[K
Boolean capabilities:[K
  auto_left_margin          bw         = false[K
  auto_right_margin         am         = true[K
  no_esc_ctlc               xsb        = false[K
  ceol_standout_glitch      xhp        = false[K
  eat_newline_glitch        xenl       = true[K
  erase_overstrike          eo         = false[K
  generic_type              gn         = false[K
  hard_copy                 hc         = false[K
  has_meta_key              km         = true[K
  has_status_line           hs         = true[K
  insert_null_glitch        in         = false[K
  memory_above              da         = false[K
  memory_below              db         = false[K
  move_insert_mode          mir        = true[K
  move_standout_mode        msgr       = true[K
  over_strike               os         = false[K
[38;5;121m-- More --(B[m[K[?25h[?25l[24;1H[10X[C[Cstatus_line_esc_ok        eslok      = true[H[23M
  dest_tabs_magic_smso      xt         = false[K
  tilde_glitch              hz         = false[K
  transparent_underline     ul         = false[K
  xon_xoff                  xon        = false[K
  needs_xon_xoff            nxon       = false[K
  prtr_silent               mc5i       = true[K
  hard_cursor               chts       = false[K
  non_rev_rmcup             nrrmc      = false[K
  no_pad_char               npc        = true[K
  non_dest_scroll_region    ndscr      = false[K
  can_change                ccc        = true[K
  back_color_erase          bce        = true[K
  hue_lightness_saturation  hls        = false[K
  col_addr_glitch           xhpa       = false[K
  cr_cancels_micro_mode     crxm       = false[K
  has_print_wheel           daisy      = false[K
  row_addr_glitch           xvpa       = false[K
  semi_auto_right_margin    sam        = false[K
  cpi_changes_res           cpix       = false[K
  lpi_changes_res           lpix       = false[K
  backspaces_with_bs        OTbs       = true[K
  crt_no_scrolling          OTns       = false[K
[38;5;121m-- More --(B[m[K[?25h[?25l[24;1H[10X[C[Cno_correctly_working_cr   OTnc       = false[H[23M
  gnu_has_meta_key          OTMT       = false[K
  linefeed_is_newline       OTNL       = false[K
  has_hardware_tabs         OTpt       = false[K
  return_does_clr_eol       OTxr       = false[K
Numeric capabilities:[K
  columns                   cols       = 80[K
  init_tabs                 it         = 8[K
  lines                     lines      = 24[K
  lines_of_memory           lm         = -1[K
  magic_cookie_glitch       xmc        = -1[K
  padding_baud_rate         pb         = -1[K
  virtual_terminal          vt         = -1[K
  width_status_line         wsl        = -1[K
  num_labels                nlab       = -1[K
  label_height              lh         = -1[K
  label_width               lw         = -1[K
  max_attributes            ma         = -1[K
  maximum_windows           wnum       = -1[K
  max_colors                colors     = 256[K
  max_pairs                 pairs      = 65536[K
  no_color_video            ncv        = -1[K
  buffer_capacity           bufsz      = -1[K
[38;5;121m-- More --(B[m[K[?25h[?25l[24;1H[10X[C[Cdot_vert_spacing          spinv      = -1[H[23M
  dot_horz_spacing          spinh      = -1[K
  max_micro_address         maddr      = -1[K
  max_micro_jump            mjump      = -1[K
  micro_col_size            mcs        = -1[K
  micro_line_size           mls        = -1[K
  number_of_pins            npins      = -1[K
  output_res_char           orc        = -1[K
  output_res_line           orl        = -1[K
  output_res_horz_inch      orhi       = -1[K
  output_res_vert_inch      orvi       = -1[K
  print_rate                cps        = -1[K
  wide_char_size            widcs      = -1[K
  buttons                   btns       = -1[K
  bit_image_entwining       bitwin     = -1[K
  bit_image_type            bitype     = -1[K
  magic_cookie_glitch_ul    OTug       = -1[K
  carriage_return_delay     OTdC       = -1[K
  new_line_delay            OTdN       = -1[K
  backspace_delay           OTdB       = -1[K
  horizontal_tab_delay      OTdT       = -1[K
  number_of_function_keys   OTkn       = -1[K
String capabilities:[K
[38;5;121m-- More --(B[m[K[?25h[?25l[24;1H[10X[C[Cback_tab                  cbt        =[C[38;5;81m<Esc>(B[m[Z[H[23M
  bell                      bel        = [38;5;81m<C-G>(B[m[K
  carriage_return           cr         = [38;5;81m<CR>(B[m[K
  change_scroll_region      csr        = [38;5;81m<Esc>(B[m[%i%p1%d;%p2%dr[K
  clear_all_tabs            tbc        = [38;5;81m<Esc>(B[m[3g[K
  clear_screen              clear      = [38;5;81m<Esc>(B[m[H[38;5;81m<Esc>(B[m[2J[K
  clr_eol                   el         = [38;5;81m<Esc>(B[m[K[K
  clr_eos                   ed         = [38;5;81m<Esc>(B[m[J[K
  column_address            hpa        = [38;5;81m<Esc>(B[m[%i%p1%dG[K
  cursor_address            cup        = [38;5;81m<Esc>(B[m[%i%p1%d;%p2%dH[K
  cursor_down               cud1       = [38;5;81m<NL>(B[m[K
  cursor_home               home       = [38;5;81m<Esc>(B[m[H[K
  cursor_invisible          civis      = [38;5;81m<Esc>(B[m[?25l[K
  cursor_left               cub1       = [38;5;81m<C-H>(B[m[K
  cursor_normal             cnorm      = [38;5;81m<Esc>(B[m[?25h[K
  cursor_right              cuf1       = [38;5;81m<Esc>(B[m[C[K
  cursor_up                 cuu1       = [38;5;81m<Esc>(B[m[A[K
  cursor_visible            cvvis      = [38;5;81m<Esc>(B[m[?12;25h[K
  delete_character          dch1       = [38;5;81m<Esc>(B[m[P[K
  delete_line               dl1        = [38;5;81m<Esc>(B[m[M[K
  dis_status_line           dsl        = [38;5;81m<Esc>(B[m[1$~[K
  enter_alt_charset_mode    smacs      = [38;5;81m<Esc>(B[m(0[K
  enter_blink_mode          blink      = [38;5;81m<Esc>(B[m[5m[K
[38;5;121m-- More --(B[m[K[?25h[?25l[38;5;121m SPACE/d/j: screen/page/line down, b/u/k: up, q: quit [?25h[?25l(B[m[24;1H[64X[C[Center_bold_mode           bold       =[C[38;5;81m<Esc>(B[m[1m[H[23M
  enter_ca_mode             smcup      = [38;5;81m<Esc>(B[m[?1049h[38;5;81m<Esc>(B[m[22;0;0t[K
  enter_dim_mode            dim        = [38;5;81m<Esc>(B[m[2m[K
  enter_insert_mode         smir       = [38;5;81m<Esc>(B[m[4h[K
  enter_secure_mode         invis      = [38;5;81m<Esc>(B[m[8m[K
  enter_reverse_mode        rev        = [38;5;81m<Esc>(B[m[7m[K
  enter_standout_mode       smso       = [38;5;81m<Esc>(B[m[7m[K
  enter_underline_mode      smul       = [38;5;81m<Esc>(B[m[4m[K
  erase_chars               ech        = [38;5;81m<Esc>(B[m[%p1%dX[K
  exit_alt_charset_mode     rmacs      = [38;5;81m<Esc>(B[m(B[K
  exit_attribute_mode       sgr0       = [38;5;81m<Esc>(B[m(B[38;5;81m<Esc>(B[m[m[K
  exit_ca_mode              rmcup      = [38;5;81m<Esc>(B[m[?1049l[38;5;81m<Esc>(B[m[23;0;0t[K
  exit_insert_mode          rmir       = [38;5;81m<Esc>(B[m[4l[K
  exit_standout_mode        rmso       = [38;5;81m<Esc>(B[m[27m[K
  exit_underline_mode       rmul       = [38;5;81m<Esc>(B[m[24m[K
  flash_screen              flash      = [38;5;81m<Esc>(B[m[?5h$<100/>[38;5;81m<Esc>(B[m[?5l[K
  from_status_line          fsl        = [38;5;81m<Esc>(B[m[0$}[K
  init_2string              is2        = [38;5;81m<Esc>(B[m[!p[38;5;81m<Esc>(B[m[?3;4l[38;5;81m<Esc>(B[m[4l[38;5;81m<Esc>(B[m>[K
  insert_line               il1        = [38;5;81m<Esc>(B[m[L[K
  key_backspace             kbs        = [38;5;81m^?(B[m[K
  key_dc                    kdch1      = [38;5;81m<Esc>(B[m[3~[K
  key_down                  kcud1      = [38;5;81m<Esc>(B[mOB[K
  key_f1                    kf1        = [38;5;81m<Esc>(B[mOP[K
[38;5;121m-- More --(B[m[K[?25h[?25l[24;1H[10X[C[Ckey_f10                   kf10       =[C[38;5;81m<Esc>(B[m[21~[H[23M
  key_f2                    kf2        = [38;5;81m<Esc>(B[mOQ[K
  key_f3                    kf3        = [38;5;81m<Esc>(B[mOR[K
  key_f4                    kf4        = [38;5;81m<Esc>(B[mOS[K
  key_f5                    kf5        = [38;5;81m<Esc>(B[m[15~[K
  key_f6                    kf6        = [38;5;81m<Esc>(B[m[17~[K
  key_f7                    kf7        = [38;5;81m<Esc>(B[m[18~[K
  key_f8                    kf8        = [38;5;81m<Esc>(B[m[19~[K
  key_f9                    kf9        = [38;5;81m<Esc>(B[m[20~[K
  key_home                  khome      = [38;5;81m<Esc>(B[mOH[K
  key_ic                    kich1      = [38;5;81m<Esc>(B[m[2~[K
  key_left                  kcub1      = [38;5;81m<Esc>(B[mOD[K
  key_npage                 knp        = [38;5;81m<Esc>(B[m[6~[K
  key_ppage                 kpp        = [38;5;81m<Esc>(B[m[5~[K
  key_right                 kcuf1      = [38;5;81m<Esc>(B[mOC[K
  key_sf                    kind       = [38;5;81m<Esc>(B[m[1;2B[K
  key_sr                    kri        = [38;5;81m<Esc>(B[m[1;2A[K
  key_up                    kcuu1      = [38;5;81m<Esc>(B[mOA[K
  keypad_local              rmkx       = [38;5;81m<Esc>(B[m[?1l[38;5;81m<Esc>(B[m>[K
  keypad_xmit               smkx       = [38;5;81m<Esc>(B[m[?1h[38;5;81m<Esc>(B[m=[K
  meta_off                  rmm        = [38;5;81m<Esc>(B[m[?1034l[K
  meta_on                   smm        = [38;5;81m<Esc>(B[m[?1034h[K
  newline                   nel        = [38;5;81m<Esc>(B[mE[K
[38;5;121m-- More --(B[m[K[?25h[?25l[24;1H[10X[C[Cparm_dch                  dch        =[C[38;5;81m<Esc>(B[m[%p1%dP[H[23M
  parm_delete_line          dl         = [38;5;81m<Esc>(B[m[%p1%dM[K
  parm_down_cursor          cud        = [38;5;81m<Esc>(B[m[%p1%dB[K
  parm_ich                  ich        = [38;5;81m<Esc>(B[m[%p1%d@[K
  parm_index                indn       = [38;5;81m<Esc>(B[m[%p1%dS[K
  parm_insert_line          il         = [38;5;81m<Esc>(B[m[%p1%dL[K
  parm_left_cursor          cub        = [38;5;81m<Esc>(B[m[%p1%dD[K
  parm_right_cursor         cuf        = [38;5;81m<Esc>(B[m[%p1%dC[K
  parm_rindex               rin        = [38;5;81m<Esc>(B[m[%p1%dT[K
  parm_up_cursor            cuu        = [38;5;81m<Esc>(B[m[%p1%dA[K
  print_screen              mc0        = [38;5;81m<Esc>(B[m[i[K
  prtr_off                  mc4        = [38;5;81m<Esc>(B[m[4i[K
  prtr_on                   mc5        = [38;5;81m<Esc>(B[m[5i[K
  repeat_char               rep        = %p1%c[38;5;81m<Esc>(B[m[%p2%{1}%-%db[K
  reset_1string             rs1        = [38;5;81m<Esc>(B[mc[38;5;81m<Esc>(B[m]104[38;5;81m<C-G>(B[m[K
  reset_2string             rs2        = [38;5;81m<Esc>(B[m[!p[38;5;81m<Esc>(B[m[?3;4l[38;5;81m<Esc>(B[m[4l[38;5;81m<Esc>(B[m>[K
  restore_cursor            rc         = [38;5;81m<Esc>(B[m8[K
  row_address               vpa        = [38;5;81m<Esc>(B[m[%i%p1%dd[K
  save_cursor               sc         = [38;5;81m<Esc>(B[m7[K
  scroll_forward            ind        = [38;5;81m<NL>(B[m[K
  scroll_reverse            ri         = [38;5;81m<Esc>(B[mM[K
  set_attributes            sgr        = %?%p9%t[38;5;81m<Esc>(B[m(0%e[38;5;81m<Esc>(B[m(B%;[38;5;81m<Esc>(B[m[0%?%p6%t
;1%;%?%p5%t;2%;%?%p2%t;4%;%?%p1%p3%|%t;7%;%?%p4%t;5%;%?%p7%t;8%;m[K
[38;5;121m-- More --(B[m[K[?25h[?25l[24;1H[10X[C[Cset_tab                   hts        =[C[38;5;81m<Esc>(B[mH[H[23M
  tab                       ht         = [38;5;81m<Tab>(B[m[K
  to_status_line            tsl        = [38;5;81m<Esc>(B[m[2$~[38;5;81m<Esc>(B[m[1$}[38;5;81m<Esc>(B[m[%i%p1%d`[K
  key_a1                    ka1        = [38;5;81m<Esc>(B[mOw[K
  key_a3                    ka3        = [38;5;81m<Esc>(B[mOy[K
  key_b2                    kb2        = [38;5;81m<Esc>(B[mOu[K
  key_c1                    kc1        = [38;5;81m<Esc>(B[mOq[K
  key_c3                    kc3        = [38;5;81m<Esc>(B[mOs[K
  acs_chars                 acsc       = ``aaffggiijjkkllmmnnooppqqrrssttuuvvwwx
xyyzz{{||}}~~[K
  key_btab                  kcbt       = [38;5;81m<Esc>(B[m[Z[K
  enter_am_mode             smam       = [38;5;81m<Esc>(B[m[?7h[K
  exit_am_mode              rmam       = [38;5;81m<Esc>(B[m[?7l[K
  key_beg                   kbeg       = [38;5;81m<Esc>(B[mOE[K
  key_end                   kend       = [38;5;81m<Esc>(B[mOF[K
  key_enter                 kent       = [38;5;81m<Esc>(B[mOM[K
  key_sdc                   kDC        = [38;5;81m<Esc>(B[m[3;2~[K
  key_send                  kEND       = [38;5;81m<Esc>(B[m[1;2F[K
  key_shome                 kHOM       = [38;5;81m<Esc>(B[m[1;2H[K
  key_sic                   kIC        = [38;5;81m<Esc>(B[m[2;2~[K
  key_sleft                 kLFT       = [38;5;81m<Esc>(B[m[1;2D[K
  key_snext                 kNXT       = [38;5;81m<Esc>(B[m[6;2~[K
  key_sprevious             kPRV       = [38;5;81m<Esc>(B[m[5;2~[K
[38;5;121m-- More --(B[m[K[?25h[?25l[24;1H[10X[C[Ckey_sright                kRIT       =[C[38;5;81m<Esc>(B[m[1;2C[H[23M
  key_f11                   kf11       = [38;5;81m<Esc>(B[m[23~[K
  key_f12                   kf12       = [38;5;81m<Esc>(B[m[24~[K
  key_f13                   kf13       = [38;5;81m<Esc>(B[m[1;2P[K
  key_f14                   kf14       = [38;5;81m<Esc>(B[m[1;2Q[K
  key_f15                   kf15       = [38;5;81m<Esc>(B[m[1;2R[K
  key_f16                   kf16       = [38;5;81m<Esc>(B[m[1;2S[K
  key_f17                   kf17       = [38;5;81m<Esc>(B[m[15;2~[K
  key_f18                   kf18       = [38;5;81m<Esc>(B[m[17;2~[K
  key_f19                   kf19       = [38;5;81m<Esc>(B[m[18;2~[K
  key_f20                   kf20       = [38;5;81m<Esc>(B[m[19;2~[K
  key_f21                   kf21       = [38;5;81m<Esc>(B[m[20;2~[K
  key_f22                   kf22       = [38;5;81m<Esc>(B[m[21;2~[K
  key_f23                   kf23       = [38;5;81m<Esc>(B[m[23;2~[K
  key_f24                   kf24       = [38;5;81m<Esc>(B[m[24;2~[K
  key_f25                   kf25       = [38;5;81m<Esc>(B[m[1;5P[K
  key_f26                   kf26       = [38;5;81m<Esc>(B[m[1;5Q[K
  key_f27                   kf27       = [38;5;81m<Esc>(B[m[1;5R[K
  key_f28                   kf28       = [38;5;81m<Esc>(B[m[1;5S[K
  key_f29                   kf29       = [38;5;81m<Esc>(B[m[15;5~[K
  key_f30                   kf30       = [38;5;81m<Esc>(B[m[17;5~[K
  key_f31                   kf31       = [38;5;81m<Esc>(B[m[18;5~[K
  key_f32                   kf32       = [38;5;81m<Esc>(B[m[19;5~[K
[38;5;121m-- More --(B[m[K[?25h[?25l[24;1H[10X[C[Ckey_f33                   kf33       =[C[38;5;81m<Esc>(B[m[20;5~[H[23M
  key_f34                   kf34       = [38;5;81m<Esc>(B[m[21;5~[K
  key_f35                   kf35       = [38;5;81m<Esc>(B[m[23;5~[K
  key_f36                   kf36       = [38;5;81m<Esc>(B[m[24;5~[K
  key_f37                   kf37       = [38;5;81m<Esc>(B[m[1;6P[K
  key_f38                   kf38       = [38;5;81m<Esc>(B[m[1;6Q[K
  key_f39                   kf39       = [38;5;81m<Esc>(B[m[1;6R[K
  key_f40                   kf40       = [38;5;81m<Esc>(B[m[1;6S[K
  key_f41                   kf41       = [38;5;81m<Esc>(B[m[15;6~[K
  key_f42                   kf42       = [38;5;81m<Esc>(B[m[17;6~[K
  key_f43                   kf43       = [38;5;81m<Esc>(B[m[18;6~[K
  key_f44                   kf44       = [38;5;81m<Esc>(B[m[19;6~[K
  key_f45                   kf45       = [38;5;81m<Esc>(B[m[20;6~[K
  key_f46                   kf46       = [38;5;81m<Esc>(B[m[21;6~[K
  key_f47                   kf47       = [38;5;81m<Esc>(B[m[23;6~[K
  key_f48                   kf48       = [38;5;81m<Esc>(B[m[24;6~[K
  key_f49                   kf49       = [38;5;81m<Esc>(B[m[1;3P[K
  key_f50                   kf50       = [38;5;81m<Esc>(B[m[1;3Q[K
  key_f51                   kf51       = [38;5;81m<Esc>(B[m[1;3R[K
  key_f52                   kf52       = [38;5;81m<Esc>(B[m[1;3S[K
  key_f53                   kf53       = [38;5;81m<Esc>(B[m[15;3~[K
  key_f54                   kf54       = [38;5;81m<Esc>(B[m[17;3~[K
  key_f55                   kf55       = [38;5;81m<Esc>(B[m[18;3~[K
[38;5;121m-- More --(B[m[K[?25h[?25l[24;1H[10X[C[Ckey_f56                   kf56       =[C[38;5;81m<Esc>(B[m[19;3~[H[23M
  key_f57                   kf57       = [38;5;81m<Esc>(B[m[20;3~[K
  key_f58                   kf58       = [38;5;81m<Esc>(B[m[21;3~[K
  key_f59                   kf59       = [38;5;81m<Esc>(B[m[23;3~[K
  key_f60                   kf60       = [38;5;81m<Esc>(B[m[24;3~[K
  key_f61                   kf61       = [38;5;81m<Esc>(B[m[1;4P[K
  key_f62                   kf62       = [38;5;81m<Esc>(B[m[1;4Q[K
  key_f63                   kf63       = [38;5;81m<Esc>(B[m[1;4R[K
  clr_bol                   el1        = [38;5;81m<Esc>(B[m[1K[K
  clear_margins             mgc        = [38;5;81m<Esc>(B[m[?69l[K
  user6                     u6         = [38;5;81m<Esc>(B[m[%i%d;%dR[K
  user7                     u7         = [38;5;81m<Esc>(B[m[6n[K
  user8                     u8         = [38;5;81m<Esc>(B[m[?%[;0123456789]c[K
  user9                     u9         = [38;5;81m<Esc>(B[m[c[K
  orig_pair                 op         = [38;5;81m<Esc>(B[m[39;49m[K
  orig_colors               oc         = [38;5;81m<Esc>(B[m]104[38;5;81m<C-G>(B[m[K
  initialize_color          initc      = [38;5;81m<Esc>(B[m]4;%p1%d;rgb:%p2%{255}%*%{1000}%/%
2.2X/%p3%{255}%*%{1000}%/%2.2X/%p4%{255}%*%{1000}%/%2.2X[38;5;81m<Esc>(B[m\[K
  enter_italics_mode        sitm       = [38;5;81m<Esc>(B[m[3m[K
  exit_italics_mode         ritm       = [38;5;81m<Esc>(B[m[23m[K
  key_mouse                 kmous      = [38;5;81m<Esc>(B[m[<[K
  set_a_foreground          setaf      = [38;5;81m<Esc>(B[m[%?%p1%{8}%<%t3%p1%d%e%p1%{16}%<%t
9%p1%{8}%-%d%e38;5;%p1%d%;m[K
[38;5;121m-- More --(B[m[K[?25h[?25l[24;1H[10X[C[Cset_a_background          setab      =[C[38;5;81m<Esc>(B[m[%?%p1%{8}%<%t4%p1%d%e%p1%{16}%<%[H[M[23B[J[23;80Ht[H[22M
10%p1%{8}%-%d%e48;5;%p1%d%;m[K
  set_tb_margin             smgtb      = [38;5;81m<Esc>(B[m[%i%p1%d;%p2%dr[K
  memory_lock               meml       = [38;5;81m<Esc>(B[ml[K
  memory_unlock             memu       = [38;5;81m<Esc>(B[mm[K
Extended boolean capabilities:[K
  AX                        = true[K
  XT                        = true[K
Extended string capabilities:[K
  Cr                        = [38;5;81m<Esc>(B[m]112[38;5;81m<C-G>(B[m[K
  Cs                        = [38;5;81m<Esc>(B[m]12;%p1%s[38;5;81m<C-G>(B[m[K
  E3                        = [38;5;81m<Esc>(B[m[3J[K
  Ms                        = [38;5;81m<Esc>(B[m]52;%p1%s;%p2%s[38;5;81m<C-G>(B[m[K
  Se                        = [38;5;81m<Esc>(B[m[2 q[K
  Ss                        = [38;5;81m<Esc>(B[m[%p1%d q[K
  XM                        = [38;5;81m<Esc>(B[m[?1006;1000%?%p1%{1}%=%th%el%;[K
  kDC3                      = [38;5;81m<Esc>(B[m[3;3~[K
  kDC4                      = [38;5;81m<Esc>(B[m[3;4~[K
  kDC5                      = [38;5;81m<Esc>(B[m[3;5~[K
  kDC6                      = [38;5;81m<Esc>(B[m[3;6~[K
  kDC7                      = [38;5;81m<Esc>(B[m[3;7~[K
  kDN                       = [38;5;81m<Esc>(B[m[1;2B[K
  kDN3                      = [38;5;81m<Esc>(B[m[1;3B[K
[38;5;121m-- More --(B[m[K[?25h[?25l[24;1H[10X[C[CkDN4                      =[C[38;5;81m<Esc>(B[m[1;4B[H[23M
  kDN5                      = [38;5;81m<Esc>(B[m[1;5B[K
  kDN6                      = [38;5;81m<Esc>(B[m[1;6B[K
  kDN7                      = [38;5;81m<Esc>(B[m[1;7B[K
  kEND3                     = [38;5;81m<Esc>(B[m[1;3F[K
  kEND4                     = [38;5;81m<Esc>(B[m[1;4F[K
  kEND5                     = [38;5;81m<Esc>(B[m[1;5F[K
  kEND6                     = [38;5;81m<Esc>(B[m[1;6F[K
  kEND7                     = [38;5;81m<Esc>(B[m[1;7F[K
  kHOM3                     = [38;5;81m<Esc>(B[m[1;3H[K
  kHOM4                     = [38;5;81m<Esc>(B[m[1;4H[K
  kHOM5                     = [38;5;81m<Esc>(B[m[1;5H[K
  kHOM6                     = [38;5;81m<Esc>(B[m[1;6H[K
  kHOM7                     = [38;5;81m<Esc>(B[m[1;7H[K
  kIC3                      = [38;5;81m<Esc>(B[m[2;3~[K
  kIC4                      = [38;5;81m<Esc>(B[m[2;4~[K
  kIC5                      = [38;5;81m<Esc>(B[m[2;5~[K
  kIC6                      = [38;5;81m<Esc>(B[m[2;6~[K
  kIC7                      = [38;5;81m<Esc>(B[m[2;7~[K
  kLFT3                     = [38;5;81m<Esc>(B[m[1;3D[K
  kLFT4                     = [38;5;81m<Esc>(B[m[1;4D[K
  kLFT5                     = [38;5;81m<Esc>(B[m[1;5D[K
  kLFT6                     = [38;5;81m<Esc>(B[m[1;6D[K
[38;5;121m-- More --(B[m[K[?25h[?25l[24;1H[10X[C[CkLFT7                     =[C[38;5;81m<Esc>(B[m[1;7D[H[23M
  kNXT3                     = [38;5;81m<Esc>(B[m[6;3~[K
  kNXT4                     = [38;5;81m<Esc>(B[m[6;4~[K
  kNXT5                     = [38;5;81m<Esc>(B[m[6;5~[K
  kNXT6                     = [38;5;81m<Esc>(B[m[6;6~[K
  kNXT7                     = [38;5;81m<Esc>(B[m[6;7~[K
  kPRV3                     = [38;5;81m<Esc>(B[m[5;3~[K
  kPRV4                     = [38;5;81m<Esc>(B[m[5;4~[K
  kPRV5                     = [38;5;81m<Esc>(B[m[5;5~[K
  kPRV6                     = [38;5;81m<Esc>(B[m[5;6~[K
  kPRV7                     = [38;5;81m<Esc>(B[m[5;7~[K
  kRIT3                     = [38;5;81m<Esc>(B[m[1;3C[K
  kRIT4                     = [38;5;81m<Esc>(B[m[1;4C[K
  kRIT5                     = [38;5;81m<Esc>(B[m[1;5C[K
  kRIT6                     = [38;5;81m<Esc>(B[m[1;6C[K
  kRIT7                     = [38;5;81m<Esc>(B[m[1;7C[K
  kUP                       = [38;5;81m<Esc>(B[m[1;2A[K
  kUP3                      = [38;5;81m<Esc>(B[m[1;3A[K
  kUP4                      = [38;5;81m<Esc>(B[m[1;4A[K
  kUP5                      = [38;5;81m<Esc>(B[m[1;5A[K
  kUP6                      = [38;5;81m<Esc>(B[m[1;6A[K
  kUP7                      = [38;5;81m<Esc>(B[m[1;7A[K
  ka2                       = [38;5;81m<Esc>(B[mOx[K
[38;5;121m-- More --(B[m[K[?25h[?25l[24;1H[10X[C[Ckb1                       =[C[38;5;81m<Esc>(B[mOt[H[23M
  kb3                       = [38;5;81m<Esc>(B[mOv[K
  kc2                       = [38;5;81m<Esc>(B[mOr[K
  kp5                       = [38;5;81m<Esc>(B[mOE[K
  kpADD                     = [38;5;81m<Esc>(B[mOk[K
  kpCMA                     = [38;5;81m<Esc>(B[mOl[K
  kpDIV                     = [38;5;81m<Esc>(B[mOo[K
  kpDOT                     = [38;5;81m<Esc>(B[mOn[K
  kpMUL                     = [38;5;81m<Esc>(B[mOj[K
  kpSUB                     = [38;5;81m<Esc>(B[mOm[K
  kpZRO                     = [38;5;81m<Esc>(B[mOp[K
  rmxx                      = [38;5;81m<Esc>(B[m[29m[K
  smxx                      = [38;5;81m<Esc>(B[m[9m[K
  xm                        = [38;5;81m<Esc>(B[m[<%i%p3%d;%p1%d;%p2%d;%?%p4%tM%em%;[K
  ext.get_bg                = [38;5;81m<Esc>(B[m]11;?[38;5;81m<C-G>(B[m[K
  ext.get_extkeys           = [38;5;81m<Esc>(B[m[?u[38;5;81m<Esc>(B[m[c[K
  Ss                        = [38;5;81m<Esc>(B[m[%p1%d q[K
  Se                        = [38;5;81m<Esc>(B[m[ q[K
  ext.resize_screen         = [38;5;81m<Esc>(B[m[8;%p1%d;%p2%dt[K
  ext.reset_scroll_region   = [38;5;81m<Esc>(B[m[r[K
  setrgbf                   = [38;5;81m<Esc>(B[m[38;2;%p1%d;%p2%d;%p3%dm[K
  setrgbb                   = [38;5;81m<Esc>(B[m[48;2;%p1%d;%p2%d;%p3%dm[K
  ext.save_title            = [38;5;81m<Esc>(B[m[22;0t[K
[38;5;121m-- More --(B[m[K[?25h[?25l[24;1H[10X[C[Cext.restore_title         =[C[38;5;81m<Esc>(B[m[23;0t[H[14M[10B  ext.enable_lr_margin      = [38;5;81m<Esc>(B[m[?69h[K
  ext.disable_lr_margin     = [38;5;81m<Esc>(B[m[?69l[K
  ext.enable_bpaste         = [38;5;81m<Esc>(B[m[?2004h[K
  ext.disable_bpaste        = [38;5;81m<Esc>(B[m[?2004l[K
  ext.enable_focus          = [38;5;81m<Esc>(B[m[?1004h[K
  ext.disable_focus         = [38;5;81m<Esc>(B[m[?1004l[K
  ext.enable_mouse          = [38;5;81m<Esc>(B[m[?1002h[38;5;81m<Esc>(B[m[?1006h[K
  ext.disable_mouse         = [38;5;81m<Esc>(B[m[?1002l[38;5;81m<Esc>(B[m[?1006l[K
  ext.enable_mouse_move     = [38;5;81m<Esc>(B[m[?1003h[K
  ext.disable_mouse_move    = [38;5;81m<Esc>(B[m[?1003l[K
  ext.enable_extended_keys  = [38;5;81m<Esc>(B[m[>4;2m[K
  ext.disable_extended_keys = [38;5;81m<Esc>(B[m[>4;0m[K
}}}[K
[J[3C[?25h[?25l[H[96m[48;5;242m  (B[0;4m[93m1 (B[0;4m                                                                            
(B[m[94m                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                  (B[mNVIM v0.8.1[94m                                   
                                                                                
                  (B[mNvim is open source and freely distributable[94m                  
                            (B[mhttps://neovim.io/#chat[94m                             
                                                                                
                 (B[mtype  :help nvim[38;5;81m<Enter>(B[m       if you are new! [94m                 
                 (B[mtype  :checkhealth[38;5;81m<Enter>(B[m     to optimize Nvim[94m                 
                 (B[mtype  :q[38;5;81m<Enter>(B[m               to exit         [94m                 
                 (B[mtype  :help[38;5;81m<Enter>(B[m            for help        [94m                 
                                                                                
                         (B[mBecome a registered Vim user![94m                          
                 (B[mtype  :help register[38;5;81m<Enter>(B[m   for information [94m                 
                                                                                
                                                                                
                                                                                
                                                                                
(B[0;1;7m[No Name]                                                     0,0-1          All(B[m
[J[3C[?25h[?25l[1;5H[?25h[?25l[24;70Hq^@[1;5H[?25h[?25l[24;70H   [1;5H[?25h[?25l[23B:q]112[2 q[24;1H[?25h[?25lExecuting: q[5;24r[5;1H[19M[r[4;1H(B[0;1;7m                                                                                

(B[mWriting ShaDa file "/home/cesarguzmanlopez/.local/state/nvim/shada/main.shada"[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/home/cesarguzmanlopez/basura/proyectoc)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/home/cesarguzmanlopez/basura/proyectoc/src)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim/Config_Vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim/Config_Vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K
chdir(/home/cesarguzmanlopez/.bash_vim)[K]112[2 q[24;1H[?25h[?25l]112[2 q(B[m[?25h[?1l>[>4;0m[?1049l[23;0;0t[23;0t[?2004l[?1004l[?25h