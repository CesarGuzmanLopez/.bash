!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/cesarguzmanlopez/.bash_vim/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
$FZF_DEFAULT_COMMAND	Config_Vim/FZF.vim	/^let $FZF_DEFAULT_COMMAND='find . \\! \\( -type d -path .\/.git -prune \\) \\! -type d \\! -iname/;"	v
$OHS	init.vim	/^let $OHS = "\/home\/cesarguzmanlopez\/.bash_vim\/"$/;"	v
--	lib/utils.sh	/^  (check) alias -- "${1%%=*}" &>\/dev\/null && return 0 ;;$/;"	a
--	lib/utils.sh	/^  alias -- "$1"$/;"	a
000	aliases/chmod.aliases.sh	/^alias 000='chmod 000'                       # ---------- (nobody)$/;"	a
640	aliases/chmod.aliases.sh	/^alias 640='chmod 640'                       # -rw-r----- (user: rw, group: r, other: -)$/;"	a
644	aliases/chmod.aliases.sh	/^alias 644='chmod 644'                       # -rw-r--r-- (user: rw, group: r, other: -)$/;"	a
755	aliases/chmod.aliases.sh	/^alias 755='chmod 755'                       # -rwxr-xr-x (user: rwx, group: rx, other: x)$/;"	a
775	aliases/chmod.aliases.sh	/^alias 775='chmod 775'                       # -rwxrwxr-x (user: rwx, group: rwx, other: rx)$/;"	a
:q	.bashrc	/^function :q () {$/;"	f
<C-E>	Config_Vim/KeyBindings.vim	/^nnoremap <C-E> :NERDTreeToggle<CR>$/;"	m
<C-F>	Config_Vim/KeyBindings.vim	/^noremap <silent> <C-F> :set foldlevel=99<CR>$/;"	m
<C-S>	Config_Vim/KeyBindings.vim	/^inoremap <silent> <C-S>         <C-O>:update<CR>$/;"	m
<C-S>	Config_Vim/KeyBindings.vim	/^noremap <silent> <C-S>          :update<CR>$/;"	m
<C-S>	Config_Vim/KeyBindings.vim	/^vnoremap <silent> <C-S>         <C-C>:update<CR>$/;"	m
<C-a>	Config_Vim/KeyBindings.vim	/^imap <silent><script><expr> <C-a> copilot#Accept("\\<CR>")$/;"	m
<C-b>	Config_Vim/keybindingsCoc.vim	/^  inoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? "\\<c-r>=coc#float#scroll(0)\\</;"	m
<C-b>	Config_Vim/keybindingsCoc.vim	/^  nnoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? coc#float#scroll(0) : "\\<C-b>"$/;"	m
<C-b>	Config_Vim/keybindingsCoc.vim	/^  vnoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? coc#float#scroll(0) : "\\<C-b>"$/;"	m
<C-d>	Config_Vim/KeyBindings.vim	/^imap <C-d> <Plug>(copilot-previous)$/;"	m
<C-f>	Config_Vim/KeyBindings.vim	/^imap <C-f> <Plug>(copilot-next)$/;"	m
<C-f>	Config_Vim/KeyBindings.vim	/^noremap <silent> <C-f> :set foldlevel=0<CR>$/;"	m
<C-f>	Config_Vim/keybindingsCoc.vim	/^  inoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? "\\<c-r>=coc#float#scroll(1)\\</;"	m
<C-f>	Config_Vim/keybindingsCoc.vim	/^  nnoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? coc#float#scroll(1) : "\\<C-f>"$/;"	m
<C-f>	Config_Vim/keybindingsCoc.vim	/^  vnoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? coc#float#scroll(1) : "\\<C-f>"$/;"	m
<C-z>	Config_Vim/KeyBindings.vim	/^noremap <silent> <C-z> :undo<CR>$/;"	m
<C-z>	Config_Vim/KeyBindings.vim	/^vnoremap <silent> <C-z> :undo<CR>$/;"	m
<CR>	Config_Vim/keybindingsCoc.vim	/^inoremap <silent><expr> <CR> coc#pum#visible() ? coc#pum#confirm()$/;"	m
<F1>	Config_Vim/KeyBindings.vim	/^nmap <F1>           :call Debug()<CR>$/;"	m
<F5>	Config_Vim/KeyBindings.vim	/^nmap <F5>           :call RunProject()<CR>$/;"	m
<S-TAB>	Config_Vim/keybindingsCoc.vim	/^inoremap <expr><S-TAB> coc#pum#visible() ? coc#pum#prev(1) : "\\<C-h>"$/;"	m
<TAB>	Config_Vim/keybindingsCoc.vim	/^inoremap <silent><expr> <TAB>$/;"	m
<c-@>	Config_Vim/keybindingsCoc.vim	/^  inoremap <silent><expr> <c-@> coc#refresh()$/;"	m
<c-space>	Config_Vim/keybindingsCoc.vim	/^  inoremap <silent><expr> <c-space> coc#refresh()$/;"	m
<c-z>o	Config_Vim/KeyBindings.vim	/^nnoremap <c-z>o :Goyo <CR>$/;"	m
<leader><F1>	Config_Vim/KeyBindings.vim	/^nmap <leader><F1>   :call DebugCode()<CR>$/;"	m
<leader><F5>	Config_Vim/KeyBindings.vim	/^nmap <leader><F5>   :call RunCode()<CR>$/;"	m
<leader>a	Config_Vim/keybindingsCoc.vim	/^nmap <leader>a  <Plug>(coc-codeaction-selected)$/;"	m
<leader>a	Config_Vim/keybindingsCoc.vim	/^xmap <leader>a  <Plug>(coc-codeaction-selected)$/;"	m
<leader>ac	Config_Vim/keybindingsCoc.vim	/^nmap <leader>ac  <Plug>(coc-codeaction-cursor)$/;"	m
<leader>as	Config_Vim/keybindingsCoc.vim	/^nmap <leader>as  <Plug>(coc-codeaction-source)$/;"	m
<leader>cl	Config_Vim/keybindingsCoc.vim	/^nmap <leader>cl  <Plug>(coc-codelens-action)$/;"	m
<leader>f	Config_Vim/keybindingsCoc.vim	/^nmap <leader>f  <Plug>(coc-format-selected)$/;"	m
<leader>f	Config_Vim/keybindingsCoc.vim	/^xmap <leader>f  <Plug>(coc-format-selected)$/;"	m
<leader>n	Config_Vim/KeyBindings.vim	/^noremap  <leader>n :tabnew <CR>$/;"	m
<leader>qf	Config_Vim/keybindingsCoc.vim	/^nmap <leader>qf  <Plug>(coc-fix-current)$/;"	m
<leader>r	Config_Vim/keybindingsCoc.vim	/^nmap <silent> <leader>r  <Plug>(coc-codeaction-refactor-selected)$/;"	m
<leader>r	Config_Vim/keybindingsCoc.vim	/^xmap <silent> <leader>r  <Plug>(coc-codeaction-refactor-selected)$/;"	m
<leader>re	Config_Vim/keybindingsCoc.vim	/^nmap <silent> <leader>re <Plug>(coc-codeaction-refactor)$/;"	m
<leader>rn	Config_Vim/keybindingsCoc.vim	/^nmap <leader>rn <Plug>(coc-rename)$/;"	m
<space>a	Config_Vim/keybindingsCoc.vim	/^nnoremap <silent><nowait> <space>a  :<C-u>CocList diagnostics<cr>$/;"	m
<space>c	Config_Vim/keybindingsCoc.vim	/^nnoremap <silent><nowait> <space>c  :<C-u>CocList commands<cr>$/;"	m
<space>e	Config_Vim/keybindingsCoc.vim	/^nnoremap <silent><nowait> <space>e  :<C-u>CocList extensions<cr>$/;"	m
<space>j	Config_Vim/keybindingsCoc.vim	/^nnoremap <silent><nowait> <space>j  :<C-u>CocNext<CR>$/;"	m
<space>k	Config_Vim/keybindingsCoc.vim	/^nnoremap <silent><nowait> <space>k  :<C-u>CocPrev<CR>$/;"	m
<space>o	Config_Vim/keybindingsCoc.vim	/^nnoremap <silent><nowait> <space>o  :<C-u>CocList outline<cr>$/;"	m
<space>p	Config_Vim/keybindingsCoc.vim	/^nnoremap <silent><nowait> <space>p  :<C-u>CocListResume<CR>$/;"	m
<space>s	Config_Vim/keybindingsCoc.vim	/^nnoremap <silent><nowait> <space>s  :<C-u>CocList -I symbols<cr>$/;"	m
Aliases	plugins/ansible/README.md	/^## Aliases$/;"	s	chapter:ansible plugin
Aliases	plugins/brew/README.md	/^## Aliases$/;"	s	chapter:brew plugin
Aliases	plugins/golang/README.md	/^## Aliases$/;"	s	chapter:Golang plugin
Aliases	plugins/kubectl/README.md	/^## Aliases$/;"	s	chapter:Kubectl plugin
Aliases	plugins/npm/README.md	/^## Aliases$/;"	s
Aliases	plugins/vagrant/README.md	/^## Aliases$/;"	s	chapter:vagrant plugin
Bashmarks plugin	plugins/bashmarks/README.md	/^# Bashmarks plugin$/;"	c
Battery Charge	themes/brainy/README.md	/^#### Battery Charge$/;"	t	subsection:Brainy theme""Configuration""Theme Environment Variables
Brainy theme	themes/brainy/README.md	/^# Brainy theme$/;"	c
COMPREPLY=	completions/apm.completion.sh	/^    COMPREPLY=()$/;"	f
COMPREPLY=	completions/bundler.completion.sh	/^  COMPREPLY=()$/;"	f
COMPREPLY=	completions/composer.completion.sh	/^    COMPREPLY=()$/;"	f
COMPREPLY=	completions/defaults.completion.sh	/^    COMPREPLY=()$/;"	f
COMPREPLY=	completions/docker-compose.completion.sh	/^	COMPREPLY=()$/;"	f
COMPREPLY=	completions/docker-machine.completion.sh	/^            COMPREPLY=()$/;"	f
COMPREPLY=	completions/docker-machine.completion.sh	/^        COMPREPLY=()$/;"	f
COMPREPLY=	completions/docker-machine.completion.sh	/^    COMPREPLY=()$/;"	f
COMPREPLY=	completions/docker.completion.sh	/^	COMPREPLY=()$/;"	f
COMPREPLY=	completions/gh.completion.sh	/^        COMPREPLY=()$/;"	f
COMPREPLY=	completions/git_flow.completion.sh	/^		COMPREPLY=()$/;"	f
COMPREPLY=	completions/git_flow_avh.completion.sh	/^		COMPREPLY=()$/;"	f
COMPREPLY=	completions/hub.completion.sh	/^        COMPREPLY=()$/;"	f
COMPREPLY=	completions/jboss7.completion.sh	/^    COMPREPLY=()$/;"	f
COMPREPLY=	completions/maven.completion.sh	/^    COMPREPLY=()$/;"	f
COMPREPLY=	completions/packer.completion.sh	/^    COMPREPLY=()$/;"	f
COMPREPLY=	completions/salt.completion.sh	/^        COMPREPLY=() # TODO: finish this one? how?$/;"	f
COMPREPLY=	completions/salt.completion.sh	/^    COMPREPLY=()$/;"	f
COMPREPLY=	completions/sdkman.completion.sh	/^  COMPREPLY=()$/;"	f
COMPREPLY=	completions/svn.completion.sh	/^	COMPREPLY=()$/;"	f
COMPREPLY=	completions/terraform.completion.sh	/^   COMPREPLY=()$/;"	f
COMPREPLY=	completions/test_kitchen.completion.sh	/^  COMPREPLY=()$/;"	f
COMPREPLY=	completions/tmux.completion.sh	/^    COMPREPLY=()$/;"	f
COMPREPLY=	completions/todo.completion.sh	/^    COMPREPLY=()$/;"	f
COMPREPLY=	completions/virtualbox.completion.sh	/^    COMPREPLY=()$/;"	f
COMPREPLY=	plugins/bashmarks/bashmarks.plugin.sh	/^    COMPREPLY=()$/;"	f
COMPREPLY=	themes/brainy/brainy.theme.sh	/^	COMPREPLY=()$/;"	f
COMPREPLY=	tools/git-completion.bash	/^	COMPREPLY=()$/;"	f
CheckBackspace	Config_Vim/Coc.vim	/^function! CheckBackspace() abort$/;"	f
Clock	themes/brainy/README.md	/^#### Clock$/;"	t	subsection:Brainy theme""Configuration""Theme Environment Variables
Clock Format	themes/powerline-multiline/README.md	/^### Clock Format$/;"	S	section:Powerline Multiline Theme""Configuration
Clock Format	themes/powerline-naked/README.md	/^### Clock Format$/;"	S	section:Powerline Theme""Configuration
Clock Format	themes/powerline-plain/README.md	/^### Clock Format$/;"	S	section:Powerline Theme""Configuration
Clock Format	themes/powerline/README.md	/^### Clock Format$/;"	S	section:Powerline Theme""Configuration
Commands	plugins/bashmarks/README.md	/^## Commands$/;"	s	chapter:Bashmarks plugin
Common Enable Conditions	plugins/tmux-autoattach/README.md	/^## Common Enable Conditions$/;"	s	chapter:tmux-autoattach.plugin
CompileCode	Config_Vim/KeyBindingsFunctions.vim	/^function! CompileCode()$/;"	f
Configuration	themes/brainy/README.md	/^## Configuration$/;"	s	chapter:Brainy theme
Configuration	themes/powerline-multiline/README.md	/^## Configuration$/;"	s	chapter:Powerline Multiline Theme
Configuration	themes/powerline-naked/README.md	/^## Configuration$/;"	s	chapter:Powerline Theme
Configuration	themes/powerline-plain/README.md	/^## Configuration$/;"	s	chapter:Powerline Theme
Configuration	themes/powerline/README.md	/^## Configuration$/;"	s	chapter:Powerline Theme
DebugCode	Config_Vim/KeyBindingsFunctions.vim	/^function! DebugCode()$/;"	f
DebugJavaCode	Config_Vim/Functions_Java.vim	/^function DebugJavaCode()$/;"	f
Description	themes/nwinkler_random_colors/README.md	/^## Description$/;"	s	chapter:Nwinkler Random Color Theme
EOF	completions/gh.completion.sh	/^    cat <<-EOF$/;"	h
EOF	completions/hub.completion.sh	/^    cat <<-EOF$/;"	h
EOF	plugins/bu/bu.plugin.sh	/^		 cat <<-EOF$/;"	h
Exit Code	themes/brainy/README.md	/^#### Exit Code$/;"	t	subsection:Brainy theme""Configuration""Theme Environment Variables
Features	themes/brainy/README.md	/^## Features$/;"	s	chapter:Brainy theme
Fold	Config_Vim/Coc.vim	/^command! -nargs=? Fold :call     CocAction('fold', <f-args>)$/;"	c
Format	Config_Vim/Coc.vim	/^command! -nargs=0 Format :call CocActionAsync('format')$/;"	c
Git Plugin	plugins/git/README.md	/^# Git Plugin$/;"	c
Golang plugin	plugins/golang/README.md	/^# Golang plugin$/;"	c
Grep	.bashrc	/^function Grep(){$/;"	f
Grep	Config_Vim/FZF.vim	/^command! -nargs=* -bang Grep call RipgrepFzf(<q-args>, <bang>0)$/;"	c
Include nvm as plugin	plugins/nvm/README.md	/^### Include nvm as plugin$/;"	S	section:nvm plugin""Installation
Include sdkman as plugin	plugins/sdkman/README.md	/^### Include sdkman as plugin$/;"	S	section:sdkman plugin""Installation
Install nvm	plugins/nvm/README.md	/^### Install nvm$/;"	S	section:nvm plugin""Installation
Install sdkman	plugins/sdkman/README.md	/^### Install sdkman$/;"	S	section:sdkman plugin""Installation
Installation	plugins/nvm/README.md	/^## Installation$/;"	s	chapter:nvm plugin
Installation	plugins/sdkman/README.md	/^## Installation$/;"	s	chapter:sdkman plugin
Introduction	plugins/ansible/README.md	/^## Introduction$/;"	s	chapter:ansible plugin
Introduction	plugins/vagrant/README.md	/^## Introduction$/;"	s	chapter:vagrant plugin
JavaDebug	Config_Vim/Functions_Java.vim	/^function JavaDebug()$/;"	f
JavaDebugCallback	Config_Vim/Functions_Java.vim	/^function! JavaDebugCallback(err, port)$/;"	f
JavaDebugCodeCallback	Config_Vim/Functions_Java.vim	/^function! JavaDebugCodeCallback()$/;"	f
JavaRunCallback	Config_Vim/Functions_Java.vim	/^function! JavaRunCallback(err, port)$/;"	f
JavaStartDebug	Config_Vim/Functions_Java.vim	/^function JavaStartDebug()$/;"	f
JavaStartVimDebugCallback	Config_Vim/Functions_Java.vim	/^function! JavaStartVimDebugCallback(err, port)$/;"	f
JavaStopDebug	Config_Vim/Functions_Java.vim	/^function JavaStopDebug()$/;"	f
JavaStopDebugCallback	Config_Vim/Functions_Java.vim	/^function! JavaStopDebugCallback(err, port)$/;"	f
JavaTest	Config_Vim/Functions_Java.vim	/^function JavaTest()$/;"	f
JavaTestCallback	Config_Vim/Functions_Java.vim	/^function! JavaTestCallback(err, port)$/;"	f
K	Config_Vim/keybindingsCoc.vim	/^nnoremap <silent> K :call ShowDocumentation()<CR>$/;"	m
Kubectl plugin	plugins/kubectl/README.md	/^# Kubectl plugin$/;"	c
L	aliases/ls.aliases.sh	/^alias L='ls -latrhF'            # long, sort by oldest to newest$/;"	a
NERDTreeShowHidden	Config_Vim/NerdTree.vim	/^let NERDTreeShowHidden=1$/;"	v
Nwinkler Random Color Theme	themes/nwinkler_random_colors/README.md	/^# Nwinkler Random Color Theme$/;"	c
OR	Config_Vim/Coc.vim	/^command! -nargs=0 OR   :call     CocActionAsync('runCommand', 'editor.action.organizeImport')$/;"	c
OSH_PLUGIN_TMUX_AUTOATTACH_BEHAVIOR	plugins/tmux-autoattach/README.md	/^#### OSH_PLUGIN_TMUX_AUTOATTACH_BEHAVIOR$/;"	t	section:tmux-autoattach.plugin""Variables
On-the-fly using `brainy` command	themes/brainy/README.md	/^### On-the-fly using `brainy` command$/;"	S	section:Brainy theme""Configuration
Others	themes/brainy/README.md	/^### Others$/;"	S	section:Brainy theme""Features
POM_HIERARCHY=	completions/maven.completion.sh	/^    POM_HIERARCHY=()$/;"	f
Powerline Multiline Theme	themes/powerline-multiline/README.md	/^# Powerline Multiline Theme$/;"	c
Powerline Theme	themes/powerline-naked/README.md	/^# Powerline Theme$/;"	c
Powerline Theme	themes/powerline-plain/README.md	/^# Powerline Theme$/;"	c
Powerline Theme	themes/powerline/README.md	/^# Powerline Theme$/;"	c
Prompt Segments	themes/brainy/README.md	/^### Prompt Segments$/;"	S	section:Brainy theme""Features
Prompt Segments Order	themes/brainy/README.md	/^## Prompt Segments Order$/;"	s	chapter:Brainy theme
Provided Information	themes/powerline-multiline/README.md	/^## Provided Information$/;"	s	chapter:Powerline Multiline Theme
Provided Information	themes/powerline-naked/README.md	/^## Provided Information$/;"	s	chapter:Powerline Theme
Provided Information	themes/powerline-plain/README.md	/^## Provided Information$/;"	s	chapter:Powerline Theme
Provided Information	themes/powerline/README.md	/^## Provided Information$/;"	s	chapter:Powerline Theme
Python Environment	themes/brainy/README.md	/^#### Python Environment$/;"	t	subsection:Brainy theme""Configuration""Theme Environment Variables
Quickstart	plugins/bashmarks/README.md	/^## Quickstart$/;"	s	chapter:Bashmarks plugin
RipgrepFzf	Config_Vim/FZF.vim	/^function! RipgrepFzf(query, fullscreen)$/;"	f
Ruby Environment	themes/brainy/README.md	/^#### Ruby Environment$/;"	t	subsection:Brainy theme""Configuration""Theme Environment Variables
RunCode	Config_Vim/KeyBindingsFunctions.vim	/^function! RunCode()$/;"	f
RunJavaCode	Config_Vim/Functions_Java.vim	/^function RunJavaCode()$/;"	f
RunJavaCodeCallback	Config_Vim/Functions_Java.vim	/^function! RunJavaCodeCallback(err, port)$/;"	f
RunJavaProject	Config_Vim/Functions_Java.vim	/^function RunJavaProject()$/;"	f
RunProject	Config_Vim/KeyBindingsFunctions.vim	/^function! RunProject()$/;"	f
SCM Information	themes/brainy/README.md	/^#### SCM Information$/;"	t	subsection:Brainy theme""Configuration""Theme Environment Variables
Screenshot	themes/nwinkler_random_colors/README.md	/^## Screenshot$/;"	s	chapter:Nwinkler Random Color Theme
Segment Order	themes/powerline-multiline/README.md	/^### Segment Order$/;"	S	section:Powerline Multiline Theme""Configuration
Segment Order	themes/powerline-naked/README.md	/^### Segment Order$/;"	S	section:Powerline Theme""Configuration
Segment Order	themes/powerline-plain/README.md	/^### Segment Order$/;"	S	section:Powerline Theme""Configuration
Segment Order	themes/powerline/README.md	/^### Segment Order$/;"	S	section:Powerline Theme""Configuration
ShowDocumentation	Config_Vim/Coc.vim	/^function! ShowDocumentation()$/;"	f
StopDebug	Config_Vim/KeyBindingsFunctions.vim	/^function! StopDebug()$/;"	f
Theme Environment Variables	themes/brainy/README.md	/^### Theme Environment Variables$/;"	S	section:Brainy theme""Configuration
ToDo.txt status	themes/brainy/README.md	/^#### ToDo.txt status$/;"	t	subsection:Brainy theme""Configuration""Theme Environment Variables
Usage Scenario	themes/nwinkler_random_colors/README.md	/^## Usage Scenario$/;"	s	chapter:Nwinkler Random Color Theme
User Information	themes/brainy/README.md	/^#### User Information$/;"	t	subsection:Brainy theme""Configuration""Theme Environment Variables
User Information	themes/powerline-multiline/README.md	/^### User Information$/;"	S	section:Powerline Multiline Theme""Configuration
User Information	themes/powerline-naked/README.md	/^### User Information$/;"	S	section:Powerline Theme""Configuration
User Information	themes/powerline-plain/README.md	/^### User Information$/;"	S	section:Powerline Theme""Configuration
User Information	themes/powerline/README.md	/^### User Information$/;"	S	section:Powerline Theme""Configuration
Valid bookmark names	plugins/bashmarks/README.md	/^## Valid bookmark names$/;"	s	chapter:Bashmarks plugin
Variables	plugins/tmux-autoattach/README.md	/^## Variables$/;"	s	chapter:tmux-autoattach.plugin
[g	Config_Vim/keybindingsCoc.vim	/^nmap <silent> [g <Plug>(coc-diagnostic-prev)$/;"	m
]g	Config_Vim/keybindingsCoc.vim	/^nmap <silent> ]g <Plug>(coc-diagnostic-next)$/;"	m
____brainy_bottom	themes/brainy/brainy.theme.sh	/^____brainy_bottom() {$/;"	f
____brainy_bottom_parse	themes/brainy/brainy.theme.sh	/^____brainy_bottom_parse() {$/;"	f
____brainy_top	themes/brainy/brainy.theme.sh	/^____brainy_top() {$/;"	f
____brainy_top_left_parse	themes/brainy/brainy.theme.sh	/^____brainy_top_left_parse() {$/;"	f
____brainy_top_right_parse	themes/brainy/brainy.theme.sh	/^____brainy_top_right_parse() {$/;"	f
___brainy_prompt_battery	themes/brainy/brainy.theme.sh	/^___brainy_prompt_battery() {$/;"	f
___brainy_prompt_char	themes/brainy/brainy.theme.sh	/^___brainy_prompt_char() {$/;"	f
___brainy_prompt_clock	themes/brainy/brainy.theme.sh	/^___brainy_prompt_clock() {$/;"	f
___brainy_prompt_dir	themes/brainy/brainy.theme.sh	/^___brainy_prompt_dir() {$/;"	f
___brainy_prompt_exitcode	themes/brainy/brainy.theme.sh	/^___brainy_prompt_exitcode() {$/;"	f
___brainy_prompt_python	themes/brainy/brainy.theme.sh	/^___brainy_prompt_python() {$/;"	f
___brainy_prompt_ruby	themes/brainy/brainy.theme.sh	/^___brainy_prompt_ruby() {$/;"	f
___brainy_prompt_scm	themes/brainy/brainy.theme.sh	/^___brainy_prompt_scm() {$/;"	f
___brainy_prompt_todo	themes/brainy/brainy.theme.sh	/^___brainy_prompt_todo() {$/;"	f
___brainy_prompt_user_info	themes/brainy/brainy.theme.sh	/^___brainy_prompt_user_info() {$/;"	f
___docker_compose_all_services_in_compose_file	completions/docker-compose.completion.sh	/^___docker_compose_all_services_in_compose_file() {$/;"	f
___docker_compose_services_with_key	completions/docker-compose.completion.sh	/^___docker_compose_services_with_key() {$/;"	f
___git_complete	tools/git-completion.bash	/^___git_complete ()$/;"	f
__apm	completions/apm.completion.sh	/^__apm(){$/;"	f
__apm_get_command	completions/apm.completion.sh	/^__apm_get_command() {$/;"	f
__bobby_clock	themes/bobby/bobby.theme.sh	/^__bobby_clock() {$/;"	f
__brainy_hide	themes/brainy/brainy.theme.sh	/^__brainy_hide() {$/;"	f
__brainy_ps1	themes/brainy/brainy.theme.sh	/^__brainy_ps1() {$/;"	f
__brainy_ps2	themes/brainy/brainy.theme.sh	/^__brainy_ps2() {$/;"	f
__brainy_show	themes/brainy/brainy.theme.sh	/^__brainy_show() {$/;"	f
__bundle	completions/bundler.completion.sh	/^__bundle() {$/;"	f
__bundle_get_command	completions/bundler.completion.sh	/^__bundle_get_command() {$/;"	f
__clear_gradle_cache	completions/gradle.completion.sh	/^function __clear_gradle_cache {$/;"	f
__command_rprompt	themes/agnoster/agnoster.theme.sh	/^__command_rprompt() {$/;"	f
__docker_append_to_completions	completions/docker.completion.sh	/^__docker_append_to_completions() {$/;"	f
__docker_complete_capabilities	completions/docker.completion.sh	/^__docker_complete_capabilities() {$/;"	f
__docker_complete_container_ids	completions/docker.completion.sh	/^__docker_complete_container_ids() {$/;"	f
__docker_complete_container_names	completions/docker.completion.sh	/^__docker_complete_container_names() {$/;"	f
__docker_complete_containers_all	completions/docker.completion.sh	/^__docker_complete_containers_all() {$/;"	f
__docker_complete_containers_and_images	completions/docker.completion.sh	/^__docker_complete_containers_and_images() {$/;"	f
__docker_complete_containers_in_network	completions/docker.completion.sh	/^__docker_complete_containers_in_network() {$/;"	f
__docker_complete_containers_pauseable	completions/docker.completion.sh	/^__docker_complete_containers_pauseable() {$/;"	f
__docker_complete_containers_running	completions/docker.completion.sh	/^__docker_complete_containers_running() {$/;"	f
__docker_complete_containers_stopped	completions/docker.completion.sh	/^__docker_complete_containers_stopped() {$/;"	f
__docker_complete_containers_unpauseable	completions/docker.completion.sh	/^__docker_complete_containers_unpauseable() {$/;"	f
__docker_complete_detach-keys	completions/docker.completion.sh	/^__docker_complete_detach-keys() {$/;"	f
__docker_complete_image_repos	completions/docker.completion.sh	/^__docker_complete_image_repos() {$/;"	f
__docker_complete_image_repos_and_tags	completions/docker.completion.sh	/^__docker_complete_image_repos_and_tags() {$/;"	f
__docker_complete_images	completions/docker.completion.sh	/^__docker_complete_images() {$/;"	f
__docker_complete_isolation	completions/docker.completion.sh	/^__docker_complete_isolation() {$/;"	f
__docker_complete_log_driver_options	completions/docker.completion.sh	/^__docker_complete_log_driver_options() {$/;"	f
__docker_complete_log_drivers	completions/docker.completion.sh	/^__docker_complete_log_drivers() {$/;"	f
__docker_complete_log_levels	completions/docker.completion.sh	/^__docker_complete_log_levels() {$/;"	f
__docker_complete_log_options	completions/docker.completion.sh	/^__docker_complete_log_options() {$/;"	f
__docker_complete_network_ids	completions/docker.completion.sh	/^__docker_complete_network_ids() {$/;"	f
__docker_complete_network_names	completions/docker.completion.sh	/^__docker_complete_network_names() {$/;"	f
__docker_complete_networks	completions/docker.completion.sh	/^__docker_complete_networks() {$/;"	f
__docker_complete_nodes	completions/docker.completion.sh	/^__docker_complete_nodes() {$/;"	f
__docker_complete_nodes_plus_self	completions/docker.completion.sh	/^__docker_complete_nodes_plus_self() {$/;"	f
__docker_complete_plugins	completions/docker.completion.sh	/^__docker_complete_plugins() {$/;"	f
__docker_complete_resolved_hostname	completions/docker.completion.sh	/^__docker_complete_resolved_hostname() {$/;"	f
__docker_complete_restart	completions/docker.completion.sh	/^__docker_complete_restart() {$/;"	f
__docker_complete_runtimes	completions/docker.completion.sh	/^__docker_complete_runtimes() {$/;"	f
__docker_complete_services	completions/docker.completion.sh	/^__docker_complete_services() {$/;"	f
__docker_complete_signals	completions/docker.completion.sh	/^__docker_complete_signals() {$/;"	f
__docker_complete_user_group	completions/docker.completion.sh	/^__docker_complete_user_group() {$/;"	f
__docker_complete_volumes	completions/docker.completion.sh	/^__docker_complete_volumes() {$/;"	f
__docker_compose_nospace	completions/docker-compose.completion.sh	/^__docker_compose_nospace() {$/;"	f
__docker_compose_q	completions/docker-compose.completion.sh	/^__docker_compose_q() {$/;"	f
__docker_compose_services_all	completions/docker-compose.completion.sh	/^__docker_compose_services_all() {$/;"	f
__docker_compose_services_from_build	completions/docker-compose.completion.sh	/^__docker_compose_services_from_build() {$/;"	f
__docker_compose_services_from_image	completions/docker-compose.completion.sh	/^__docker_compose_services_from_image() {$/;"	f
__docker_compose_services_paused	completions/docker-compose.completion.sh	/^__docker_compose_services_paused() {$/;"	f
__docker_compose_services_running	completions/docker-compose.completion.sh	/^__docker_compose_services_running() {$/;"	f
__docker_compose_services_stopped	completions/docker-compose.completion.sh	/^__docker_compose_services_stopped() {$/;"	f
__docker_compose_services_with	completions/docker-compose.completion.sh	/^__docker_compose_services_with() {$/;"	f
__docker_compose_to_alternatives	completions/docker-compose.completion.sh	/^__docker_compose_to_alternatives() {$/;"	f
__docker_compose_to_extglob	completions/docker-compose.completion.sh	/^__docker_compose_to_extglob() {$/;"	f
__docker_map_key_of_current_option	completions/docker.completion.sh	/^__docker_map_key_of_current_option() {$/;"	f
__docker_networks	completions/docker.completion.sh	/^__docker_networks() {$/;"	f
__docker_nodes	completions/docker.completion.sh	/^__docker_nodes() {$/;"	f
__docker_nospace	completions/docker.completion.sh	/^__docker_nospace() {$/;"	f
__docker_plugins	completions/docker.completion.sh	/^__docker_plugins() {$/;"	f
__docker_pos_first_nonflag	completions/docker.completion.sh	/^__docker_pos_first_nonflag() {$/;"	f
__docker_q	completions/docker.completion.sh	/^__docker_q() {$/;"	f
__docker_runtimes	completions/docker.completion.sh	/^__docker_runtimes() {$/;"	f
__docker_services	completions/docker.completion.sh	/^__docker_services() {$/;"	f
__docker_subcommands	completions/docker.completion.sh	/^__docker_subcommands() {$/;"	f
__docker_to_alternatives	completions/docker.completion.sh	/^__docker_to_alternatives() {$/;"	f
__docker_to_extglob	completions/docker.completion.sh	/^__docker_to_extglob() {$/;"	f
__docker_value_of_option	completions/docker.completion.sh	/^__docker_value_of_option() {$/;"	f
__drush_ps1	completions/drush.completion.sh	/^__drush_ps1() {$/;"	f
__emperor_clock	themes/emperor/emperor.theme.sh	/^__emperor_clock() {$/;"	f
__fab_chache_mtime	completions/fabric-completion.sh	/^function __fab_chache_mtime() {$/;"	f
__fab_completion	completions/fabric-completion.sh	/^function __fab_completion() {$/;"	f
__fab_fabfile_mtime	completions/fabric-completion.sh	/^function __fab_fabfile_mtime() {$/;"	f
__find_mvn_projects	completions/maven.completion.sh	/^__find_mvn_projects()$/;"	f
__get_first_arg	.bashrc	/^__get_first_arg() {$/;"	f
__git	tools/git-completion.bash	/^__git ()$/;"	f
__git_aliased_command	tools/git-completion.bash	/^__git_aliased_command ()$/;"	f
__git_checkout_default_dwim_mode	tools/git-completion.bash	/^__git_checkout_default_dwim_mode ()$/;"	f
__git_complete	tools/git-completion.bash	/^__git_complete ()$/;"	f
__git_complete_command	tools/git-completion.bash	/^__git_complete_command () {$/;"	f
__git_complete_common	tools/git-completion.bash	/^__git_complete_common () {$/;"	f
__git_complete_config_variable_name	tools/git-completion.bash	/^__git_complete_config_variable_name ()$/;"	f
__git_complete_config_variable_name_and_value	tools/git-completion.bash	/^__git_complete_config_variable_name_and_value ()$/;"	f
__git_complete_config_variable_value	tools/git-completion.bash	/^__git_complete_config_variable_value ()$/;"	f
__git_complete_fetch_refspecs	tools/git-completion.bash	/^__git_complete_fetch_refspecs ()$/;"	f
__git_complete_file	tools/git-completion.bash	/^__git_complete_file ()$/;"	f
__git_complete_force_with_lease	tools/git-completion.bash	/^__git_complete_force_with_lease ()$/;"	f
__git_complete_index_file	tools/git-completion.bash	/^__git_complete_index_file ()$/;"	f
__git_complete_refs	tools/git-completion.bash	/^__git_complete_refs ()$/;"	f
__git_complete_remote_or_refspec	tools/git-completion.bash	/^__git_complete_remote_or_refspec ()$/;"	f
__git_complete_revlist	tools/git-completion.bash	/^__git_complete_revlist ()$/;"	f
__git_complete_revlist_file	tools/git-completion.bash	/^__git_complete_revlist_file ()$/;"	f
__git_complete_strategy	tools/git-completion.bash	/^__git_complete_strategy ()$/;"	f
__git_complete_symbol	tools/git-completion.bash	/^__git_complete_symbol () {$/;"	f
__git_complete_worktree_paths	tools/git-completion.bash	/^__git_complete_worktree_paths ()$/;"	f
__git_compute_all_commands	tools/git-completion.bash	/^__git_compute_all_commands ()$/;"	f
__git_compute_config_sections	tools/git-completion.bash	/^__git_compute_config_sections ()$/;"	f
__git_compute_config_vars	tools/git-completion.bash	/^__git_compute_config_vars ()$/;"	f
__git_compute_merge_strategies	tools/git-completion.bash	/^__git_compute_merge_strategies ()$/;"	f
__git_config_get_set_variables	tools/git-completion.bash	/^__git_config_get_set_variables ()$/;"	f
__git_count_arguments	tools/git-completion.bash	/^__git_count_arguments ()$/;"	f
__git_dequote	tools/git-completion.bash	/^__git_dequote ()$/;"	f
__git_dwim_remote_heads	tools/git-completion.bash	/^__git_dwim_remote_heads ()$/;"	f
__git_eread	tools/git-prompt.sh	/^__git_eread ()$/;"	f
__git_find_last_on_cmdline	tools/git-completion.bash	/^__git_find_last_on_cmdline ()$/;"	f
__git_find_on_cmdline	completions/git_flow_avh.completion.sh	/^	alias __git_find_on_cmdline=__git_find_subcommand$/;"	a
__git_find_on_cmdline	tools/git-completion.bash	/^__git_find_on_cmdline ()$/;"	f
__git_find_repo_path	tools/git-completion.bash	/^__git_find_repo_path ()$/;"	f
__git_find_subcommand	completions/git_flow.completion.sh	/^	alias __git_find_subcommand=__git_find_on_cmdline$/;"	a
__git_flow_config	completions/git_flow_avh.completion.sh	/^__git_flow_config ()$/;"	f
__git_flow_feature	completions/git_flow.completion.sh	/^__git_flow_feature ()$/;"	f
__git_flow_feature	completions/git_flow_avh.completion.sh	/^__git_flow_feature ()$/;"	f
__git_flow_feature_prefix	completions/git_flow.completion.sh	/^__git_flow_feature_prefix ()$/;"	f
__git_flow_hotfix	completions/git_flow.completion.sh	/^__git_flow_hotfix ()$/;"	f
__git_flow_hotfix	completions/git_flow_avh.completion.sh	/^__git_flow_hotfix ()$/;"	f
__git_flow_init	completions/git_flow_avh.completion.sh	/^__git_flow_init ()$/;"	f
__git_flow_list_branches	completions/git_flow_avh.completion.sh	/^__git_flow_list_branches ()$/;"	f
__git_flow_list_features	completions/git_flow.completion.sh	/^__git_flow_list_features ()$/;"	f
__git_flow_list_hotfixes	completions/git_flow.completion.sh	/^__git_flow_list_hotfixes ()$/;"	f
__git_flow_list_local_branches	completions/git_flow_avh.completion.sh	/^__git_flow_list_local_branches ()$/;"	f
__git_flow_list_releases	completions/git_flow.completion.sh	/^__git_flow_list_releases ()$/;"	f
__git_flow_list_remote_branches	completions/git_flow_avh.completion.sh	/^__git_flow_list_remote_branches ()$/;"	f
__git_flow_list_remote_features	completions/git_flow.completion.sh	/^__git_flow_list_remote_features ()$/;"	f
__git_flow_prefix	completions/git_flow_avh.completion.sh	/^__git_flow_prefix ()$/;"	f
__git_flow_release	completions/git_flow.completion.sh	/^__git_flow_release ()$/;"	f
__git_flow_release	completions/git_flow_avh.completion.sh	/^__git_flow_release ()$/;"	f
__git_flow_support	completions/git_flow_avh.completion.sh	/^__git_flow_support ()$/;"	f
__git_func_wrap	tools/git-completion.bash	/^__git_func_wrap ()$/;"	f
__git_get_config_variables	tools/git-completion.bash	/^__git_get_config_variables ()$/;"	f
__git_get_option_value	tools/git-completion.bash	/^__git_get_option_value ()$/;"	f
__git_has_doubledash	tools/git-completion.bash	/^__git_has_doubledash ()$/;"	f
__git_have_func	tools/git-completion.bash	/^__git_have_func () {$/;"	f
__git_heads	tools/git-completion.bash	/^__git_heads ()$/;"	f
__git_index_files	tools/git-completion.bash	/^__git_index_files ()$/;"	f
__git_is_configured_remote	tools/git-completion.bash	/^__git_is_configured_remote ()$/;"	f
__git_list_all_commands	completions/gh.completion.sh	/^  __git_list_all_commands() {$/;"	f
__git_list_all_commands	completions/hub.completion.sh	/^  __git_list_all_commands() {$/;"	f
__git_list_merge_strategies	tools/git-completion.bash	/^__git_list_merge_strategies ()$/;"	f
__git_ls_files_helper	tools/git-completion.bash	/^__git_ls_files_helper ()$/;"	f
__git_main	tools/git-completion.bash	/^__git_main ()$/;"	f
__git_match_ctag	tools/git-completion.bash	/^__git_match_ctag () {$/;"	f
__git_pretty_aliases	tools/git-completion.bash	/^__git_pretty_aliases ()$/;"	f
__git_ps1	tools/git-prompt.sh	/^__git_ps1 ()$/;"	f
__git_ps1_colorize_gitstring	tools/git-prompt.sh	/^__git_ps1_colorize_gitstring ()$/;"	f
__git_ps1_show_upstream	tools/git-prompt.sh	/^__git_ps1_show_upstream ()$/;"	f
__git_reassemble_comp_words_by_ref	tools/git-completion.bash	/^__git_reassemble_comp_words_by_ref()$/;"	f
__git_refs	tools/git-completion.bash	/^__git_refs ()$/;"	f
__git_refs2	tools/git-completion.bash	/^__git_refs2 ()$/;"	f
__git_refs_remotes	tools/git-completion.bash	/^__git_refs_remotes ()$/;"	f
__git_remote_heads	tools/git-completion.bash	/^__git_remote_heads ()$/;"	f
__git_remotes	tools/git-completion.bash	/^__git_remotes ()$/;"	f
__git_support_parseopt_helper	tools/git-completion.bash	/^__git_support_parseopt_helper () {$/;"	f
__git_tags	tools/git-completion.bash	/^__git_tags ()$/;"	f
__gitcomp	tools/git-completion.bash	/^__gitcomp ()$/;"	f
__gitcomp_builtin	tools/git-completion.bash	/^__gitcomp_builtin ()$/;"	f
__gitcomp_direct	tools/git-completion.bash	/^__gitcomp_direct ()$/;"	f
__gitcomp_direct_append	tools/git-completion.bash	/^__gitcomp_direct_append ()$/;"	f
__gitcomp_file	tools/git-completion.bash	/^__gitcomp_file ()$/;"	f
__gitcomp_file_direct	tools/git-completion.bash	/^__gitcomp_file_direct ()$/;"	f
__gitcomp_nl	tools/git-completion.bash	/^__gitcomp_nl ()$/;"	f
__gitcomp_nl_append	tools/git-completion.bash	/^__gitcomp_nl_append ()$/;"	f
__gitcompadd	tools/git-completion.bash	/^__gitcompadd ()$/;"	f
__gitcompappend	tools/git-completion.bash	/^__gitcompappend ()$/;"	f
__gitdir	tools/git-completion.bash	/^__gitdir ()$/;"	f
__gitk_main	tools/git-completion.bash	/^__gitk_main ()$/;"	f
__gradle	completions/gradle.completion.sh	/^function __gradle {$/;"	f
__hub_github_repos	completions/gh.completion.sh	/^  __hub_github_repos() {$/;"	f
__hub_github_repos	completions/hub.completion.sh	/^  __hub_github_repos() {$/;"	f
__hub_github_user	completions/gh.completion.sh	/^  __hub_github_user() {$/;"	f
__hub_github_user	completions/hub.completion.sh	/^  __hub_github_user() {$/;"	f
__hub_heads	completions/gh.completion.sh	/^  __hub_heads() {$/;"	f
__hub_heads	completions/hub.completion.sh	/^  __hub_heads() {$/;"	f
__hub_revlist	completions/gh.completion.sh	/^  __hub_revlist() {$/;"	f
__hub_revlist	completions/hub.completion.sh	/^  __hub_revlist() {$/;"	f
__kitchen_instance_list	completions/test_kitchen.completion.sh	/^__kitchen_instance_list () {$/;"	f
__kitchen_options	completions/test_kitchen.completion.sh	/^__kitchen_options () {$/;"	f
__ltrim_colon_completions	completions/maven.completion.sh	/^__ltrim_colon_completions()$/;"	f
__my_rvm_ruby_version	themes/mairan/mairan.theme.sh	/^__my_rvm_ruby_version() {$/;"	f
__my_rvm_ruby_version	themes/rjorgenson/rjorgenson.theme.sh	/^__my_rvm_ruby_version() {$/;"	f
__my_rvm_ruby_version	themes/slick/slick.theme.sh	/^__my_rvm_ruby_version() {$/;"	f
__my_rvm_ruby_version	themes/zork/zork.theme.sh	/^__my_rvm_ruby_version() {$/;"	f
__my_venv_prompt	themes/slick/slick.theme.sh	/^__my_venv_prompt() {$/;"	f
__packer_build	completions/packer.completion.sh	/^__packer_build ()$/;"	f
__packer_fix	completions/packer.completion.sh	/^__packer_fix ()$/;"	f
__packer_inspect	completions/packer.completion.sh	/^__packer_inspect ()$/;"	f
__packer_validate	completions/packer.completion.sh	/^__packer_validate ()$/;"	f
__packercomp	completions/packer.completion.sh	/^__packercomp ()$/;"	f
__packercomp_template_file	completions/packer.completion.sh	/^__packercomp_template_file ()$/;"	f
__pom_hierarchy	completions/maven.completion.sh	/^__pom_hierarchy()$/;"	f
__powerline_battery_prompt	themes/powerline/powerline.base.sh	/^function __powerline_battery_prompt {$/;"	f
__powerline_clock_prompt	themes/powerline/powerline.base.sh	/^function __powerline_clock_prompt {$/;"	f
__powerline_cwd_prompt	themes/powerline/powerline.base.sh	/^function __powerline_cwd_prompt {$/;"	f
__powerline_in_vim_prompt	themes/powerline/powerline.base.sh	/^function __powerline_in_vim_prompt {$/;"	f
__powerline_last_status_prompt	themes/powerline-multiline/powerline-multiline.base.sh	/^function __powerline_last_status_prompt {$/;"	f
__powerline_last_status_prompt	themes/powerline/powerline.base.sh	/^function __powerline_last_status_prompt {$/;"	f
__powerline_left_segment	themes/powerline-naked/powerline-naked.base.sh	/^function __powerline_left_segment {$/;"	f
__powerline_left_segment	themes/powerline-plain/powerline-plain.base.sh	/^function __powerline_left_segment {$/;"	f
__powerline_left_segment	themes/powerline/powerline.base.sh	/^function __powerline_left_segment {$/;"	f
__powerline_prompt_command	themes/powerline-multiline/powerline-multiline.base.sh	/^function __powerline_prompt_command {$/;"	f
__powerline_prompt_command	themes/powerline-plain/powerline-plain.base.sh	/^function __powerline_prompt_command {$/;"	f
__powerline_prompt_command	themes/powerline/powerline.base.sh	/^function __powerline_prompt_command {$/;"	f
__powerline_python_venv_prompt	themes/kitsune/kitsune.theme.sh	/^function __powerline_python_venv_prompt {$/;"	f
__powerline_python_venv_prompt	themes/powerline/powerline.base.sh	/^function __powerline_python_venv_prompt {$/;"	f
__powerline_right_segment	themes/powerline-multiline/powerline-multiline.base.sh	/^function __powerline_right_segment {$/;"	f
__powerline_ruby_prompt	themes/powerline/powerline.base.sh	/^function __powerline_ruby_prompt {$/;"	f
__powerline_scm_prompt	themes/powerline/powerline.base.sh	/^function __powerline_scm_prompt {$/;"	f
__powerline_user_info_prompt	themes/powerline/powerline.base.sh	/^function __powerline_user_info_prompt {$/;"	f
__ps_time	themes/binaryanomaly/binaryanomaly.theme.sh	/^__ps_time() {$/;"	f
__pwdln	completions/vagrant.completion.sh	/^__pwdln() {$/;"	f
__sdkman_cleanup_local_versions	completions/sdkman.completion.sh	/^__sdkman_cleanup_local_versions(){$/;"	f
__ssh_client	themes/kitsune/kitsune.theme.sh	/^function __ssh_client {$/;"	f
__tonka_clock	themes/tonka/tonka.theme.sh	/^__tonka_clock() {$/;"	f
__tonka_date	themes/tonka/tonka.theme.sh	/^__tonka_date() {$/;"	f
__tonka_time	themes/tonka/tonka.theme.sh	/^__tonka_time() {$/;"	f
__vagrantinvestigate	completions/vagrant.completion.sh	/^__vagrantinvestigate() {$/;"	f
__vboxmanage_controlvm	completions/virtualbox.completion.sh	/^__vboxmanage_controlvm() {$/;"	f
__vboxmanage_default	completions/virtualbox.completion.sh	/^__vboxmanage_default() {$/;"	f
__vboxmanage_list	completions/virtualbox.completion.sh	/^__vboxmanage_list() {$/;"	f
__vboxmanage_list_runningvms	completions/virtualbox.completion.sh	/^__vboxmanage_list_runningvms() {$/;"	f
__vboxmanage_list_vms	completions/virtualbox.completion.sh	/^__vboxmanage_list_vms() {$/;"	f
__vboxmanage_startvm	completions/virtualbox.completion.sh	/^__vboxmanage_startvm() {$/;"	f
_bindingAddress	completions/jboss7.completion.sh	/^_bindingAddress(){$/;"	f
_bookmark_name_valid	plugins/bashmarks/bashmarks.plugin.sh	/^function _bookmark_name_valid {$/;"	f
_brainy_completion	themes/brainy/brainy.theme.sh	/^_brainy_completion() {$/;"	f
_capcomplete	completions/capistrano.completion.sh	/^_capcomplete() {$/;"	f
_comp	plugins/bashmarks/bashmarks.plugin.sh	/^function _comp {$/;"	f
_composer	completions/composer.completion.sh	/^_composer()$/;"	f
_compzsh	plugins/bashmarks/bashmarks.plugin.sh	/^function _compzsh {$/;"	f
_defaults	completions/defaults.completion.sh	/^_defaults()$/;"	f
_defaults_domains	completions/defaults.completion.sh	/^_defaults_domains()$/;"	f
_delete_bookmark	plugins/bashmarks/bashmarks.plugin.sh	/^function _delete_bookmark {$/;"	f
_dirs-complete	completions/dirs.completion.sh	/^_dirs-complete() {$/;"	f
_django_completion	completions/django.completion.sh	/^_django_completion()$/;"	f
_docker	completions/docker.completion.sh	/^_docker() {$/;"	f
_docker_attach	completions/docker.completion.sh	/^_docker_attach() {$/;"	f
_docker_build	completions/docker.completion.sh	/^_docker_build() {$/;"	f
_docker_commit	completions/docker.completion.sh	/^_docker_commit() {$/;"	f
_docker_compose	completions/docker-compose.completion.sh	/^_docker_compose() {$/;"	f
_docker_compose_build	completions/docker-compose.completion.sh	/^_docker_compose_build() {$/;"	f
_docker_compose_bundle	completions/docker-compose.completion.sh	/^_docker_compose_bundle() {$/;"	f
_docker_compose_config	completions/docker-compose.completion.sh	/^_docker_compose_config() {$/;"	f
_docker_compose_create	completions/docker-compose.completion.sh	/^_docker_compose_create() {$/;"	f
_docker_compose_docker_compose	completions/docker-compose.completion.sh	/^_docker_compose_docker_compose() {$/;"	f
_docker_compose_down	completions/docker-compose.completion.sh	/^_docker_compose_down() {$/;"	f
_docker_compose_events	completions/docker-compose.completion.sh	/^_docker_compose_events() {$/;"	f
_docker_compose_exec	completions/docker-compose.completion.sh	/^_docker_compose_exec() {$/;"	f
_docker_compose_help	completions/docker-compose.completion.sh	/^_docker_compose_help() {$/;"	f
_docker_compose_kill	completions/docker-compose.completion.sh	/^_docker_compose_kill() {$/;"	f
_docker_compose_logs	completions/docker-compose.completion.sh	/^_docker_compose_logs() {$/;"	f
_docker_compose_pause	completions/docker-compose.completion.sh	/^_docker_compose_pause() {$/;"	f
_docker_compose_port	completions/docker-compose.completion.sh	/^_docker_compose_port() {$/;"	f
_docker_compose_ps	completions/docker-compose.completion.sh	/^_docker_compose_ps() {$/;"	f
_docker_compose_pull	completions/docker-compose.completion.sh	/^_docker_compose_pull() {$/;"	f
_docker_compose_push	completions/docker-compose.completion.sh	/^_docker_compose_push() {$/;"	f
_docker_compose_restart	completions/docker-compose.completion.sh	/^_docker_compose_restart() {$/;"	f
_docker_compose_rm	completions/docker-compose.completion.sh	/^_docker_compose_rm() {$/;"	f
_docker_compose_run	completions/docker-compose.completion.sh	/^_docker_compose_run() {$/;"	f
_docker_compose_scale	completions/docker-compose.completion.sh	/^_docker_compose_scale() {$/;"	f
_docker_compose_start	completions/docker-compose.completion.sh	/^_docker_compose_start() {$/;"	f
_docker_compose_stop	completions/docker-compose.completion.sh	/^_docker_compose_stop() {$/;"	f
_docker_compose_unpause	completions/docker-compose.completion.sh	/^_docker_compose_unpause() {$/;"	f
_docker_compose_up	completions/docker-compose.completion.sh	/^_docker_compose_up() {$/;"	f
_docker_compose_version	completions/docker-compose.completion.sh	/^_docker_compose_version() {$/;"	f
_docker_cp	completions/docker.completion.sh	/^_docker_cp() {$/;"	f
_docker_create	completions/docker.completion.sh	/^_docker_create() {$/;"	f
_docker_daemon	completions/docker.completion.sh	/^_docker_daemon() {$/;"	f
_docker_diff	completions/docker.completion.sh	/^_docker_diff() {$/;"	f
_docker_docker	completions/docker.completion.sh	/^_docker_docker() {$/;"	f
_docker_events	completions/docker.completion.sh	/^_docker_events() {$/;"	f
_docker_exec	completions/docker.completion.sh	/^_docker_exec() {$/;"	f
_docker_export	completions/docker.completion.sh	/^_docker_export() {$/;"	f
_docker_help	completions/docker.completion.sh	/^_docker_help() {$/;"	f
_docker_history	completions/docker.completion.sh	/^_docker_history() {$/;"	f
_docker_images	completions/docker.completion.sh	/^_docker_images() {$/;"	f
_docker_import	completions/docker.completion.sh	/^_docker_import() {$/;"	f
_docker_info	completions/docker.completion.sh	/^_docker_info() {$/;"	f
_docker_inspect	completions/docker.completion.sh	/^_docker_inspect() {$/;"	f
_docker_kill	completions/docker.completion.sh	/^_docker_kill() {$/;"	f
_docker_load	completions/docker.completion.sh	/^_docker_load() {$/;"	f
_docker_login	completions/docker.completion.sh	/^_docker_login() {$/;"	f
_docker_logout	completions/docker.completion.sh	/^_docker_logout() {$/;"	f
_docker_logs	completions/docker.completion.sh	/^_docker_logs() {$/;"	f
_docker_machine	completions/docker-machine.completion.sh	/^_docker_machine() {$/;"	f
_docker_machine_active	completions/docker-machine.completion.sh	/^_docker_machine_active() {$/;"	f
_docker_machine_config	completions/docker-machine.completion.sh	/^_docker_machine_config() {$/;"	f
_docker_machine_create	completions/docker-machine.completion.sh	/^_docker_machine_create() {$/;"	f
_docker_machine_docker_machine	completions/docker-machine.completion.sh	/^_docker_machine_docker_machine() {$/;"	f
_docker_machine_env	completions/docker-machine.completion.sh	/^_docker_machine_env() {$/;"	f
_docker_machine_help	completions/docker-machine.completion.sh	/^_docker_machine_help() {$/;"	f
_docker_machine_inspect	completions/docker-machine.completion.sh	/^_docker_machine_inspect() {$/;"	f
_docker_machine_ip	completions/docker-machine.completion.sh	/^_docker_machine_ip() {$/;"	f
_docker_machine_kill	completions/docker-machine.completion.sh	/^_docker_machine_kill() {$/;"	f
_docker_machine_ls	completions/docker-machine.completion.sh	/^_docker_machine_ls() {$/;"	f
_docker_machine_regenerate_certs	completions/docker-machine.completion.sh	/^_docker_machine_regenerate_certs() {$/;"	f
_docker_machine_restart	completions/docker-machine.completion.sh	/^_docker_machine_restart() {$/;"	f
_docker_machine_rm	completions/docker-machine.completion.sh	/^_docker_machine_rm() {$/;"	f
_docker_machine_scp	completions/docker-machine.completion.sh	/^_docker_machine_scp() {$/;"	f
_docker_machine_ssh	completions/docker-machine.completion.sh	/^_docker_machine_ssh() {$/;"	f
_docker_machine_start	completions/docker-machine.completion.sh	/^_docker_machine_start() {$/;"	f
_docker_machine_status	completions/docker-machine.completion.sh	/^_docker_machine_status() {$/;"	f
_docker_machine_stop	completions/docker-machine.completion.sh	/^_docker_machine_stop() {$/;"	f
_docker_machine_upgrade	completions/docker-machine.completion.sh	/^_docker_machine_upgrade() {$/;"	f
_docker_machine_url	completions/docker-machine.completion.sh	/^_docker_machine_url() {$/;"	f
_docker_machine_use	completions/docker-machine.completion.sh	/^_docker_machine_use() {$/;"	f
_docker_machine_version	completions/docker-machine.completion.sh	/^_docker_machine_version() {$/;"	f
_docker_network	completions/docker.completion.sh	/^_docker_network() {$/;"	f
_docker_network_connect	completions/docker.completion.sh	/^_docker_network_connect() {$/;"	f
_docker_network_create	completions/docker.completion.sh	/^_docker_network_create() {$/;"	f
_docker_network_disconnect	completions/docker.completion.sh	/^_docker_network_disconnect() {$/;"	f
_docker_network_inspect	completions/docker.completion.sh	/^_docker_network_inspect() {$/;"	f
_docker_network_ls	completions/docker.completion.sh	/^_docker_network_ls() {$/;"	f
_docker_network_rm	completions/docker.completion.sh	/^_docker_network_rm() {$/;"	f
_docker_node	completions/docker.completion.sh	/^_docker_node() {$/;"	f
_docker_node_accept	completions/docker.completion.sh	/^_docker_node_accept() {$/;"	f
_docker_node_demote	completions/docker.completion.sh	/^_docker_node_demote() {$/;"	f
_docker_node_inspect	completions/docker.completion.sh	/^_docker_node_inspect() {$/;"	f
_docker_node_list	completions/docker.completion.sh	/^_docker_node_list() {$/;"	f
_docker_node_ls	completions/docker.completion.sh	/^_docker_node_ls() {$/;"	f
_docker_node_promote	completions/docker.completion.sh	/^_docker_node_promote() {$/;"	f
_docker_node_remove	completions/docker.completion.sh	/^_docker_node_remove() {$/;"	f
_docker_node_rm	completions/docker.completion.sh	/^_docker_node_rm() {$/;"	f
_docker_node_tasks	completions/docker.completion.sh	/^_docker_node_tasks() {$/;"	f
_docker_node_update	completions/docker.completion.sh	/^_docker_node_update() {$/;"	f
_docker_pause	completions/docker.completion.sh	/^_docker_pause() {$/;"	f
_docker_port	completions/docker.completion.sh	/^_docker_port() {$/;"	f
_docker_ps	completions/docker.completion.sh	/^_docker_ps() {$/;"	f
_docker_pull	completions/docker.completion.sh	/^_docker_pull() {$/;"	f
_docker_push	completions/docker.completion.sh	/^_docker_push() {$/;"	f
_docker_rename	completions/docker.completion.sh	/^_docker_rename() {$/;"	f
_docker_restart	completions/docker.completion.sh	/^_docker_restart() {$/;"	f
_docker_rm	completions/docker.completion.sh	/^_docker_rm() {$/;"	f
_docker_rmi	completions/docker.completion.sh	/^_docker_rmi() {$/;"	f
_docker_run	completions/docker.completion.sh	/^_docker_run() {$/;"	f
_docker_save	completions/docker.completion.sh	/^_docker_save() {$/;"	f
_docker_search	completions/docker.completion.sh	/^_docker_search() {$/;"	f
_docker_service	completions/docker.completion.sh	/^_docker_service() {$/;"	f
_docker_service_create	completions/docker.completion.sh	/^_docker_service_create() {$/;"	f
_docker_service_inspect	completions/docker.completion.sh	/^_docker_service_inspect() {$/;"	f
_docker_service_list	completions/docker.completion.sh	/^_docker_service_list() {$/;"	f
_docker_service_ls	completions/docker.completion.sh	/^_docker_service_ls() {$/;"	f
_docker_service_remove	completions/docker.completion.sh	/^_docker_service_remove() {$/;"	f
_docker_service_rm	completions/docker.completion.sh	/^_docker_service_rm() {$/;"	f
_docker_service_scale	completions/docker.completion.sh	/^_docker_service_scale() {$/;"	f
_docker_service_tasks	completions/docker.completion.sh	/^_docker_service_tasks() {$/;"	f
_docker_service_update	completions/docker.completion.sh	/^_docker_service_update() {$/;"	f
_docker_start	completions/docker.completion.sh	/^_docker_start() {$/;"	f
_docker_stats	completions/docker.completion.sh	/^_docker_stats() {$/;"	f
_docker_stop	completions/docker.completion.sh	/^_docker_stop() {$/;"	f
_docker_swarm	completions/docker.completion.sh	/^_docker_swarm() {$/;"	f
_docker_swarm_init	completions/docker.completion.sh	/^_docker_swarm_init() {$/;"	f
_docker_swarm_inspect	completions/docker.completion.sh	/^_docker_swarm_inspect() {$/;"	f
_docker_swarm_join	completions/docker.completion.sh	/^_docker_swarm_join() {$/;"	f
_docker_swarm_leave	completions/docker.completion.sh	/^_docker_swarm_leave() {$/;"	f
_docker_swarm_update	completions/docker.completion.sh	/^_docker_swarm_update() {$/;"	f
_docker_tag	completions/docker.completion.sh	/^_docker_tag() {$/;"	f
_docker_top	completions/docker.completion.sh	/^_docker_top() {$/;"	f
_docker_unpause	completions/docker.completion.sh	/^_docker_unpause() {$/;"	f
_docker_update	completions/docker.completion.sh	/^_docker_update() {$/;"	f
_docker_version	completions/docker.completion.sh	/^_docker_version() {$/;"	f
_docker_volume	completions/docker.completion.sh	/^_docker_volume() {$/;"	f
_docker_volume_create	completions/docker.completion.sh	/^_docker_volume_create() {$/;"	f
_docker_volume_inspect	completions/docker.completion.sh	/^_docker_volume_inspect() {$/;"	f
_docker_volume_ls	completions/docker.completion.sh	/^_docker_volume_ls() {$/;"	f
_docker_volume_rm	completions/docker.completion.sh	/^_docker_volume_rm() {$/;"	f
_docker_wait	completions/docker.completion.sh	/^_docker_wait() {$/;"	f
_drush_completion	completions/drush.completion.sh	/^_drush_completion() {$/;"	f
_echo_usage	plugins/bashmarks/bashmarks.plugin.sh	/^function _echo_usage {$/;"	f
_fzf_compgen_dir	.bashrc	/^_fzf_compgen_dir() {$/;"	f
_fzf_compgen_path	.bashrc	/^_fzf_compgen_path() {$/;"	f
_fzf_comprun	.bashrc	/^_fzf_comprun() {$/;"	f
_gem	completions/gem.completion.sh	/^_gem() {$/;"	f
_get_comp_words_by_ref	completions/maven.completion.sh	/^_get_comp_words_by_ref ()$/;"	f
_get_comp_words_by_ref	tools/git-completion.bash	/^_get_comp_words_by_ref ()$/;"	f
_git_add	tools/git-completion.bash	/^_git_add ()$/;"	f
_git_alias	completions/gh.completion.sh	/^  _git_alias() {$/;"	f
_git_alias	completions/hub.completion.sh	/^  _git_alias() {$/;"	f
_git_am	tools/git-completion.bash	/^_git_am ()$/;"	f
_git_apply	tools/git-completion.bash	/^_git_apply ()$/;"	f
_git_archive	tools/git-completion.bash	/^_git_archive ()$/;"	f
_git_bisect	tools/git-completion.bash	/^_git_bisect ()$/;"	f
_git_branch	tools/git-completion.bash	/^_git_branch ()$/;"	f
_git_browse	completions/gh.completion.sh	/^  _git_browse() {$/;"	f
_git_browse	completions/hub.completion.sh	/^  _git_browse() {$/;"	f
_git_bundle	tools/git-completion.bash	/^_git_bundle ()$/;"	f
_git_checkout	tools/git-completion.bash	/^_git_checkout ()$/;"	f
_git_cherry_pick	tools/git-completion.bash	/^_git_cherry_pick ()$/;"	f
_git_clean	tools/git-completion.bash	/^_git_clean ()$/;"	f
_git_clone	tools/git-completion.bash	/^_git_clone ()$/;"	f
_git_commit	tools/git-completion.bash	/^_git_commit ()$/;"	f
_git_compare	completions/gh.completion.sh	/^  _git_compare() {$/;"	f
_git_compare	completions/hub.completion.sh	/^  _git_compare() {$/;"	f
_git_config	tools/git-completion.bash	/^_git_config ()$/;"	f
_git_create	completions/gh.completion.sh	/^  _git_create() {$/;"	f
_git_create	completions/hub.completion.sh	/^  _git_create() {$/;"	f
_git_describe	tools/git-completion.bash	/^_git_describe ()$/;"	f
_git_diff	tools/git-completion.bash	/^_git_diff ()$/;"	f
_git_difftool	tools/git-completion.bash	/^_git_difftool ()$/;"	f
_git_fetch	tools/git-completion.bash	/^_git_fetch ()$/;"	f
_git_flow	completions/git_flow.completion.sh	/^_git_flow ()$/;"	f
_git_flow	completions/git_flow_avh.completion.sh	/^_git_flow ()$/;"	f
_git_fork	completions/gh.completion.sh	/^  _git_fork() {$/;"	f
_git_fork	completions/hub.completion.sh	/^  _git_fork() {$/;"	f
_git_format_patch	tools/git-completion.bash	/^_git_format_patch ()$/;"	f
_git_fsck	tools/git-completion.bash	/^_git_fsck ()$/;"	f
_git_gitk	tools/git-completion.bash	/^_git_gitk ()$/;"	f
_git_grep	tools/git-completion.bash	/^_git_grep ()$/;"	f
_git_help	tools/git-completion.bash	/^_git_help ()$/;"	f
_git_init	tools/git-completion.bash	/^_git_init ()$/;"	f
_git_log	tools/git-completion.bash	/^_git_log ()$/;"	f
_git_log_prettily	plugins/git/git.plugin.sh	/^function _git_log_prettily(){$/;"	f
_git_ls_files	tools/git-completion.bash	/^_git_ls_files ()$/;"	f
_git_ls_remote	tools/git-completion.bash	/^_git_ls_remote ()$/;"	f
_git_ls_tree	tools/git-completion.bash	/^_git_ls_tree ()$/;"	f
_git_merge	tools/git-completion.bash	/^_git_merge ()$/;"	f
_git_merge_base	tools/git-completion.bash	/^_git_merge_base ()$/;"	f
_git_mergetool	tools/git-completion.bash	/^_git_mergetool ()$/;"	f
_git_mv	tools/git-completion.bash	/^_git_mv ()$/;"	f
_git_notes	tools/git-completion.bash	/^_git_notes ()$/;"	f
_git_pull	tools/git-completion.bash	/^_git_pull ()$/;"	f
_git_pull_request	completions/gh.completion.sh	/^  _git_pull_request() {$/;"	f
_git_pull_request	completions/hub.completion.sh	/^  _git_pull_request() {$/;"	f
_git_push	tools/git-completion.bash	/^_git_push ()$/;"	f
_git_range_diff	tools/git-completion.bash	/^_git_range_diff ()$/;"	f
_git_rebase	tools/git-completion.bash	/^_git_rebase ()$/;"	f
_git_reflog	tools/git-completion.bash	/^_git_reflog ()$/;"	f
_git_remote	tools/git-completion.bash	/^_git_remote ()$/;"	f
_git_replace	tools/git-completion.bash	/^_git_replace ()$/;"	f
_git_rerere	tools/git-completion.bash	/^_git_rerere ()$/;"	f
_git_reset	tools/git-completion.bash	/^_git_reset ()$/;"	f
_git_restore	tools/git-completion.bash	/^_git_restore ()$/;"	f
_git_revert	tools/git-completion.bash	/^_git_revert ()$/;"	f
_git_rm	tools/git-completion.bash	/^_git_rm ()$/;"	f
_git_send_email	tools/git-completion.bash	/^_git_send_email ()$/;"	f
_git_shortlog	tools/git-completion.bash	/^_git_shortlog ()$/;"	f
_git_show	tools/git-completion.bash	/^_git_show ()$/;"	f
_git_show_branch	tools/git-completion.bash	/^_git_show_branch ()$/;"	f
_git_sparse_checkout	tools/git-completion.bash	/^_git_sparse_checkout ()$/;"	f
_git_stage	tools/git-completion.bash	/^_git_stage ()$/;"	f
_git_stash	tools/git-completion.bash	/^_git_stash ()$/;"	f
_git_status	tools/git-completion.bash	/^_git_status ()$/;"	f
_git_submodule	tools/git-completion.bash	/^_git_submodule ()$/;"	f
_git_svn	tools/git-completion.bash	/^_git_svn ()$/;"	f
_git_switch	tools/git-completion.bash	/^_git_switch ()$/;"	f
_git_tag	tools/git-completion.bash	/^_git_tag ()$/;"	f
_git_whatchanged	tools/git-completion.bash	/^_git_whatchanged ()$/;"	f
_git_worktree	tools/git-completion.bash	/^_git_worktree ()$/;"	f
_go	completions/go.completion.sh	/^_go()$/;"	f
_go_clear_cache	completions/go.completion.sh	/^_go_clear_cache() {$/;"	f
_go_importpath	completions/go.completion.sh	/^_go_importpath()$/;"	f
_go_importpath_cache	completions/go.completion.sh	/^_go_importpath_cache() {$/;"	f
_goto_bookmark	plugins/bashmarks/bashmarks.plugin.sh	/^function _goto_bookmark {$/;"	f
_grunt_completions	completions/grunt.completion.sh	/^function _grunt_completions() {$/;"	f
_grunt_gruntfile	completions/grunt.completion.sh	/^function _grunt_gruntfile() {$/;"	f
_gulp_completions	completions/gulp.completion.sh	/^function _gulp_completions() {$/;"	f
_homesick_complete	completions/homesick.completion.sh	/^_homesick_complete()$/;"	f
_installcomp	completions/gem.completion.sh	/^_installcomp() {$/;"	f
_jboss	completions/jboss7.completion.sh	/^_jboss(){$/;"	f
_l	plugins/bashmarks/bashmarks.plugin.sh	/^function _l {$/;"	f
_list_bookmark	plugins/bashmarks/bashmarks.plugin.sh	/^function _list_bookmark {$/;"	f
_moFindEndTag	lib/mo.sh	/^_moFindEndTag() {$/;"	f
_moFindString	lib/mo.sh	/^_moFindString() {$/;"	f
_moFullTagName	lib/mo.sh	/^_moFullTagName() {$/;"	f
_moGetContent	lib/mo.sh	/^_moGetContent() {$/;"	f
_moIndentLines	lib/mo.sh	/^_moIndentLines() {$/;"	f
_moIndirect	lib/mo.sh	/^_moIndirect() {$/;"	f
_moIndirectArray	lib/mo.sh	/^_moIndirectArray() {$/;"	f
_moIsArray	lib/mo.sh	/^_moIsArray() {$/;"	f
_moIsFunction	lib/mo.sh	/^_moIsFunction() {$/;"	f
_moIsStandalone	lib/mo.sh	/^_moIsStandalone() {$/;"	f
_moJoin	lib/mo.sh	/^_moJoin() {$/;"	f
_moLoadFile	lib/mo.sh	/^_moLoadFile() {$/;"	f
_moLoop	lib/mo.sh	/^_moLoop() {$/;"	f
_moParse	lib/mo.sh	/^_moParse() {$/;"	f
_moPartial	lib/mo.sh	/^_moPartial() {$/;"	f
_moShow	lib/mo.sh	/^_moShow() {$/;"	f
_moSplit	lib/mo.sh	/^_moSplit() {$/;"	f
_moStandaloneAllowed	lib/mo.sh	/^_moStandaloneAllowed() {$/;"	f
_moStandaloneDenied	lib/mo.sh	/^_moStandaloneDenied() {$/;"	f
_moTest	lib/mo.sh	/^_moTest() {$/;"	f
_moTrimChars	lib/mo.sh	/^_moTrimChars() {$/;"	f
_moTrimWhitespace	lib/mo.sh	/^_moTrimWhitespace() {$/;"	f
_moUsage	lib/mo.sh	/^_moUsage() {$/;"	f
_mvn	completions/maven.completion.sh	/^_mvn()$/;"	f
_omb_alias_general_cp_init	aliases/general.aliases.sh	/^    alias cp='cp -i' && function _omb_alias_general_cp_init { command cp -i "$@"; }$/;"	f
_omb_alias_general_cp_init	aliases/general.aliases.sh	/^    alias cp='cp -iv' && function _omb_alias_general_cp_init { command cp -iv "$@"; }$/;"	f
_omb_alias_general_cp_init	aliases/general.aliases.sh	/^function _omb_alias_general_cp_init {$/;"	f
_omb_alias_general_mkdir_init	aliases/general.aliases.sh	/^    alias mkdir='mkdir -p' && function _omb_alias_general_mkdir_init { command mkdir -p "$@"; }$/;"	f
_omb_alias_general_mkdir_init	aliases/general.aliases.sh	/^    alias mkdir='mkdir -pv' && function _omb_alias_general_mkdir_init { command mkdir -pv "$@"; /;"	f
_omb_alias_general_mkdir_init	aliases/general.aliases.sh	/^function _omb_alias_general_mkdir_init {$/;"	f
_omb_alias_general_mv_init	aliases/general.aliases.sh	/^    alias mv='mv -i' && function _omb_alias_general_mv_init { command mv -i "$@"; }$/;"	f
_omb_alias_general_mv_init	aliases/general.aliases.sh	/^    alias mv='mv -iv' && function _omb_alias_general_mv_init { command mv -iv "$@"; }$/;"	f
_omb_alias_general_mv_init	aliases/general.aliases.sh	/^function _omb_alias_general_mv_init {$/;"	f
_omb_completion_git_initialize	completions/git.completion.bash	/^_omb_completion_git_initialize() {$/;"	f
_omb_deprecate_const	lib/omb-deprecate.sh	/^  function _omb_deprecate_const {$/;"	f
_omb_deprecate_const=	lib/omb-deprecate.sh	/^  _omb_deprecate_const=()$/;"	f
_omb_deprecate_const__notify	lib/omb-deprecate.sh	/^  function _omb_deprecate_const__notify {$/;"	f
_omb_deprecate_const__sync	lib/omb-deprecate.sh	/^  function _omb_deprecate_const__sync {$/;"	f
_omb_deprecate_const_counter=	lib/omb-deprecate.sh	/^  declare -gA _omb_deprecate_const_counter=()$/;"	f
_omb_deprecate_const_value=	lib/omb-deprecate.sh	/^  _omb_deprecate_const_value=()$/;"	f
_omb_deprecate_declare	lib/omb-deprecate.sh	/^  function _omb_deprecate_declare {$/;"	f
_omb_deprecate_declare=	lib/omb-deprecate.sh	/^  _omb_deprecate_declare=()$/;"	f
_omb_deprecate_declare__init	lib/omb-deprecate.sh	/^function _omb_deprecate_declare__init {$/;"	f
_omb_deprecate_declare__notify	lib/omb-deprecate.sh	/^  function _omb_deprecate_declare__notify {$/;"	f
_omb_deprecate_declare__sync	lib/omb-deprecate.sh	/^  function _omb_deprecate_declare__sync {$/;"	f
_omb_deprecate_declare_counter=	lib/omb-deprecate.sh	/^  declare -gA _omb_deprecate_declare_counter=()$/;"	f
_omb_deprecate_declare_notify=	lib/omb-deprecate.sh	/^  _omb_deprecate_declare_notify=()$/;"	f
_omb_deprecate_declare_value=	lib/omb-deprecate.sh	/^  _omb_deprecate_declare_value=()$/;"	f
_omb_deprecate_function	lib/omb-deprecate.sh	/^function _omb_deprecate_function {$/;"	f
_omb_deprecate_function__notify	lib/omb-deprecate.sh	/^function _omb_deprecate_function__notify {$/;"	f
_omb_deprecate_warning	lib/omb-deprecate.sh	/^function _omb_deprecate_warning {$/;"	f
_omb_grep_flag_available	lib/grep.sh	/^_omb_grep_flag_available() {$/;"	f
_omb_grep_options=	lib/grep.sh	/^_omb_grep_options=()$/;"	f
_omb_install_banner	tools/install.sh	/^_omb_install_banner() {$/;"	f
_omb_install_main	tools/install.sh	/^_omb_install_main() {$/;"	f
_omb_install_print_help	tools/install.sh	/^_omb_install_print_help() {$/;"	f
_omb_install_print_usage	tools/install.sh	/^_omb_install_print_usage() {$/;"	f
_omb_install_print_version	tools/install.sh	/^_omb_install_print_version() {$/;"	f
_omb_install_readargs	tools/install.sh	/^_omb_install_readargs() {$/;"	f
_omb_install_run	tools/install.sh	/^_omb_install_run() {$/;"	f
_omb_install_system_bashrc	tools/install.sh	/^_omb_install_system_bashrc() {$/;"	f
_omb_install_user_bashrc	tools/install.sh	/^_omb_install_user_bashrc() {$/;"	f
_omb_log_arrow	lib/utils.sh	/^_omb_log_arrow()     { printf "➜ %s\\n" "$@"; }$/;"	f
_omb_log_bold	lib/utils.sh	/^_omb_log_bold()      { printf "${_omb_term_bold}%s${_omb_term_reset}\\n" "$@"; }$/;"	f
_omb_log_error	lib/utils.sh	/^_omb_log_error()     { printf "${_omb_term_brown}✖ %s${_omb_term_reset}\\n" "$@"; }$/;"	f
_omb_log_header	lib/utils.sh	/^_omb_log_header()    { printf "\\n${_omb_term_bold}${_omb_term_violet}==========  %s  ==========/;"	f
_omb_log_note	lib/utils.sh	/^_omb_log_note()      { printf "${_omb_term_underline}${_omb_term_bold}${_omb_term_navy}Note:${_o/;"	f
_omb_log_success	lib/utils.sh	/^_omb_log_success()   { printf "${_omb_term_green}✔ %s${_omb_term_reset}\\n" "$@"; }$/;"	f
_omb_log_underline	lib/utils.sh	/^_omb_log_underline() { printf "${_omb_term_underline}${_omb_term_bold}%s${_omb_term_reset}\\n" "/;"	f
_omb_log_warning	lib/utils.sh	/^_omb_log_warning()   { printf "${_omb_term_olive}➜ %s${_omb_term_reset}\\n" "$@"; }$/;"	f
_omb_module_require	oh-my-bash.sh	/^_omb_module_require() {$/;"	f
_omb_module_require_alias	oh-my-bash.sh	/^_omb_module_require_alias()      { _omb_module_require "${@\/#\/alias:}"; }$/;"	f
_omb_module_require_completion	oh-my-bash.sh	/^_omb_module_require_completion() { _omb_module_require "${@\/#\/completion:}"; }$/;"	f
_omb_module_require_lib	oh-my-bash.sh	/^_omb_module_require_lib()        { _omb_module_require "${@\/#\/lib:}"; }$/;"	f
_omb_module_require_plugin	oh-my-bash.sh	/^_omb_module_require_plugin()     { _omb_module_require "${@\/#\/plugin:}"; }$/;"	f
_omb_module_require_theme	oh-my-bash.sh	/^_omb_module_require_theme()      { _omb_module_require "${@\/#\/theme:}"; }$/;"	f
_omb_plugin_battery__upower_print_info	plugins/battery/battery.plugin.sh	/^_omb_plugin_battery__upower_print_info() {$/;"	f
_omb_plugin_fasd_initialize	plugins/fasd/fasd.plugin.sh	/^_omb_plugin_fasd_initialize() {$/;"	f
_omb_plugin_fasd_prompt_func	plugins/fasd/fasd.plugin.sh	/^_omb_plugin_fasd_prompt_func() {$/;"	f
_omb_prompt_color_initialize	lib/omb-prompt-colors.sh	/^function _omb_prompt_color_initialize {$/;"	f
_omb_prompt_format	lib/omb-prompt-base.sh	/^function _omb_prompt_format {$/;"	f
_omb_prompt_get_chruby	lib/omb-prompt-base.sh	/^function _omb_prompt_get_chruby {$/;"	f
_omb_prompt_get_condaenv	lib/omb-prompt-base.sh	/^function _omb_prompt_get_condaenv {$/;"	f
_omb_prompt_get_python_env	lib/omb-prompt-base.sh	/^function _omb_prompt_get_python_env {$/;"	f
_omb_prompt_get_python_venv	lib/omb-prompt-base.sh	/^function _omb_prompt_get_python_venv {$/;"	f
_omb_prompt_get_python_version	lib/omb-prompt-base.sh	/^function _omb_prompt_get_python_version {$/;"	f
_omb_prompt_get_rbenv	lib/omb-prompt-base.sh	/^function _omb_prompt_get_rbenv {$/;"	f
_omb_prompt_get_rbfu	lib/omb-prompt-base.sh	/^function _omb_prompt_get_rbfu {$/;"	f
_omb_prompt_get_ruby_env	lib/omb-prompt-base.sh	/^function _omb_prompt_get_ruby_env {$/;"	f
_omb_prompt_get_rvm	lib/omb-prompt-base.sh	/^function _omb_prompt_get_rvm {$/;"	f
_omb_prompt_get_virtualenv	lib/omb-prompt-base.sh	/^function _omb_prompt_get_virtualenv {$/;"	f
_omb_spectrum__deprecate	lib/spectrum.sh	/^  function _omb_spectrum__deprecate() {$/;"	f
_omb_spectrum__initialize	lib/spectrum.sh	/^  function _omb_spectrum__initialize() {$/;"	f
_omb_spectrum_bg=	lib/spectrum.sh	/^    declare -A _omb_spectrum_bg=()$/;"	f
_omb_spectrum_bg=	lib/spectrum.sh	/^    declare -gA _omb_spectrum_bg=()$/;"	f
_omb_spectrum_fg=	lib/spectrum.sh	/^    declare -A _omb_spectrum_fg=()$/;"	f
_omb_spectrum_fg=	lib/spectrum.sh	/^    declare -gA _omb_spectrum_fg=()$/;"	f
_omb_spectrum_fx=	lib/spectrum.sh	/^    declare -A _omb_spectrum_fx=()$/;"	f
_omb_spectrum_fx=	lib/spectrum.sh	/^    declare -gA _omb_spectrum_fx=()$/;"	f
_omb_term_color_initialize	lib/utils.sh	/^_omb_term_color_initialize() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/90210/90210.theme.sh	/^function _omb_theme_PROMPT_COMMAND(){$/;"	f
_omb_theme_PROMPT_COMMAND	themes/agnoster/agnoster.theme.sh	/^_omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/axin/axin.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/bakke/bakke.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/binaryanomaly/binaryanomaly.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/bobby-python/bobby-python.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/bobby/bobby.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/brainy/brainy.theme.sh	/^_omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/brunton/brunton.theme.sh	/^_omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/candy/candy.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/clean/clean.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/cooperkid/cooperkid.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/cupcake/cupcake.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/demula/demula.theme.sh	/^_omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/doubletime/doubletime.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/doubletime_multiline/doubletime_multiline.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/doubletime_multiline_pyonly/doubletime_multiline_pyonly.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/dulcie/dulcie.theme.sh	/^_omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/duru/duru.theme.sh	/^_omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/emperor/emperor.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/envy/envy.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/font/font.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/gallifrey/gallifrey.theme.sh	/^_omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/garo/garo.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/half-life/half-life.theme.sh	/^_omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/hawaii50/hawaii50.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/iterate/iterate.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/kitsune/kitsune.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/luan/luan.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/mairan/mairan.theme.sh	/^_omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/mbriggs/mbriggs.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/minimal/minimal.theme.sh	/^_omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/modern-t/modern-t.theme.sh	/^_omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/modern/modern.theme.sh	/^_omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/morris/morris.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/n0qorg/n0qorg.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/nwinkler/nwinkler.theme.sh	/^_omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/nwinkler_random_colors/nwinkler_random_colors.theme.sh	/^_omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/pete/pete.theme.sh	/^_omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/powerline-multiline/powerline-multiline.theme.sh	/^_omb_theme_PROMPT_COMMAND() { __powerline_prompt_command "$@"; }$/;"	f
_omb_theme_PROMPT_COMMAND	themes/powerline-naked/powerline-naked.theme.sh	/^_omb_theme_PROMPT_COMMAND() { __powerline_prompt_command "$@"; }$/;"	f
_omb_theme_PROMPT_COMMAND	themes/powerline-plain/powerline-plain.theme.sh	/^_omb_theme_PROMPT_COMMAND() { __powerline_prompt_command "$@"; }$/;"	f
_omb_theme_PROMPT_COMMAND	themes/powerline/powerline.theme.sh	/^_omb_theme_PROMPT_COMMAND() { __powerline_prompt_command "$@"; }$/;"	f
_omb_theme_PROMPT_COMMAND	themes/primer/primer.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/pro/pro.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/pure/pure.theme.sh	/^_omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/purity/purity.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/pzq/pzq.theme.sh	/^_omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/rainbowbrite/rainbowbrite.theme.sh	/^_omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/rana/rana.theme.sh	/^_omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/rjorgenson/rjorgenson.theme.sh	/^_omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/roderik/roderik.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/rr/rr.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/sexy/sexy.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/simple/simple.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/sirup/sirup.theme.sh	/^function _omb_theme_PROMPT_COMMAND {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/slick/slick.theme.sh	/^_omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/standard/standard.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/tonka/tonka.theme.sh	/^_omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/tonotdo/tonotdo.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/tylenol/tylenol.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/vscode/vscode.theme.sh	/^_omb_theme_PROMPT_COMMAND() { true; }$/;"	f
_omb_theme_PROMPT_COMMAND	themes/wanelo/wanelo.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/zitron/zitron.theme.sh	/^function _omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme_PROMPT_COMMAND	themes/zork/zork.theme.sh	/^_omb_theme_PROMPT_COMMAND() {$/;"	f
_omb_theme__construct_sgr	lib/omb-prompt-colors.sh	/^function _omb_theme__construct_sgr {$/;"	f
_omb_theme_color_echo	lib/omb-prompt-colors.sh	/^function _omb_theme_color_echo {$/;"	f
_omb_theme_color_prompt	lib/omb-prompt-colors.sh	/^function _omb_theme_color_prompt {$/;"	f
_omb_theme_half_way_prompt_scm	themes/half-life/half-life.theme.sh	/^_omb_theme_half_way_prompt_scm() {$/;"	f
_omb_theme_sirup_rubygem	themes/sirup/sirup.theme.sh	/^function _omb_theme_sirup_rubygem {$/;"	f
_omb_theme_vscode_initialize	themes/vscode/vscode.theme.sh	/^_omb_theme_vscode_initialize() {$/;"	f
_omb_uninstall_contains_omb	tools/uninstall.sh	/^_omb_uninstall_contains_omb() {$/;"	f
_omb_uninstall_find_bashrc_original	tools/uninstall.sh	/^_omb_uninstall_find_bashrc_original() {$/;"	f
_omb_upgrade	tools/upgrade.sh	/^function _omb_upgrade {$/;"	f
_omb_upgrade_check	tools/check_for_upgrade.sh	/^function _omb_upgrade_check {$/;"	f
_omb_upgrade_current_epoch	tools/check_for_upgrade.sh	/^function _omb_upgrade_current_epoch {$/;"	f
_omb_upgrade_update_timestamp	tools/check_for_upgrade.sh	/^function _omb_upgrade_update_timestamp {$/;"	f
_omb_util_add_prompt_command	lib/utils.sh	/^_omb_util_add_prompt_command() {$/;"	f
_omb_util_alias	lib/utils.sh	/^_omb_util_alias() {$/;"	f
_omb_util_binary_exists	lib/utils.sh	/^  _omb_util_binary_exists() {$/;"	f
_omb_util_command_exists	lib/utils.sh	/^  _omb_util_command_exists() {$/;"	f
_omb_util_defun_print	lib/utils.sh	/^function _omb_util_defun_print {$/;"	f
_omb_util_function_exists	lib/utils.sh	/^_omb_util_function_exists() {$/;"	f
_omb_util_get_shopt	lib/utils.sh	/^  _omb_util_get_shopt() { shopt=$BASHOPTS; }$/;"	f
_omb_util_get_shopt	lib/utils.sh	/^  _omb_util_get_shopt() {$/;"	f
_omb_util_glob_expand	lib/utils.sh	/^_omb_util_glob_expand() {$/;"	f
_omb_util_mktemp	lib/utils.sh	/^function _omb_util_mktemp {$/;"	f
_omb_util_prompt_command=	lib/utils.sh	/^_omb_util_prompt_command=()$/;"	f
_omb_util_prompt_command_hook	lib/utils.sh	/^_omb_util_prompt_command_hook() {$/;"	f
_omb_util_readlink	lib/readlink.sh	/^function _omb_util_readlink {$/;"	f
_omb_util_readlink__readlink	lib/readlink.sh	/^function _omb_util_readlink__readlink {$/;"	f
_omb_util_readlink__resolve	lib/readlink.sh	/^      function _omb_util_readlink__resolve { readlink -f -- "$1"; } ;;$/;"	f
_omb_util_readlink__resolve	lib/readlink.sh	/^    function _omb_util_readlink__resolve { _omb_util_readlink__resolve_loop "$1"; }$/;"	f
_omb_util_readlink__resolve	lib/readlink.sh	/^function _omb_util_readlink__resolve {$/;"	f
_omb_util_readlink__resolve_loop	lib/readlink.sh	/^function _omb_util_readlink__resolve_loop {$/;"	f
_omb_util_readlink__resolve_physical_directory	lib/readlink.sh	/^function _omb_util_readlink__resolve_physical_directory {$/;"	f
_omb_util_readlink__visited	lib/readlink.sh	/^  function _omb_util_readlink__visited {$/;"	f
_omb_util_setexit	lib/utils.sh	/^function _omb_util_setexit {$/;"	f
_omb_util_unload	lib/utils.sh	/^_omb_util_unload() {$/;"	f
_omb_util_unload_hook=	lib/utils.sh	/^_omb_util_unload_hook=()$/;"	f
_osh_plugin_tmux_autoattach_detach	plugins/tmux-autoattach/tmux-autoattach.plugin.sh	/^_osh_plugin_tmux_autoattach_detach() {$/;"	f
_osh_plugin_tmux_autoattach_exit	plugins/tmux-autoattach/tmux-autoattach.plugin.sh	/^_osh_plugin_tmux_autoattach_exit() {$/;"	f
_packer_completion	completions/packer.completion.sh	/^_packer_completion ()$/;"	f
_pip_completion	completions/pip.completion.sh	/^_pip_completion()$/;"	f
_pip_completion	completions/pip3.completion.sh	/^_pip_completion()$/;"	f
_pj	completions/projects.completion.sh	/^_pj() {$/;"	f
_print_bookmark	plugins/bashmarks/bashmarks.plugin.sh	/^function _print_bookmark {$/;"	f
_purge_line	plugins/bashmarks/bashmarks.plugin.sh	/^function _purge_line {$/;"	f
_python_django_completion	completions/django.completion.sh	/^_python_django_completion()$/;"	f
_rakecomplete	completions/rake.completion.sh	/^_rakecomplete() {$/;"	f
_realpath	completions/maven.completion.sh	/^_realpath () $/;"	f
_salt	completions/salt.completion.sh	/^_salt(){$/;"	f
_salt_get_grain_values	completions/salt.completion.sh	/^_salt_get_grain_values(){$/;"	f
_salt_get_grains	completions/salt.completion.sh	/^_salt_get_grains(){$/;"	f
_saltcall	completions/salt.completion.sh	/^_saltcall(){$/;"	f
_saltcp	completions/salt.completion.sh	/^_saltcp(){$/;"	f
_saltkey	completions/salt.completion.sh	/^_saltkey(){$/;"	f
_save_bookmark	plugins/bashmarks/bashmarks.plugin.sh	/^function _save_bookmark {$/;"	f
_sdkman_candidate_versions	completions/sdkman.completion.sh	/^_sdkman_candidate_versions(){$/;"	f
_sdkman_complete	completions/sdkman.completion.sh	/^_sdkman_complete()$/;"	f
_serverProfiles	completions/jboss7.completion.sh	/^_serverProfiles(){$/;"	f
_sshcomplete	completions/ssh.completion.sh	/^_sshcomplete() {$/;"	f
_svn	completions/svn.completion.sh	/^_svn()$/;"	f
_svn_grcut	completions/svn.completion.sh	/^function _svn_grcut()$/;"	f
_svn_info	completions/svn.completion.sh	/^function _svn_info()$/;"	f
_svn_lls	completions/svn.completion.sh	/^function _svn_lls()$/;"	f
_svn_read_hashfile	completions/svn.completion.sh	/^function _svn_read_hashfile()$/;"	f
_svnadmin	completions/svn.completion.sh	/^_svnadmin ()$/;"	f
_svndumpfilter	completions/svn.completion.sh	/^_svndumpfilter ()$/;"	f
_svnlook	completions/svn.completion.sh	/^_svnlook ()$/;"	f
_svnsync	completions/svn.completion.sh	/^_svnsync ()$/;"	f
_svnversion	completions/svn.completion.sh	/^_svnversion ()$/;"	f
_terraform	completions/terraform.completion.sh	/^_terraform()$/;"	f
_tmux	completions/tmux.completion.sh	/^_tmux() {$/;"	f
_tmux_complete_client	completions/tmux.completion.sh	/^function _tmux_complete_client() {$/;"	f
_tmux_complete_session	completions/tmux.completion.sh	/^function _tmux_complete_session() {$/;"	f
_tmux_complete_window	completions/tmux.completion.sh	/^function _tmux_complete_window() {$/;"	f
_tmux_expand	completions/tmux.completion.sh	/^_tmux_expand ()$/;"	f
_tmux_filedir	completions/tmux.completion.sh	/^_tmux_filedir ()$/;"	f
_todo	completions/todo.completion.sh	/^_todo()$/;"	f
_uninstallcomp	completions/gem.completion.sh	/^_uninstallcomp() {$/;"	f
_user_info	themes/kitsune/kitsune.theme.sh	/^function _user_info {$/;"	f
_vagrant	completions/vagrant.completion.sh	/^_vagrant() {$/;"	f
_vault	completions/vault.completion.sh	/^function _vault() {$/;"	f
_vault_mounts	completions/vault.completion.sh	/^function _vault_mounts() {$/;"	f
_vboxmanage	completions/virtualbox.completion.sh	/^_vboxmanage() {$/;"	f
_vboxmanage_realopts	completions/virtualbox.completion.sh	/^_vboxmanage_realopts() {$/;"	f
`90210`	themes/THEMES.md	/^## `90210`$/;"	s
`agnoster`	themes/THEMES.md	/^## `agnoster`$/;"	s
`axin`	themes/THEMES.md	/^## `axin`$/;"	s
`bakke`	themes/THEMES.md	/^## `bakke`$/;"	s
`binaryanomaly`	themes/THEMES.md	/^## `binaryanomaly`$/;"	s
`bobby-python`	themes/THEMES.md	/^## `bobby-python`$/;"	s
`bobby`	themes/THEMES.md	/^## `bobby`$/;"	s
`brainy`	themes/THEMES.md	/^## `brainy`$/;"	s
`brunton`	themes/THEMES.md	/^## `brunton`$/;"	s
`candy`	themes/THEMES.md	/^## `candy`$/;"	s
`clean`	themes/THEMES.md	/^## `clean`$/;"	s
`cooperkid`	themes/THEMES.md	/^## `cooperkid`$/;"	s
`cupcake`	themes/THEMES.md	/^## `cupcake`$/;"	s
`demula`	themes/THEMES.md	/^## `demula`$/;"	s
`dos`	themes/THEMES.md	/^## `dos`$/;"	s
`doubletime_multiline_pyonly`	themes/THEMES.md	/^## `doubletime_multiline_pyonly`$/;"	s
`doubletime_multiline`	themes/THEMES.md	/^## `doubletime_multiline`$/;"	s
`doubletime`	themes/THEMES.md	/^## `doubletime`$/;"	s
`dulcie`	themes/THEMES.md	/^## `dulcie`$/;"	s
`duru`	themes/THEMES.md	/^## `duru`$/;"	s
`emperor`	themes/THEMES.md	/^## `emperor`$/;"	s
`envy`	themes/THEMES.md	/^## `envy`$/;"	s
`font`	themes/THEMES.md	/^## `font`$/;"	s
`gallifrey`	themes/THEMES.md	/^## `gallifrey`$/;"	s
`half-life`	themes/THEMES.md	/^## `half-life`$/;"	s
`hawaii50`	themes/THEMES.md	/^## `hawaii50`$/;"	s
`iterate`	themes/THEMES.md	/^## `iterate`$/;"	s
`kitsune`	themes/THEMES.md	/^## `kitsune`$/;"	s
`luan`	themes/THEMES.md	/^## `luan`$/;"	s
`mairan`	themes/THEMES.md	/^## `mairan`$/;"	s
`mbriggs`	themes/THEMES.md	/^## `mbriggs`$/;"	s
`minimal`	themes/THEMES.md	/^## `minimal`$/;"	s
`modern-t`	themes/THEMES.md	/^## `modern-t`$/;"	s
`modern`	themes/THEMES.md	/^## `modern`$/;"	s
`morris`	themes/THEMES.md	/^## `morris`$/;"	s
`n0qorg`	themes/THEMES.md	/^## `n0qorg`$/;"	s
`nwinkler_random_colors`	themes/THEMES.md	/^## `nwinkler_random_colors`$/;"	s
`nwinkler`	themes/THEMES.md	/^## `nwinkler`$/;"	s
`pete`	themes/THEMES.md	/^## `pete`$/;"	s
`powerline-multiline`	themes/THEMES.md	/^## `powerline-multiline`$/;"	s
`powerline-naked`	themes/THEMES.md	/^## `powerline-naked`$/;"	s
`powerline-plain`	themes/THEMES.md	/^## `powerline-plain`$/;"	s
`powerline`	themes/THEMES.md	/^## `powerline`$/;"	s
`primer`	themes/THEMES.md	/^## `primer`$/;"	s
`pro`	themes/THEMES.md	/^## `pro`$/;"	s
`pure`	themes/THEMES.md	/^## `pure`$/;"	s
`purity`	themes/THEMES.md	/^## `purity`$/;"	s
`pzq`	themes/THEMES.md	/^## `pzq`$/;"	s
`rainbowbrite`	themes/THEMES.md	/^## `rainbowbrite`$/;"	s
`rana`	themes/THEMES.md	/^## `rana`$/;"	s
`rjorgenson`	themes/THEMES.md	/^## `rjorgenson`$/;"	s
`roderik`	themes/THEMES.md	/^## `roderik`$/;"	s
`rr`	themes/THEMES.md	/^## `rr`$/;"	s
`sexy`	themes/THEMES.md	/^## `sexy`$/;"	s
`simple`	themes/THEMES.md	/^## `simple`$/;"	s
`sirup`	themes/THEMES.md	/^## `sirup`$/;"	s
`slick`	themes/THEMES.md	/^## `slick`$/;"	s
`standard`	themes/THEMES.md	/^## `standard`$/;"	s
`tonka`	themes/THEMES.md	/^## `tonka`$/;"	s
`tonotdo`	themes/THEMES.md	/^## `tonotdo`$/;"	s
`tylenol`	themes/THEMES.md	/^## `tylenol`$/;"	s
`vscode`	themes/THEMES.md	/^## `vscode`$/;"	s
`wanelo`	themes/THEMES.md	/^## `wanelo`$/;"	s
`zitron`	themes/THEMES.md	/^## `zitron`$/;"	s
`zork`	themes/THEMES.md	/^## `zork`$/;"	s
a	plugins/ansible/ansible.plugin.sh	/^alias a='ansible '$/;"	a
a-find	.bashrc	/^function a-find () {$/;"	f
a-grep	.bashrc	/^alias a-grep='grep -lirs --exclude-dir=".git;.svn" --color=always'$/;"	a
ac	Config_Vim/keybindingsCoc.vim	/^omap ac <Plug>(coc-classobj-a)$/;"	m
ac	Config_Vim/keybindingsCoc.vim	/^xmap ac <Plug>(coc-classobj-a)$/;"	m
ac_adapter_connected	plugins/battery/battery.plugin.sh	/^ac_adapter_connected(){$/;"	f
ac_adapter_disconnected	plugins/battery/battery.plugin.sh	/^ac_adapter_disconnected(){$/;"	f
acon	plugins/ansible/ansible.plugin.sh	/^alias acon='ansible-console '$/;"	a
aconf	plugins/ansible/ansible.plugin.sh	/^alias aconf='ansible-config '$/;"	a
adoc	plugins/ansible/ansible.plugin.sh	/^alias adoc='ansible-doc '$/;"	a
af	Config_Vim/keybindingsCoc.vim	/^omap af <Plug>(coc-funcobj-a)$/;"	m
af	Config_Vim/keybindingsCoc.vim	/^xmap af <Plug>(coc-funcobj-a)$/;"	m
agal	plugins/ansible/ansible.plugin.sh	/^alias agal='ansible-galaxy '$/;"	a
agnoster	themes/agnoster/README.md	/^# agnoster$/;"	c
agp	plugins/aws/aws.plugin.sh	/^function agp {$/;"	f
ainv	plugins/ansible/ansible.plugin.sh	/^alias ainv='ansible-inventory '$/;"	a
alias:package-manager	aliases/README.md	/^## alias:package-manager$/;"	s	chapter:aliases
alias_value	lib/functions.sh	/^function alias_value() {$/;"	f
aliases	aliases/README.md	/^# aliases$/;"	c
ansi	themes/agnoster/agnoster.theme.sh	/^ansi() {$/;"	f
ansi_r	themes/agnoster/agnoster.theme.sh	/^ansi_r() {$/;"	f
ansi_single	themes/agnoster/agnoster.theme.sh	/^ansi_single() {$/;"	f
ansible plugin	plugins/ansible/README.md	/^# ansible plugin$/;"	c
ansible-role-init	plugins/ansible/ansible.plugin.sh	/^function ansible-role-init(){$/;"	f
ansible-version	plugins/ansible/ansible.plugin.sh	/^function ansible-version(){$/;"	f
apacheEdit	aliases/misc.aliases.sh	/^alias apacheEdit='sudo edit \/etc\/httpd\/httpd.conf'      # apacheEdit:       Edit httpd.conf$/;"	a
apacheLogs	aliases/misc.aliases.sh	/^alias apacheLogs="less +F \/var\/log\/apache2\/error_log"   # Apachelogs:       Shows apache err/;"	a
apacheRestart	aliases/misc.aliases.sh	/^alias apacheRestart='sudo apachectl graceful'           # apacheRestart:    Restart Apache$/;"	a
aplaybook	plugins/ansible/ansible.plugin.sh	/^alias aplaybook='ansible-playbook '$/;"	a
apt	aliases/package-manager.aliases.bash	/^  alias apt="${_omb_tmp_sudo}apt" # Advanced Packaging Tool$/;"	a
aptar	aliases/package-manager.aliases.bash	/^  alias aptar="${_omb_tmp_sudo}apt autoremove -y" # Apt Auto Remove$/;"	a
aptfu	aliases/package-manager.aliases.bash	/^  alias aptfu="${_omb_tmp_sudo}apt update -y && ${_omb_tmp_sudo}apt upgrade -y && ${_omb_tmp_sud/;"	a
apti	aliases/package-manager.aliases.bash	/^  alias apti="${_omb_tmp_sudo}apt install -y" # Apt install$/;"	a
aptli	aliases/package-manager.aliases.bash	/^  alias aptli="${_omb_tmp_sudo}apt list --installed"$/;"	a
aptr	aliases/package-manager.aliases.bash	/^  alias aptr="${_omb_tmp_sudo}apt remove -y" # Apt remove$/;"	a
apts	aliases/package-manager.aliases.bash	/^  alias apts="${_omb_tmp_sudo}apt-cache search" # Apt search$/;"	a
apull	plugins/ansible/ansible.plugin.sh	/^alias apull='ansible-pull '$/;"	a
arinit	plugins/ansible/ansible.plugin.sh	/^alias arinit='ansible-role-init'$/;"	a
asp	plugins/aws/aws.plugin.sh	/^function asp {$/;"	f
auto_connect	tools/autossh.sh	/^auto_connect()$/;"	f
aval	plugins/ansible/ansible.plugin.sh	/^alias aval='ansible-vault'$/;"	a
aver	plugins/ansible/ansible.plugin.sh	/^alias aver='ansible-version'$/;"	a
aws_profile	lib/omb-prompt-base.sh	/^function aws_profile {$/;"	f
banish-cookies	lib/base.sh	/^    banish-cookies () {$/;"	f
bash_stats	lib/functions.sh	/^function bash_stats() {$/;"	f
batch_chmod	lib/base.sh	/^    batch_chmod() {$/;"	f
battery_char	lib/omb-prompt-base.sh	/^    function battery_char (){$/;"	f
battery_char	lib/omb-prompt-base.sh	/^function battery_char {$/;"	f
battery_charge	lib/omb-prompt-base.sh	/^    function battery_charge (){$/;"	f
battery_charge	plugins/battery/battery.plugin.sh	/^battery_charge(){$/;"	f
battery_percentage	plugins/battery/battery.plugin.sh	/^battery_percentage(){$/;"	f
bcubc	plugins/brew/brew.plugin.sh	/^alias bcubc='brew cask reinstall $(brew cask outdated) && brew cleanup'/;"	a
bcubo	plugins/brew/brew.plugin.sh	/^alias bcubo='brew update && brew cask outdated'$/;"	a
bdate	aliases/misc.aliases.sh	/^alias bdate="date '+%a, %b %d %Y %T %Z'"$/;"	a
bg_color	themes/agnoster/agnoster.theme.sh	/^bg_color() {$/;"	f
bigfind	lib/base.sh	/^bigfind() {$/;"	f
bm	plugins/bashmarks/bashmarks.plugin.sh	/^function bm {$/;"	f
brainy	themes/brainy/brainy.theme.sh	/^brainy() {$/;"	f
brew plugin	plugins/brew/README.md	/^# brew plugin$/;"	c
brewp	plugins/brew/brew.plugin.sh	/^alias brewp='brew pin'$/;"	a
brews	plugins/brew/brew.plugin.sh	/^alias brews='brew list -1'$/;"	a
brewsp	plugins/brew/brew.plugin.sh	/^alias brewsp='brew list --pinned'$/;"	a
bu	plugins/bu/bu.plugin.sh	/^function bu () {$/;"	f
bubc	plugins/brew/brew.plugin.sh	/^alias bubc='brew upgrade && brew cleanup'$/;"	a
bubo	plugins/brew/brew.plugin.sh	/^alias bubo='brew update && brew outdated'$/;"	a
bubu	plugins/brew/brew.plugin.sh	/^alias bubu='bubo && bubc'$/;"	a
buf	lib/base.sh	/^    buf () {$/;"	f
build_prompt	themes/agnoster/agnoster.theme.sh	/^build_prompt() {$/;"	f
c	aliases/general.aliases.sh	/^alias c='clear'                             # c:            Clear terminal display$/;"	a
c-ssh-agalano	.bashrc	/^alias c-ssh-agalano="ssh -p 2222 -o ServerAliveInterval=30 agalano@ssh.web7.us.cloudlogin.co -v"$/;"	a
c-ssh-cggl	.bashrc	/^alias c-ssh-cggl="ssh -6 -o  ServerAliveInterval=30 -o TCPKeepAlive=yes cesarguzmanlopez@cggl1.d/;"	a
c-ssh-gabrielsan	.bashrc	/^alias c-ssh-gabrielsan="ssh -o ServerAliveInterval=30 root@198.71.49.57 -v"$/;"	a
c-ssh-generico	.bashrc	/^alias c-ssh-generico="ssh -o ServerAliveInterval=30 root@198.71.50.22 -v"$/;"	a
c-ssh-personal	.bashrc	/^alias c-ssh-personal="ssh -o ServerAliveInterval=30 root@74.208.211.146 -v"$/;"	a
c-ssh-plata	.bashrc	/^alias c-ssh-plata="ssh -o ServerAliveInterval=30 root@74.208.235.42 -v"$/;"	a
c-ssh-sqm	.bashrc	/^alias c-ssh-sqm="ssh -o ServerAliveInterval=30 -o TCPKeepAlive=yes sqmorg1@173.231.197.92 -v"$/;"	a
cal3	aliases/misc.aliases.sh	/^alias cal3='cal -3'$/;"	a
cave	aliases/package-manager.aliases.bash	/^  alias cave="${_omb_tmp_sudo}cave"$/;"	a
chroot	themes/mairan/mairan.theme.sh	/^chroot(){$/;"	f
chroot	themes/zork/zork.theme.sh	/^chroot(){$/;"	f
cic	aliases/general.aliases.sh	/^alias cic='bind "set completion-ignore-case on"' # cic:          Make tab-completion case-insens/;"	a
cli	aliases/package-manager.aliases.bash	/^  alias cli="${_omb_tmp_sudo}cave print-ids --matching '*\/*::\/'" # Cave List Installed$/;"	a
clock_char	lib/omb-prompt-base.sh	/^function clock_char {$/;"	f
clock_prompt	lib/omb-prompt-base.sh	/^function clock_prompt {$/;"	f
cls	.bashrc	/^alias cls=clear$/;"	a
clsource	.bashrc	/^alias clsource="clear && source ~\/.bashrc"$/;"	a
conn-ssh	.bashrc	/^alias conn-ssh="netstat -at | grep ssh && who"$/;"	a
cp	aliases/general.aliases.sh	/^    alias cp='cp -i' && function _omb_alias_general_cp_init { command cp -i "$@"; }$/;"	a
cp	aliases/general.aliases.sh	/^    alias cp='cp -iv' && function _omb_alias_general_cp_init { command cp -iv "$@"; }$/;"	a
cp	aliases/general.aliases.sh	/^alias cp='_omb_alias_general_cp_init'       # Preferred 'cp' implementation$/;"	a
cpu_hogs	aliases/misc.aliases.sh	/^    alias cpu_hogs='ps wwaxr -o pid,stat,%cpu,time,command | head -10'$/;"	a
cr	aliases/package-manager.aliases.bash	/^  alias cr="${_omb_tmp_sudo}cave resolve" # Cave Resolve$/;"	a
cs	aliases/package-manager.aliases.bash	/^  alias cs="${_omb_tmp_sudo}cave show" # Cave Show$/;"	a
cui	aliases/package-manager.aliases.bash	/^  alias cui="${_omb_tmp_sudo}cave uninstall" # Cave UnInstall$/;"	a
current_branch	plugins/git/git.plugin.sh	/^function current_branch() {$/;"	f
current_repository	plugins/git/git.plugin.sh	/^function current_repository() {$/;"	f
d	plugins/bashmarks/bashmarks.plugin.sh	/^alias d='bm -d'       # Delete a bookmark [bookmark_name]$/;"	a
da	aliases/misc.aliases.sh	/^alias da='date "+%Y-%m-%d %A    %T %Z"'$/;"	a
daemon_options=	completions/docker-compose.completion.sh	/^	local daemon_options=()$/;"	f
daysleft	aliases/misc.aliases.sh	/^alias daysleft='echo "There are $(($(date +%j -d"Dec 31, $(date +%Y)")-$(date +%j))) left in yea/;"	a
debug	themes/agnoster/agnoster.theme.sh	/^debug() {$/;"	f
default	lib/functions.sh	/^function default() {$/;"	f
definition	tools/git-completion.bash	/^			\\(\\))   : skip parens of shell function definition ;;$/;"	f
del	lib/base.sh	/^    del() {$/;"	f
delay	plugins/progress/progress.plugin.sh	/^function delay()$/;"	f
demula_vcprompt	themes/demula/demula.theme.sh	/^demula_vcprompt() {$/;"	f
demula_vcprompt	themes/pzq/pzq.theme.sh	/^demula_vcprompt() {$/;"	f
demula_vcprompt	themes/rana/rana.theme.sh	/^demula_vcprompt() {$/;"	f
dequote	tools/git-completion.bash	/^	function dequote(p,    bs_idx, out, esc, esc_idx, dec) {$/;"	f
dir	aliases/ls.aliases.sh	/^alias dir='ls -hFx'$/;"	a
dot_progress	tools/autossh.sh	/^dot_progress()$/;"	f
doubletime_scm_prompt	themes/doubletime/doubletime.theme.sh	/^doubletime_scm_prompt() {$/;"	f
down4me	lib/base.sh	/^    down4me () {$/;"	f
dpkg	aliases/package-manager.aliases.bash	/^  alias dpkg="${_omb_tmp_sudo}dpkg"$/;"	a
dud	aliases/ls.aliases.sh	/^alias dud='du -d 1 -h'                      # Short and human-readable file listing$/;"	a
duf	aliases/ls.aliases.sh	/^alias duf='du -sh *'                        # Short and human-readable directory listing$/;"	a
dulcie_background	themes/dulcie/dulcie.theme.sh	/^dulcie_background() {$/;"	f
dulcie_color	themes/dulcie/dulcie.theme.sh	/^dulcie_color() {$/;"	f
eb	aliases/package-manager.aliases.bash	/^  alias eb="${_omb_tmp_sudo}ebuild" # Enoch Build$/;"	a
echo_b	tools/autossh.sh	/^echo_b()$/;"	f
echo_c	tools/autossh.sh	/^echo_c()$/;"	f
editHosts	aliases/misc.aliases.sh	/^alias editHosts='sudo edit \/etc\/hosts'                  # editHosts:        Edit \/etc\/hosts /;"	a
elip	aliases/package-manager.aliases.bash	/^  alias elip="${_omb_tmp_sudo}eix-installed -a" # Enoch List Installed Packages$/;"	a
em	aliases/package-manager.aliases.bash	/^  alias em="${_omb_tmp_sudo}emerge" # Enoch Merge$/;"	a
emfu	aliases/package-manager.aliases.bash	/^  alias emfu="${_omb_tmp_sudo}emerge --sync && ${_omb_tmp_sudo}emerge -uDUj @world"$/;"	a
env_default	lib/functions.sh	/^function env_default() {$/;"	f
epochtime	aliases/misc.aliases.sh	/^alias epochtime='date +%s'$/;"	a
er	aliases/package-manager.aliases.bash	/^  alias er="${_omb_tmp_sudo}emerge -c" # Enoch Remove$/;"	a
ers	aliases/package-manager.aliases.bash	/^  alias ers="${_omb_tmp_sudo}emerge -c" # Enoch Remove Systempackage$/;"	a
es	aliases/package-manager.aliases.bash	/^  alias es="${_omb_tmp_sudo}emerge --search" # Enoch Search$/;"	a
esync	aliases/package-manager.aliases.bash	/^  alias esync="${_omb_tmp_sudo}emerge --sync" # Enoch SYNC$/;"	a
extract	lib/base.sh	/^    extract () {$/;"	f
ff	lib/base.sh	/^ff () { \/usr\/bin\/find . -name "$@" ; }      # ff:       Find file under the current directory$/;"	f
ffe	lib/base.sh	/^ffe () { \/usr\/bin\/find . -name '*'"$@" ; }  # ffe:      Find file whose name ends with a give/;"	f
ffs	lib/base.sh	/^ffs () { \/usr\/bin\/find . -name "$@"'*' ; }  # ffs:      Find file whose name starts with a gi/;"	f
fg_color	themes/agnoster/agnoster.theme.sh	/^fg_color() {$/;"	f
files=	lib/mo.sh	/^    files=()$/;"	f
files=	oh-my-bash.sh	/^  local -a files=()$/;"	f
findPid	lib/base.sh	/^    findPid () { lsof -t -c "$@" ; }$/;"	f
fix_stty	aliases/general.aliases.sh	/^alias fix_stty='stty sane'                  # fix_stty:     Restore terminal settings when screw/;"	a
fix_term	aliases/general.aliases.sh	/^alias fix_term='echo -e "\\033c"'            # fix_term:     Reset the conosle.  Similar to the /;"	a
function_exists	completions/maven.completion.sh	/^function_exists()$/;"	f
g	plugins/bashmarks/bashmarks.plugin.sh	/^alias g='bm -g'       # Go to bookmark [bookmark_name]$/;"	a
g	plugins/git/git.plugin.sh	/^alias g='git'$/;"	a
g:WebDevIconsNerdTreeAfterGlyphPadding	Config_Vim/NerdTree.vim	/^let g:WebDevIconsNerdTreeAfterGlyphPadding = '  '$/;"	v
g:WebDevIconsNerdTreeGitPluginForceVAlign	Config_Vim/NerdTree.vim	/^let g:WebDevIconsNerdTreeGitPluginForceVAlign = 1$/;"	v
g:WebDevIconsOS	Config_Vim/NerdTree.vim	/^let g:WebDevIconsOS = 'Darwin'$/;"	v
g:WebDevIconsUnicodeDecorateFileNodes	Config_Vim/NerdTree.vim	/^let g:WebDevIconsUnicodeDecorateFileNodes = 1$/;"	v
g:WebDevIconsUnicodeGlyphDoubleWidth	Config_Vim/NerdTree.vim	/^let g:WebDevIconsUnicodeGlyphDoubleWidth = 1$/;"	v
g:goyo_height	Config_Vim/Goyo.vim	/^let g:goyo_height = '99%'$/;"	v
g:goyo_width	Config_Vim/Goyo.vim	/^let g:goyo_width = '99%'$/;"	v
g:gruvbox_material_background	Config_Vim/Aparience.vim	/^let g:gruvbox_material_background = 'dark'$/;"	v
g:gruvbox_material_better_performance	Config_Vim/Aparience.vim	/^let g:gruvbox_material_better_performance = 1$/;"	v
g:gruvbox_material_transparent_background	Config_Vim/Aparience.vim	/^let g:gruvbox_material_transparent_background = 1$/;"	v
g:loaded_compile_code	Config_Vim/KeyBindingsFunctions.vim	/^        let g:loaded_compile_code = 0$/;"	v
g:loaded_compile_code	Config_Vim/KeyBindingsFunctions.vim	/^        let g:loaded_compile_code = 1$/;"	v
g:loaded_debug_code	Config_Vim/KeyBindingsFunctions.vim	/^        let g:loaded_debug_code = 0$/;"	v
g:loaded_debug_code	Config_Vim/KeyBindingsFunctions.vim	/^        let g:loaded_debug_code = 1$/;"	v
g:loaded_run_code	Config_Vim/KeyBindingsFunctions.vim	/^        let g:loaded_run_code = 0$/;"	v
g:loaded_run_code	Config_Vim/KeyBindingsFunctions.vim	/^        let g:loaded_run_code = 1$/;"	v
g:loaded_run_project	Config_Vim/KeyBindingsFunctions.vim	/^        let g:loaded_run_project = 0$/;"	v
g:loaded_run_project	Config_Vim/KeyBindingsFunctions.vim	/^        let g:loaded_run_project = 1$/;"	v
g:loaded_stop_debug	Config_Vim/KeyBindingsFunctions.vim	/^        let g:loaded_stop_debug = 0$/;"	v
g:loaded_stop_debug	Config_Vim/KeyBindingsFunctions.vim	/^        let g:loaded_stop_debug = 1$/;"	v
g:pear_tree_pairs	Config_Vim/AutoCompletePairs.vim	/^let g:pear_tree_pairs = {$/;"	v
g:webdevicons_conceal_nerdtree_brackets	Config_Vim/NerdTree.vim	/^let g:webdevicons_conceal_nerdtree_brackets = 1$/;"	v
g:webdevicons_enable	Config_Vim/NerdTree.vim	/^let g:webdevicons_enable = 1$/;"	v
g:webdevicons_enable_airline_statusline	Config_Vim/NerdTree.vim	/^let g:webdevicons_enable_airline_statusline = 1$/;"	v
g:webdevicons_enable_airline_tabline	Config_Vim/NerdTree.vim	/^let g:webdevicons_enable_airline_tabline = 1$/;"	v
g:webdevicons_enable_ctrlp	Config_Vim/NerdTree.vim	/^let g:webdevicons_enable_ctrlp = 1$/;"	v
g:webdevicons_enable_denite	Config_Vim/NerdTree.vim	/^let g:webdevicons_enable_denite = 1$/;"	v
g:webdevicons_enable_flagship_statusline	Config_Vim/NerdTree.vim	/^let g:webdevicons_enable_flagship_statusline = 1$/;"	v
g:webdevicons_enable_nerdtree	Config_Vim/NerdTree.vim	/^let g:webdevicons_enable_nerdtree = 1$/;"	v
g:webdevicons_enable_startify	Config_Vim/NerdTree.vim	/^let g:webdevicons_enable_startify = 1$/;"	v
g:webdevicons_enable_unite	Config_Vim/NerdTree.vim	/^let g:webdevicons_enable_unite = 1$/;"	v
g:webdevicons_enable_vimfiler	Config_Vim/NerdTree.vim	/^let g:webdevicons_enable_vimfiler = 1$/;"	v
g:ycm_java_jdtls_extension_path	Config_Vim/YCM.vim	/^let g:ycm_java_jdtls_extension_path = ['~\/.vim\/plugged\/vimspector\/gadgets\/linux']$/;"	v
ga	plugins/git/git.plugin.sh	/^alias ga='git add'$/;"	a
gaa	plugins/git/git.plugin.sh	/^alias gaa='git add --all'$/;"	a
gapa	plugins/git/git.plugin.sh	/^alias gapa='git add --patch'$/;"	a
gau	plugins/git/git.plugin.sh	/^alias gau='git add --update'$/;"	a
gb	plugins/git/git.plugin.sh	/^alias gb='git branch'$/;"	a
gba	plugins/git/git.plugin.sh	/^alias gba='git branch -a'$/;"	a
gbd	plugins/git/git.plugin.sh	/^alias gbd='git branch -d'$/;"	a
gbda	plugins/git/git.plugin.sh	/^alias gbda='git branch --no-color --merged | command grep -vE "^(\\*|\\s*(master|develop|dev)\\s/;"	a
gbl	plugins/git/git.plugin.sh	/^alias gbl='git blame -b -w'$/;"	a
gbnm	plugins/git/git.plugin.sh	/^alias gbnm='git branch --no-merged'$/;"	a
gbr	plugins/git/git.plugin.sh	/^alias gbr='git branch --remote'$/;"	a
gbs	plugins/git/git.plugin.sh	/^alias gbs='git bisect'$/;"	a
gbsb	plugins/git/git.plugin.sh	/^alias gbsb='git bisect bad'$/;"	a
gbsg	plugins/git/git.plugin.sh	/^alias gbsg='git bisect good'$/;"	a
gbsr	plugins/git/git.plugin.sh	/^alias gbsr='git bisect reset'$/;"	a
gbss	plugins/git/git.plugin.sh	/^alias gbss='git bisect start'$/;"	a
gc	plugins/git/git.plugin.sh	/^alias gc!='git commit -v --amend'$/;"	a
gc	plugins/git/git.plugin.sh	/^alias gc='git commit -v'$/;"	a
gca	plugins/git/git.plugin.sh	/^alias gca!='git commit -v -a --amend'$/;"	a
gca	plugins/git/git.plugin.sh	/^alias gca='git commit -v -a'$/;"	a
gcam	plugins/git/git.plugin.sh	/^alias gcam='git commit -a -m'$/;"	a
gcan	plugins/git/git.plugin.sh	/^alias gcan!='git commit -v -a --no-edit --amend'$/;"	a
gcans	plugins/git/git.plugin.sh	/^alias gcans!='git commit -v -a -s --no-edit --amend'$/;"	a
gcb	plugins/git/git.plugin.sh	/^alias gcb='git checkout -b'$/;"	a
gcd	plugins/git/git.plugin.sh	/^alias gcd='git checkout develop'$/;"	a
gcf	plugins/git/git.plugin.sh	/^alias gcf='git config --list'$/;"	a
gcl	plugins/git/git.plugin.sh	/^alias gcl='git clone --recursive'$/;"	a
gclean	plugins/git/git.plugin.sh	/^alias gclean='git clean -fd'$/;"	a
gcm	plugins/git/git.plugin.sh	/^alias gcm='git checkout master'$/;"	a
gcmsg	plugins/git/git.plugin.sh	/^alias gcmsg='git commit -m'$/;"	a
gcn	plugins/git/git.plugin.sh	/^alias gcn!='git commit -v --no-edit --amend'$/;"	a
gco	plugins/git/git.plugin.sh	/^alias gco='git checkout'$/;"	a
gcount	plugins/git/git.plugin.sh	/^alias gcount='git shortlog -sn'$/;"	a
gcp	plugins/git/git.plugin.sh	/^alias gcp='git cherry-pick'$/;"	a
gcpa	plugins/git/git.plugin.sh	/^alias gcpa='git cherry-pick --abort'$/;"	a
gcpc	plugins/git/git.plugin.sh	/^alias gcpc='git cherry-pick --continue'$/;"	a
gcps	plugins/git/git.plugin.sh	/^alias gcps='git cherry-pick -s'$/;"	a
gcs	plugins/git/git.plugin.sh	/^alias gcs='git commit -S'$/;"	a
gcsm	plugins/git/git.plugin.sh	/^alias gcsm='git commit -s -m'$/;"	a
gd	Config_Vim/keybindingsCoc.vim	/^nmap <silent> gd <Plug>(coc-definition)$/;"	m
gd	plugins/git/git.plugin.sh	/^alias gd='git diff'$/;"	a
gdca	plugins/git/git.plugin.sh	/^alias gdca='git diff --cached'$/;"	a
gdct	plugins/git/git.plugin.sh	/^alias gdct='git describe --tags `git rev-list --tags --max-count=1`'$/;"	a
gdt	plugins/git/git.plugin.sh	/^alias gdt='git diff-tree --no-commit-id --name-only -r'$/;"	a
gdv	plugins/git/git.plugin.sh	/^gdv() {$/;"	f
gdw	plugins/git/git.plugin.sh	/^alias gdw='git diff --word-diff'$/;"	a
get_hg_root	lib/omb-prompt-base.sh	/^function get_hg_root {$/;"	f
get_hour_color	themes/emperor/emperor.theme.sh	/^function get_hour_color {$/;"	f
get_input	tools/autossh.sh	/^get_input()$/;"	f
get_ip_info	themes/hawaii50/hawaii50.theme.sh	/^function get_ip_info {$/;"	f
get_symbol_user_info	themes/kitsune/kitsune.theme.sh	/^function get_symbol_user_info {$/;"	f
gf	plugins/git/git.plugin.sh	/^alias gf='git fetch'$/;"	a
gfa	plugins/git/git.plugin.sh	/^alias gfa='git fetch --all --prune'$/;"	a
gfb	Config_Vim/KeyBindings.vim	/^nnoremap gfb :Buffers<CR>$/;"	m
gfc	Config_Vim/KeyBindings.vim	/^nnoremap gfc :Commands<CR>$/;"	m
gff	Config_Vim/KeyBindings.vim	/^nnoremap gff :Files<CR>$/;"	m
gfg	plugins/git/git.plugin.sh	/^gfg() {$/;"	f
gfh	Config_Vim/KeyBindings.vim	/^nnoremap gfh :History<CR>$/;"	m
gfl	Config_Vim/KeyBindings.vim	/^nnoremap gfl :Lines<CR>$/;"	m
gfm	Config_Vim/KeyBindings.vim	/^nnoremap gfm :Marks<CR>$/;"	m
gfo	Config_Vim/KeyBindings.vim	/^nnoremap gfo :BLines<CR>$/;"	m
gfo	plugins/git/git.plugin.sh	/^alias gfo='git fetch origin'$/;"	a
gft	Config_Vim/KeyBindings.vim	/^nnoremap gft :Tags<CR>$/;"	m
gfz	Config_Vim/KeyBindings.vim	/^nnoremap gfz :FZF <CR>$/;"	m
gg	plugins/git/git.plugin.sh	/^alias gg='git gui citool'$/;"	a
gga	plugins/git/git.plugin.sh	/^alias gga='git gui citool --amend'$/;"	a
ggf	plugins/git/git.plugin.sh	/^ggf() {$/;"	f
ggl	plugins/git/git.plugin.sh	/^ggl() {$/;"	f
ggp	plugins/git/git.plugin.sh	/^ggp() {$/;"	f
ggpnp	plugins/git/git.plugin.sh	/^ggpnp() {$/;"	f
ggpull	plugins/git/git.plugin.sh	/^alias ggpull='git pull origin $(git_current_branch)'$/;"	a
ggpur	plugins/git/git.plugin.sh	/^alias ggpur='ggu'$/;"	a
ggpush	plugins/git/git.plugin.sh	/^alias ggpush='git push origin $(git_current_branch)'$/;"	a
ggsup	plugins/git/git.plugin.sh	/^alias ggsup='git branch --set-upstream-to=origin\/$(git_current_branch)'$/;"	a
ggu	plugins/git/git.plugin.sh	/^ggu() {$/;"	f
ghh	plugins/git/git.plugin.sh	/^alias ghh='git help'$/;"	a
gi	Config_Vim/keybindingsCoc.vim	/^nmap <silent> gi <Plug>(coc-implementation)$/;"	m
gignore	plugins/git/git.plugin.sh	/^alias gignore='git update-index --assume-unchanged'$/;"	a
gignored	plugins/git/git.plugin.sh	/^alias gignored='git ls-files -v | grep "^[[:lower:]]"'$/;"	a
git-svn-dcommit-push	plugins/git/git.plugin.sh	/^alias git-svn-dcommit-push='git svn dcommit && git push github master:svntrunk'$/;"	a
git_clean_branch	lib/omb-prompt-base.sh	/^function git_clean_branch {$/;"	f
git_commits_ahead	lib/git.sh	/^function git_commits_ahead() {$/;"	f
git_commits_behind	lib/git.sh	/^function git_commits_behind() {$/;"	f
git_compare_version	lib/git.sh	/^function git_compare_version() {$/;"	f
git_current_branch	lib/git.sh	/^function git_current_branch() {$/;"	f
git_current_user_email	lib/git.sh	/^function git_current_user_email() {$/;"	f
git_current_user_name	lib/git.sh	/^function git_current_user_name() {$/;"	f
git_prompt_ahead	lib/git.sh	/^function git_prompt_ahead() {$/;"	f
git_prompt_behind	lib/git.sh	/^function git_prompt_behind() {$/;"	f
git_prompt_info	lib/git.sh	/^function git_prompt_info() {$/;"	f
git_prompt_info	lib/omb-prompt-base.sh	/^function git_prompt_info {$/;"	f
git_prompt_info	themes/hawaii50/hawaii50.theme.sh	/^function git_prompt_info() {$/;"	f
git_prompt_info	themes/iterate/iterate.theme.sh	/^function git_prompt_info {$/;"	f
git_prompt_info	themes/pro/pro.theme.sh	/^function git_prompt_info {$/;"	f
git_prompt_long_sha	lib/git.sh	/^function git_prompt_long_sha() {$/;"	f
git_prompt_minimal_info	lib/omb-prompt-base.sh	/^function git_prompt_minimal_info {$/;"	f
git_prompt_remote	lib/git.sh	/^function git_prompt_remote() {$/;"	f
git_prompt_short_sha	lib/git.sh	/^function git_prompt_short_sha() {$/;"	f
git_prompt_status	lib/git.sh	/^function git_prompt_status() {$/;"	f
git_prompt_status	themes/doubletime/doubletime.theme.sh	/^git_prompt_status() {$/;"	f
git_prompt_vars	lib/omb-prompt-base.sh	/^function git_prompt_vars {$/;"	f
git_remote_status	lib/git.sh	/^function git_remote_status() {$/;"	f
git_short_sha	themes/cooperkid/cooperkid.theme.sh	/^function git_short_sha() {$/;"	f
git_short_sha	themes/mbriggs/mbriggs.theme.sh	/^function git_short_sha() {$/;"	f
git_status_dirty	themes/agnoster/agnoster.theme.sh	/^git_status_dirty() {$/;"	f
git_status_summary	lib/omb-prompt-base.sh	/^function git_status_summary {$/;"	f
git_user_info	lib/omb-prompt-base.sh	/^function git_user_info {$/;"	f
gk	plugins/git/git.plugin.sh	/^alias gk='\\gitk --all --branches'$/;"	a
gke	plugins/git/git.plugin.sh	/^alias gke='\\gitk --all $(git log -g --pretty=%h)'$/;"	a
gl	plugins/git/git.plugin.sh	/^alias gl='git pull'$/;"	a
glg	plugins/git/git.plugin.sh	/^alias glg='git log --stat'$/;"	a
glgg	plugins/git/git.plugin.sh	/^alias glgg='git log --graph'$/;"	a
glgga	plugins/git/git.plugin.sh	/^alias glgga='git log --graph --decorate --all'$/;"	a
glgm	plugins/git/git.plugin.sh	/^alias glgm='git log --graph --max-count=10'$/;"	a
glgp	plugins/git/git.plugin.sh	/^alias glgp='git log --stat -p'$/;"	a
glo	plugins/git/git.plugin.sh	/^alias glo='git log --oneline --decorate'$/;"	a
glog	plugins/git/git.plugin.sh	/^alias glog='git log --oneline --decorate --graph'$/;"	a
gloga	plugins/git/git.plugin.sh	/^alias gloga='git log --oneline --decorate --graph --all'$/;"	a
glol	plugins/git/git.plugin.sh	/^alias glol="git log --graph --pretty='%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bol/;"	a
glola	plugins/git/git.plugin.sh	/^alias glola="git log --graph --pretty='%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bo/;"	a
glp	plugins/git/git.plugin.sh	/^alias glp="_git_log_prettily"$/;"	a
glum	plugins/git/git.plugin.sh	/^alias glum='git pull upstream master'$/;"	a
gm	plugins/git/git.plugin.sh	/^alias gm='git merge'$/;"	a
gmom	plugins/git/git.plugin.sh	/^alias gmom='git merge origin\/master'$/;"	a
gmt	plugins/git/git.plugin.sh	/^alias gmt='git mergetool --no-prompt'$/;"	a
gmtvim	plugins/git/git.plugin.sh	/^alias gmtvim='git mergetool --no-prompt --tool=vimdiff'$/;"	a
gmum	plugins/git/git.plugin.sh	/^alias gmum='git merge upstream\/master'$/;"	a
gob	plugins/golang/golang.plugin.sh	/^alias gob='go build'$/;"	a
goc	plugins/golang/golang.plugin.sh	/^alias goc='go clean'$/;"	a
god	plugins/golang/golang.plugin.sh	/^alias god='go doc'$/;"	a
goenv plugin	plugins/goenv/README.md	/^# goenv plugin$/;"	c
gof	plugins/golang/golang.plugin.sh	/^alias gof='go fmt'$/;"	a
gofa	plugins/golang/golang.plugin.sh	/^alias gofa='go fmt .\/...'$/;"	a
gog	plugins/golang/golang.plugin.sh	/^alias gog='go get'$/;"	a
goi	plugins/golang/golang.plugin.sh	/^alias goi='go install'$/;"	a
gol	plugins/golang/golang.plugin.sh	/^alias gol='go list'$/;"	a
gom	plugins/golang/golang.plugin.sh	/^alias gom='go mod'$/;"	a
gop	plugins/golang/golang.plugin.sh	/^alias gop='cd $GOPATH'$/;"	a
gopb	plugins/golang/golang.plugin.sh	/^alias gopb='cd $GOPATH\/bin'$/;"	a
gops	plugins/golang/golang.plugin.sh	/^alias gops='cd $GOPATH\/src'$/;"	a
gor	plugins/golang/golang.plugin.sh	/^alias gor='go run'$/;"	a
got	plugins/golang/golang.plugin.sh	/^alias got='go test'$/;"	a
gov	plugins/golang/golang.plugin.sh	/^alias gov='go vet'/;"	a
gp	plugins/git/git.plugin.sh	/^alias gp='git push'$/;"	a
gpd	plugins/git/git.plugin.sh	/^alias gpd='git push --dry-run'$/;"	a
gpoat	plugins/git/git.plugin.sh	/^alias gpoat='git push origin --all && git push origin --tags'$/;"	a
gpristine	plugins/git/git.plugin.sh	/^alias gpristine='git reset --hard && git clean -dfx'$/;"	a
gpsup	plugins/git/git.plugin.sh	/^alias gpsup='git push --set-upstream origin $(git_current_branch)'$/;"	a
gpu	plugins/git/git.plugin.sh	/^alias gpu='git push upstream'$/;"	a
gpv	plugins/git/git.plugin.sh	/^alias gpv='git push -v'$/;"	a
gr	Config_Vim/keybindingsCoc.vim	/^nmap <silent> gr <Plug>(coc-references)$/;"	m
gr	plugins/git/git.plugin.sh	/^alias gr='git remote'$/;"	a
gra	plugins/git/git.plugin.sh	/^alias gra='git remote add'$/;"	a
grb	plugins/git/git.plugin.sh	/^alias grb='git rebase'$/;"	a
grba	plugins/git/git.plugin.sh	/^alias grba='git rebase --abort'$/;"	a
grbc	plugins/git/git.plugin.sh	/^alias grbc='git rebase --continue'$/;"	a
grbi	plugins/git/git.plugin.sh	/^alias grbi='git rebase -i'$/;"	a
grbm	plugins/git/git.plugin.sh	/^alias grbm='git rebase master'$/;"	a
grbs	plugins/git/git.plugin.sh	/^alias grbs='git rebase --skip'$/;"	a
grh	plugins/git/git.plugin.sh	/^alias grh='git reset HEAD'$/;"	a
grhh	plugins/git/git.plugin.sh	/^alias grhh='git reset HEAD --hard'$/;"	a
grmv	plugins/git/git.plugin.sh	/^alias grmv='git remote rename'$/;"	a
grrm	plugins/git/git.plugin.sh	/^alias grrm='git remote remove'$/;"	a
grset	plugins/git/git.plugin.sh	/^alias grset='git remote set-url'$/;"	a
grt	plugins/git/git.plugin.sh	/^alias grt='cd $(git rev-parse --show-toplevel || echo ".")'$/;"	a
gru	plugins/git/git.plugin.sh	/^alias gru='git reset --'$/;"	a
grup	plugins/git/git.plugin.sh	/^alias grup='git remote update'$/;"	a
grv	plugins/git/git.plugin.sh	/^alias grv='git remote -v'$/;"	a
gsb	plugins/git/git.plugin.sh	/^alias gsb='git status -sb'$/;"	a
gsd	plugins/git/git.plugin.sh	/^alias gsd='git svn dcommit'$/;"	a
gsi	plugins/git/git.plugin.sh	/^alias gsi='git submodule init'$/;"	a
gsps	plugins/git/git.plugin.sh	/^alias gsps='git show --pretty=short --show-signature'$/;"	a
gsr	plugins/git/git.plugin.sh	/^alias gsr='git svn rebase'$/;"	a
gss	plugins/git/git.plugin.sh	/^alias gss='git status -s'$/;"	a
gst	plugins/git/git.plugin.sh	/^alias gst='git status'$/;"	a
gsta	plugins/git/git.plugin.sh	/^alias gsta='git stash save'$/;"	a
gstaa	plugins/git/git.plugin.sh	/^alias gstaa='git stash apply'$/;"	a
gstc	plugins/git/git.plugin.sh	/^alias gstc='git stash clear'$/;"	a
gstd	plugins/git/git.plugin.sh	/^alias gstd='git stash drop'$/;"	a
gstl	plugins/git/git.plugin.sh	/^alias gstl='git stash list'$/;"	a
gstp	plugins/git/git.plugin.sh	/^alias gstp='git stash pop'$/;"	a
gsts	plugins/git/git.plugin.sh	/^alias gsts='git stash show --text'$/;"	a
gsu	plugins/git/git.plugin.sh	/^alias gsu='git submodule update'$/;"	a
gts	plugins/git/git.plugin.sh	/^alias gts='git tag -s'$/;"	a
gtv	plugins/git/git.plugin.sh	/^alias gtv='git tag | sort -V'$/;"	a
gunignore	plugins/git/git.plugin.sh	/^alias gunignore='git update-index --no-assume-unchanged'$/;"	a
gunwip	plugins/git/git.plugin.sh	/^alias gunwip='git log -n 1 | grep -q -c "\\-\\-wip\\-\\-" && git reset HEAD~1'$/;"	a
gup	plugins/git/git.plugin.sh	/^alias gup='git pull --rebase'$/;"	a
gupa	plugins/git/git.plugin.sh	/^alias gupa='git pull --rebase --autostash'$/;"	a
gupav	plugins/git/git.plugin.sh	/^alias gupav='git pull --rebase --autostash -v'$/;"	a
gupv	plugins/git/git.plugin.sh	/^alias gupv='git pull --rebase -v'$/;"	a
gwch	plugins/git/git.plugin.sh	/^alias gwch='git whatchanged -p --abbrev-commit --pretty=medium'$/;"	a
gwip	plugins/git/git.plugin.sh	/^alias gwip='git add -A; git rm $(git ls-files --deleted) 2> \/dev\/null; git commit --no-verify /;"	a
gy	Config_Vim/keybindingsCoc.vim	/^nmap <silent> gy <Plug>(coc-type-definition)$/;"	m
herr	aliases/misc.aliases.sh	/^alias herr='tail \/var\/log\/httpd\/error_log'              # herr:             Tails HTTP error/;"	a
hg_prompt_info	lib/omb-prompt-base.sh	/^function hg_prompt_info() {$/;"	f
hg_prompt_info	themes/hawaii50/hawaii50.theme.sh	/^function hg_prompt_info() {$/;"	f
hg_prompt_vars	lib/omb-prompt-base.sh	/^function hg_prompt_vars {$/;"	f
hstats	lib/base.sh	/^    hstats() {$/;"	f
httpDebug	lib/base.sh	/^    httpDebug () { \/usr\/bin\/curl "$@" -o \/dev\/null -w "dns: %{time_namelookup} connect: %{t/;"	f
httpHeaders	lib/base.sh	/^httpHeaders () { \/usr\/bin\/curl -I -L "$@" ; }             # httpHeaders:      Grabs headers f/;"	f
ic	Config_Vim/keybindingsCoc.vim	/^omap ic <Plug>(coc-classobj-i)$/;"	m
ic	Config_Vim/keybindingsCoc.vim	/^xmap ic <Plug>(coc-classobj-i)$/;"	m
if	Config_Vim/keybindingsCoc.vim	/^omap if <Plug>(coc-funcobj-i)$/;"	m
if	Config_Vim/keybindingsCoc.vim	/^xmap if <Plug>(coc-funcobj-i)$/;"	m
ii	lib/base.sh	/^    ii() {$/;"	f
insertar_texto	.bashrc	/^insertar_texto() {$/;"	f
ipInfo0	aliases/misc.aliases.sh	/^alias ipInfo0='ifconfig getpacket en0'                    # ipInfo0:      Get info on connection/;"	a
ipInfo1	aliases/misc.aliases.sh	/^alias ipInfo1='ifconfig getpacket en1'                    # ipInfo1:      Get info on connection/;"	a
ip_prompt_info	themes/hawaii50/hawaii50.theme.sh	/^function ip_prompt_info() {$/;"	f
ips	lib/base.sh	/^    ips () {$/;"	f
is_alias	lib/omb-deprecate.sh	/^is_alias() {$/;"	f
is_completion	lib/omb-deprecate.sh	/^is_completion() {$/;"	f
is_confirmed	lib/utils.sh	/^is_confirmed() {$/;"	f
is_integer	themes/rjorgenson/rjorgenson.theme.sh	/^is_integer() { # helper function to make sure input is an integer$/;"	f
is_os	lib/utils.sh	/^is_os() {$/;"	f
is_plugin	lib/omb-deprecate.sh	/^is_plugin() {$/;"	f
is_vim_shell	themes/brunton/brunton.theme.sh	/^is_vim_shell() {$/;"	f
is_vim_shell	themes/demula/demula.theme.sh	/^is_vim_shell() {$/;"	f
is_vim_shell	themes/mairan/mairan.theme.sh	/^is_vim_shell() {$/;"	f
is_vim_shell	themes/modern-t/modern-t.theme.sh	/^is_vim_shell() {$/;"	f
is_vim_shell	themes/modern/modern.theme.sh	/^is_vim_shell() {$/;"	f
is_vim_shell	themes/pzq/pzq.theme.sh	/^is_vim_shell() {$/;"	f
is_vim_shell	themes/rana/rana.theme.sh	/^is_vim_shell() {$/;"	f
is_vim_shell	themes/rjorgenson/rjorgenson.theme.sh	/^is_vim_shell() {$/;"	f
is_vim_shell	themes/slick/slick.theme.sh	/^is_vim_shell() {$/;"	f
is_vim_shell	themes/zork/zork.theme.sh	/^is_vim_shell() {$/;"	f
ix	aliases/misc.aliases.sh	/^_omb_util_binary_exists curl && ix() { curl -n -F 'f:1=<-' http:\/\/ix.io ; }$/;"	f
k	plugins/kubectl/kubectl.plugin.sh	/^alias k=kubectl$/;"	a
kaf	plugins/kubectl/kubectl.plugin.sh	/^alias kaf='kubectl apply -f'$/;"	a
kca	plugins/kubectl/kubectl.plugin.sh	/^alias kca='f(){ kubectl "$@" --all-namespaces;  unset -f f; }; f'$/;"	a
kccc	plugins/kubectl/kubectl.plugin.sh	/^alias kccc='kubectl config current-context'$/;"	a
kcdc	plugins/kubectl/kubectl.plugin.sh	/^alias kcdc='kubectl config delete-context'$/;"	a
kcgc	plugins/kubectl/kubectl.plugin.sh	/^alias kcgc='kubectl config get-contexts'$/;"	a
kcn	plugins/kubectl/kubectl.plugin.sh	/^alias kcn='kubectl config set-context $(kubectl config current-context) --namespace'$/;"	a
kcp	plugins/kubectl/kubectl.plugin.sh	/^alias kcp='kubectl cp'$/;"	a
kcsc	plugins/kubectl/kubectl.plugin.sh	/^alias kcsc='kubectl config set-context'$/;"	a
kcuc	plugins/kubectl/kubectl.plugin.sh	/^alias kcuc='kubectl config use-context'$/;"	a
kdcm	plugins/kubectl/kubectl.plugin.sh	/^alias kdcm='kubectl describe configmap'$/;"	a
kdd	plugins/kubectl/kubectl.plugin.sh	/^alias kdd='kubectl describe deployment'$/;"	a
kdel	plugins/kubectl/kubectl.plugin.sh	/^alias kdel='kubectl delete'$/;"	a
kdelcm	plugins/kubectl/kubectl.plugin.sh	/^alias kdelcm='kubectl delete configmap'$/;"	a
kdeld	plugins/kubectl/kubectl.plugin.sh	/^alias kdeld='kubectl delete deployment'$/;"	a
kdelf	plugins/kubectl/kubectl.plugin.sh	/^alias kdelf='kubectl delete -f'$/;"	a
kdeli	plugins/kubectl/kubectl.plugin.sh	/^alias kdeli='kubectl delete ingress'$/;"	a
kdelno	plugins/kubectl/kubectl.plugin.sh	/^alias kdelno='kubectl delete node'$/;"	a
kdelns	plugins/kubectl/kubectl.plugin.sh	/^alias kdelns='kubectl delete namespace'$/;"	a
kdelp	plugins/kubectl/kubectl.plugin.sh	/^alias kdelp='kubectl delete pods'$/;"	a
kdelpvc	plugins/kubectl/kubectl.plugin.sh	/^alias kdelpvc='kubectl delete pvc'$/;"	a
kdels	plugins/kubectl/kubectl.plugin.sh	/^alias kdels='kubectl delete svc'$/;"	a
kdelsec	plugins/kubectl/kubectl.plugin.sh	/^alias kdelsec='kubectl delete secret'$/;"	a
kdelss	plugins/kubectl/kubectl.plugin.sh	/^alias kdelss='kubectl delete statefulset'$/;"	a
kdi	plugins/kubectl/kubectl.plugin.sh	/^alias kdi='kubectl describe ingress'$/;"	a
kdno	plugins/kubectl/kubectl.plugin.sh	/^alias kdno='kubectl describe node'$/;"	a
kdns	plugins/kubectl/kubectl.plugin.sh	/^alias kdns='kubectl describe namespace'$/;"	a
kdp	plugins/kubectl/kubectl.plugin.sh	/^alias kdp='kubectl describe pods'$/;"	a
kdpvc	plugins/kubectl/kubectl.plugin.sh	/^alias kdpvc='kubectl describe pvc'$/;"	a
kds	plugins/kubectl/kubectl.plugin.sh	/^alias kds='kubectl describe svc'$/;"	a
kdsec	plugins/kubectl/kubectl.plugin.sh	/^alias kdsec='kubectl describe secret'$/;"	a
kdss	plugins/kubectl/kubectl.plugin.sh	/^alias kdss='kubectl describe statefulset'$/;"	a
kecm	plugins/kubectl/kubectl.plugin.sh	/^alias kecm='kubectl edit configmap'$/;"	a
ked	plugins/kubectl/kubectl.plugin.sh	/^alias ked='kubectl edit deployment'$/;"	a
kei	plugins/kubectl/kubectl.plugin.sh	/^alias kei='kubectl edit ingress'$/;"	a
keno	plugins/kubectl/kubectl.plugin.sh	/^alias keno='kubectl edit node'$/;"	a
kens	plugins/kubectl/kubectl.plugin.sh	/^alias kens='kubectl edit namespace'$/;"	a
kep	plugins/kubectl/kubectl.plugin.sh	/^alias kep='kubectl edit pods'$/;"	a
kepvc	plugins/kubectl/kubectl.plugin.sh	/^alias kepvc='kubectl edit pvc'$/;"	a
kes	plugins/kubectl/kubectl.plugin.sh	/^alias kes='kubectl edit svc'$/;"	a
kess	plugins/kubectl/kubectl.plugin.sh	/^alias kess='kubectl edit statefulset'$/;"	a
keti	plugins/kubectl/kubectl.plugin.sh	/^alias keti='kubectl exec -ti'$/;"	a
kga	plugins/kubectl/kubectl.plugin.sh	/^alias kga='kubectl get all'$/;"	a
kgaa	plugins/kubectl/kubectl.plugin.sh	/^alias kgaa='kubectl get all --all-namespaces'$/;"	a
kgcm	plugins/kubectl/kubectl.plugin.sh	/^alias kgcm='kubectl get configmaps'$/;"	a
kgd	plugins/kubectl/kubectl.plugin.sh	/^alias kgd='kubectl get deployment'$/;"	a
kgdw	plugins/kubectl/kubectl.plugin.sh	/^alias kgdw='kgd --watch'$/;"	a
kgdwide	plugins/kubectl/kubectl.plugin.sh	/^alias kgdwide='kgd -o wide'$/;"	a
kgi	plugins/kubectl/kubectl.plugin.sh	/^alias kgi='kubectl get ingress'$/;"	a
kgno	plugins/kubectl/kubectl.plugin.sh	/^alias kgno='kubectl get nodes'$/;"	a
kgns	plugins/kubectl/kubectl.plugin.sh	/^alias kgns='kubectl get namespaces'$/;"	a
kgp	plugins/kubectl/kubectl.plugin.sh	/^alias kgp='kubectl get pods'$/;"	a
kgpl	plugins/kubectl/kubectl.plugin.sh	/^alias kgpl='kgp -l'$/;"	a
kgpvc	plugins/kubectl/kubectl.plugin.sh	/^alias kgpvc='kubectl get pvc'$/;"	a
kgpvcw	plugins/kubectl/kubectl.plugin.sh	/^alias kgpvcw='kgpvc --watch'$/;"	a
kgpw	plugins/kubectl/kubectl.plugin.sh	/^alias kgpw='kgp --watch'$/;"	a
kgpwide	plugins/kubectl/kubectl.plugin.sh	/^alias kgpwide='kgp -o wide'$/;"	a
kgrs	plugins/kubectl/kubectl.plugin.sh	/^alias kgrs='kubectl get rs'$/;"	a
kgs	plugins/kubectl/kubectl.plugin.sh	/^alias kgs='kubectl get svc'$/;"	a
kgsec	plugins/kubectl/kubectl.plugin.sh	/^alias kgsec='kubectl get secret'$/;"	a
kgss	plugins/kubectl/kubectl.plugin.sh	/^alias kgss='kubectl get statefulset'$/;"	a
kgssw	plugins/kubectl/kubectl.plugin.sh	/^alias kgssw='kgss --watch'$/;"	a
kgsswide	plugins/kubectl/kubectl.plugin.sh	/^alias kgsswide='kgss -o wide'$/;"	a
kgsw	plugins/kubectl/kubectl.plugin.sh	/^alias kgsw='kgs --watch'$/;"	a
kgswide	plugins/kubectl/kubectl.plugin.sh	/^alias kgswide='kgs -o wide'$/;"	a
kl	plugins/kubectl/kubectl.plugin.sh	/^alias kl='kubectl logs'$/;"	a
klf	plugins/kubectl/kubectl.plugin.sh	/^alias klf='kubectl logs -f'$/;"	a
kpf	plugins/kubectl/kubectl.plugin.sh	/^alias kpf="kubectl port-forward"$/;"	a
kres	plugins/kubectl/kubectl.plugin.sh	/^kres(){$/;"	f
krh	plugins/kubectl/kubectl.plugin.sh	/^alias krh='kubectl rollout history'$/;"	a
krsd	plugins/kubectl/kubectl.plugin.sh	/^alias krsd='kubectl rollout status deployment'$/;"	a
krsss	plugins/kubectl/kubectl.plugin.sh	/^alias krsss='kubectl rollout status statefulset'$/;"	a
kru	plugins/kubectl/kubectl.plugin.sh	/^alias kru='kubectl rollout undo'$/;"	a
ksd	plugins/kubectl/kubectl.plugin.sh	/^alias ksd='kubectl scale deployment'$/;"	a
ksss	plugins/kubectl/kubectl.plugin.sh	/^alias ksss='kubectl scale statefulset'$/;"	a
l	aliases/ls.aliases.sh	/^alias l.='ls -d .* --color=tty' # short listing, only hidden files - .*$/;"	a
l	aliases/ls.aliases.sh	/^alias l='ls -lathF'             # long, sort by newest to oldest$/;"	a
la	aliases/ls.aliases.sh	/^alias la='ls -Al'               # show hidden files$/;"	a
last_two_dirs	themes/duru/duru.theme.sh	/^last_two_dirs() {$/;"	f
lc	aliases/ls.aliases.sh	/^alias lc='ls -lcr'              # sort by change time$/;"	a
less	aliases/general.aliases.sh	/^alias less='less -FSRXc'                    # Preferred 'less' implementation$/;"	a
lh	aliases/ls.aliases.sh	/^alias lh='ls -lSrh'             # sort by size human readable$/;"	a
limited_pwd	themes/hawaii50/hawaii50.theme.sh	/^function limited_pwd() {$/;"	f
limited_pwd	themes/pzq/pzq.theme.sh	/^limited_pwd() {$/;"	f
lk	aliases/ls.aliases.sh	/^alias lk='ls -lSr'              # sort by size$/;"	a
ll	aliases/general.aliases.sh	/^alias ll='ls -lAFh'                         # Preferred 'ls' implementation$/;"	a
llm	aliases/misc.aliases.sh	/^alias llm="find \/lib\/modules\/$(uname -r) -type f -name '*.ko*'"$/;"	a
lm	aliases/ls.aliases.sh	/^alias lm='ls -al | more'        # pipe through 'more'$/;"	a
lo	aliases/ls.aliases.sh	/^alias lo='ls -laSFh'            # sort by size largest to smallest$/;"	a
locations=	oh-my-bash.sh	/^    local -a locations=()$/;"	f
long_progress	tools/autossh.sh	/^long_progress()$/;"	f
lr	aliases/ls.aliases.sh	/^alias lr='ls -R | grep ":$" | sed -e '\\''s\/:$\/\/'\\'' -e '\\''s\/[^-][^\\\/]*\\\/\/--\/g'\\''/;"	a
lr	aliases/ls.aliases.sh	/^alias lr='ls -lR'               # recursive ls$/;"	a
lsgrep	lib/base.sh	/^    lsgrep () { ls | grep "$*" ; }$/;"	f
lsock	aliases/misc.aliases.sh	/^alias lsock='sudo \/usr\/sbin\/lsof -i -P'                   # lsock:        Display open socket/;"	a
lsockT	aliases/misc.aliases.sh	/^alias lsockT='sudo \/usr\/sbin\/lsof -nP | grep TCP'         # lsockT:       Display only open T/;"	a
lsockU	aliases/misc.aliases.sh	/^alias lsockU='sudo \/usr\/sbin\/lsof -nP | grep UDP'         # lsockU:       Display only open U/;"	a
lt	aliases/ls.aliases.sh	/^alias lt='ls -ltr'              # sort by date$/;"	a
lu	aliases/ls.aliases.sh	/^alias lu='ls -lur'              # sort by access time$/;"	a
main	tools/autossh.sh	/^main()$/;"	f
make10mb	aliases/misc.aliases.sh	/^alias make10mb='truncate -s 10m .\/10MB.dat'  # make10mb:     Creates a file of 10mb size (all z/;"	a
make1mb	aliases/misc.aliases.sh	/^alias make1mb='truncate -s 1m .\/1MB.dat'     # make1mb:      Creates a file of 1mb size (all ze/;"	a
make5mb	aliases/misc.aliases.sh	/^alias make5mb='truncate -s 5m .\/5MB.dat'     # make5mb:      Creates a file of 5mb size (all ze/;"	a
mans	lib/base.sh	/^    mans () { man "$1" | grep -iC2 --color=always "$2" | less ; }$/;"	f
mapleader	Config_Vim/KeyBindings.vim	/^let mapleader = "f"$/;"	v
mcd	lib/base.sh	/^    mcd () { mkdir -p -- "$*" ; cd -- "$*" || exit ; }$/;"	f
memHogsPs	aliases/misc.aliases.sh	/^    alias memHogsPs='ps wwaxm -o pid,stat,vsize,rss,time,command | head -10'$/;"	a
memHogsTop	aliases/misc.aliases.sh	/^    alias memHogsTop='top -l 1 -o rsize | head -20'$/;"	a
mitsuhikos_lastcommandfailed	themes/demula/demula.theme.sh	/^mitsuhikos_lastcommandfailed() {$/;"	f
mitsuhikos_lastcommandfailed	themes/pzq/pzq.theme.sh	/^mitsuhikos_lastcommandfailed() {$/;"	f
mitsuhikos_lastcommandfailed	themes/rana/rana.theme.sh	/^mitsuhikos_lastcommandfailed() {$/;"	f
mkdir	aliases/general.aliases.sh	/^    alias mkdir='mkdir -p' && function _omb_alias_general_mkdir_init { command mkdir -p "$@"; }$/;"	a
mkdir	aliases/general.aliases.sh	/^    alias mkdir='mkdir -pv' && function _omb_alias_general_mkdir_init { command mkdir -pv "$@"; /;"	a
mkdir	aliases/general.aliases.sh	/^alias mkdir='_omb_alias_general_mkdir_init' # Preferred 'mkdir' implementation$/;"	a
mkiso	lib/base.sh	/^    mkiso () {$/;"	f
mo	lib/mo.sh	/^mo() {$/;"	f
modern_scm_prompt	themes/mairan/mairan.theme.sh	/^modern_scm_prompt() {$/;"	f
modern_scm_prompt	themes/modern-t/modern-t.theme.sh	/^modern_scm_prompt() {$/;"	f
modern_scm_prompt	themes/modern/modern.theme.sh	/^modern_scm_prompt() {$/;"	f
modern_scm_prompt	themes/rjorgenson/rjorgenson.theme.sh	/^modern_scm_prompt() {$/;"	f
modern_scm_prompt	themes/slick/slick.theme.sh	/^modern_scm_prompt() {$/;"	f
modern_scm_prompt	themes/zork/zork.theme.sh	/^modern_scm_prompt() {$/;"	f
mountReadWrite	aliases/misc.aliases.sh	/^alias mountReadWrite='\/sbin\/mount -uw \/'    # mountReadWrite:   For use when booted into sing/;"	a
mv	aliases/general.aliases.sh	/^    alias mv='mv -i' && function _omb_alias_general_mv_init { command mv -i "$@"; }$/;"	a
mv	aliases/general.aliases.sh	/^    alias mv='mv -iv' && function _omb_alias_general_mv_init { command mv -iv "$@"; }$/;"	a
mv	aliases/general.aliases.sh	/^alias mv='_omb_alias_general_mv_init'       # Preferred 'mv' implementation$/;"	a
mx	aliases/chmod.aliases.sh	/^alias mx='chmod a+x'                        # ---x--x--x (user: --x, group: --x, other: --x)$/;"	a
my_ps	lib/base.sh	/^    my_ps() { ps "$@" -u "$USER" -o pid,%cpu,%mem,start,time,bsdtime,command ; }$/;"	f
my_ve	themes/mairan/mairan.theme.sh	/^my_ve(){$/;"	f
my_ve	themes/zork/zork.theme.sh	/^my_ve(){$/;"	f
mygroup	Config_Vim/Coc.vim	/^augroup mygroup$/;"	a
myip	lib/base.sh	/^    myip () {$/;"	f
mytime	aliases/misc.aliases.sh	/^alias mytime='date +%H:%M:%S'$/;"	a
nano	aliases/general.aliases.sh	/^alias nano='nano -W'                        # Preferred 'nano' implementation$/;"	a
neofetch	.bashrc	/^alias neofetch="neofetch --config $OSH\/neofetch.conf --ascii "$OSH"\/tardis.txt"$/;"	a
netCons	aliases/misc.aliases.sh	/^alias netCons='lsof -i'                                   # netCons:      Show all open TCP\/IP /;"	a
no_term_spinner	lib/spinner.sh	/^no_term_spinner() {$/;"	f
npm plugin	plugins/npm/README.md	/^## npm plugin$/;"	s
npmD	plugins/npm/npm.plugin.sh	/^alias npmD="npm i -D "$/;"	a
npmE	plugins/npm/npm.plugin.sh	/^alias npmE='PATH="$(npm bin)":"$PATH"'$/;"	a
npmI	plugins/npm/npm.plugin.sh	/^alias npmI="npm init"/;"	a
npmL	plugins/npm/npm.plugin.sh	/^alias npmL="npm list"$/;"	a
npmL0	plugins/npm/npm.plugin.sh	/^alias npmL0="npm ls --depth=0"$/;"	a
npmO	plugins/npm/npm.plugin.sh	/^alias npmO="npm outdated"$/;"	a
npmP	plugins/npm/npm.plugin.sh	/^alias npmP="npm publish"$/;"	a
npmR	plugins/npm/npm.plugin.sh	/^alias npmR="npm run"$/;"	a
npmS	plugins/npm/npm.plugin.sh	/^alias npmS="npm i -S "$/;"	a
npmV	plugins/npm/npm.plugin.sh	/^alias npmV="npm -v"$/;"	a
npmg	plugins/npm/npm.plugin.sh	/^alias npmg="npm i -g "$/;"	a
npmst	plugins/npm/npm.plugin.sh	/^alias npmst="npm start"$/;"	a
npmt	plugins/npm/npm.plugin.sh	/^alias npmt="npm test"$/;"	a
numFiles	aliases/misc.aliases.sh	/^alias numFiles='echo $(ls -1 | wc -l)'       # numFiles:     Count of non-hidden files in curren/;"	a
nvm completion configuration	plugins/nvm/README.md	/^## nvm completion configuration$/;"	s	chapter:nvm plugin
nvm plugin	plugins/nvm/README.md	/^# nvm plugin$/;"	c
nvm_prompt_info	lib/nvm.sh	/^function nvm_prompt_info() {$/;"	f
openPorts	aliases/misc.aliases.sh	/^alias openPorts='sudo lsof -i | grep LISTEN'              # openPorts:    All listening connecti/;"	a
open_command	lib/functions.sh	/^function open_command() {$/;"	f
opts=	completions/fabric-completion.sh	/^    local opts=()$/;"	f
p	plugins/bashmarks/bashmarks.plugin.sh	/^alias p='bm -p'       # Print bookmark of a path [path]$/;"	a
parse_git_branch	themes/sexy/sexy.theme.sh	/^parse_git_branch () {$/;"	f
parse_git_dirty	lib/git.sh	/^function parse_git_dirty() {$/;"	f
parse_git_dirty	themes/sexy/sexy.theme.sh	/^parse_git_dirty () {$/;"	f
passgen	lib/base.sh	/^    passgen () {$/;"	f
path	aliases/general.aliases.sh	/^alias path='echo -e ${PATH\/\/:\/\\\\n}'         # path:         Echo all executable Paths$/;"	a
perm	aliases/chmod.aliases.sh	/^alias perm='stat --printf "%a %n \\n "'      # perm: Show permission of target in number$/;"	a
pickfrom	lib/base.sh	/^    pickfrom () {$/;"	f
progress	plugins/progress/progress.plugin.sh	/^function progress()$/;"	f
prompt_char	lib/omb-prompt-base.sh	/^function prompt_char {$/;"	f
prompt_context	themes/agnoster/agnoster.theme.sh	/^prompt_context() {$/;"	f
prompt_dir	themes/agnoster/agnoster.theme.sh	/^prompt_dir() {$/;"	f
prompt_emacsdir	themes/agnoster/agnoster.theme.sh	/^prompt_emacsdir() {$/;"	f
prompt_end	themes/agnoster/agnoster.theme.sh	/^prompt_end() {$/;"	f
prompt_end	themes/nwinkler/nwinkler.theme.sh	/^function prompt_end() {$/;"	f
prompt_end	themes/nwinkler_random_colors/nwinkler_random_colors.theme.sh	/^function prompt_end() {$/;"	f
prompt_git	themes/agnoster/agnoster.theme.sh	/^prompt_git() {$/;"	f
prompt_git	themes/pzq/pzq.theme.sh	/^prompt_git() {$/;"	f
prompt_git	themes/rana/rana.theme.sh	/^prompt_git() {$/;"	f
prompt_histdt	themes/agnoster/agnoster.theme.sh	/^prompt_histdt() {$/;"	f
prompt_right_segment	themes/agnoster/agnoster.theme.sh	/^prompt_right_segment() {$/;"	f
prompt_segment	themes/agnoster/agnoster.theme.sh	/^prompt_segment() {$/;"	f
prompt_status	themes/agnoster/agnoster.theme.sh	/^prompt_status() {$/;"	f
prompt_virtualenv	themes/agnoster/agnoster.theme.sh	/^prompt_virtualenv() {$/;"	f
pushover	lib/utils.sh	/^pushover () {$/;"	f
pyenv plugin	plugins/pyenv/README.md	/^# pyenv plugin$/;"	c
qfind	aliases/misc.aliases.sh	/^alias qfind="find . -name "                 # qfind:    Quickly search for file$/;"	a
quick_progress	tools/autossh.sh	/^quick_progress()$/;"	f
quiet	lib/base.sh	/^    quiet () {$/;"	f
randomize_nwinkler	themes/nwinkler_random_colors/nwinkler_random_colors.theme.sh	/^function randomize_nwinkler {$/;"	f
rightprompt	themes/agnoster/agnoster.theme.sh	/^rightprompt() {$/;"	f
s	plugins/bashmarks/bashmarks.plugin.sh	/^alias s='bm -a'       # Save a bookmark [bookmark_name]$/;"	a
s:StartDebugging	Config_Vim/YCM.vim	/^function! s:StartDebugging()$/;"	f
s:goyo_enter	Config_Vim/Goyo.vim	/^function! s:goyo_enter()$/;"	f
s:goyo_leave	Config_Vim/Goyo.vim	/^function! s:goyo_leave()$/;"	f
s:jdt_ls_debugger_port	Config_Vim/YCM.vim	/^let s:jdt_ls_debugger_port = 0$/;"	v
safe_battery_charge	themes/demula/demula.theme.sh	/^safe_battery_charge() {$/;"	f
safe_battery_charge	themes/pzq/pzq.theme.sh	/^safe_battery_charge() {$/;"	f
safe_battery_charge	themes/rana/rana.theme.sh	/^safe_battery_charge() {$/;"	f
save_input	tools/autossh.sh	/^save_input()$/;"	f
scm	lib/omb-prompt-base.sh	/^function scm {$/;"	f
scm_char	lib/omb-prompt-base.sh	/^function scm_char {$/;"	f
scm_prompt	themes/binaryanomaly/binaryanomaly.theme.sh	/^scm_prompt() {$/;"	f
scm_prompt	themes/brunton/brunton.theme.sh	/^scm_prompt() {$/;"	f
scm_prompt	themes/gallifrey/gallifrey.theme.sh	/^scm_prompt() {$/;"	f
scm_prompt	themes/pure/pure.theme.sh	/^scm_prompt() {$/;"	f
scm_prompt_char	lib/omb-prompt-base.sh	/^function scm_prompt_char {$/;"	f
scm_prompt_char_info	lib/omb-prompt-base.sh	/^function scm_prompt_char_info {$/;"	f
scm_prompt_info	lib/omb-prompt-base.sh	/^function scm_prompt_info {$/;"	f
scm_prompt_info_common	lib/omb-prompt-base.sh	/^function scm_prompt_info_common {$/;"	f
scm_prompt_vars	lib/omb-prompt-base.sh	/^function scm_prompt_vars {$/;"	f
sdkman plugin	plugins/sdkman/README.md	/^# sdkman plugin$/;"	c
secconvert	aliases/misc.aliases.sh	/^alias secconvert='date -d@1234567890'$/;"	a
seek_confirmation	lib/utils.sh	/^seek_confirmation() {$/;"	f
set_color	themes/powerline/powerline.base.sh	/^function set_color {$/;"	f
set_custom_colors	themes/binaryanomaly/binaryanomaly.theme.sh	/^function set_custom_colors() {$/;"	f
set_host_color	themes/binaryanomaly/binaryanomaly.theme.sh	/^function set_host_color() {$/;"	f
set_user_color	themes/binaryanomaly/binaryanomaly.theme.sh	/^function set_user_color() {$/;"	f
showBlocked	aliases/misc.aliases.sh	/^alias showBlocked='sudo ipfw list'                        # showBlocked:  All ipfw rules inc\/ b/;"	a
show_options	aliases/general.aliases.sh	/^alias show_options='shopt'                  # Show_options: display bash options settings$/;"	a
show_reboot_required	themes/binaryanomaly/binaryanomaly.theme.sh	/^function show_reboot_required() {$/;"	f
showa	lib/base.sh	/^    showa () { \/usr\/bin\/grep --color=always -i -a1 "$@" ~\/Library\/init\/bash\/aliases.bash /;"	f
spectrum_bls	lib/spectrum.sh	/^function spectrum_bls() {$/;"	f
spectrum_ls	lib/spectrum.sh	/^function spectrum_ls() {$/;"	f
spinner	lib/spinner.sh	/^spinner() {$/;"	f
src	aliases/general.aliases.sh	/^alias src='source ~\/.bashrc'                # src:          Reload .bashrc file$/;"	a
stamp	aliases/misc.aliases.sh	/^alias stamp='date "+%Y%m%d%a%H%M"'$/;"	a
start_progress	tools/autossh.sh	/^start_progress()$/;"	f
stop_progress	tools/autossh.sh	/^stop_progress()$/;"	f
svn_prompt_info	lib/omb-prompt-base.sh	/^function svn_prompt_info {$/;"	f
svn_prompt_info	themes/hawaii50/hawaii50.theme.sh	/^function svn_prompt_info() {$/;"	f
svn_prompt_vars	lib/omb-prompt-base.sh	/^function svn_prompt_vars {$/;"	f
svn_remote=	tools/git-prompt.sh	/^	svn_remote=()$/;"	f
symbols=	themes/agnoster/agnoster.theme.sh	/^    symbols=()$/;"	f
tabname	themes/cupcake/cupcake.theme.sh	/^function tabname {$/;"	f
take	lib/functions.sh	/^function take() {$/;"	f
term_spinner	lib/spinner.sh	/^term_spinner() {$/;"	f
text_effect	themes/agnoster/agnoster.theme.sh	/^text_effect() {$/;"	f
timestamp	aliases/misc.aliases.sh	/^alias timestamp='date "+%Y%m%dT%H%M%S"'$/;"	a
tmux-autoattach.plugin	plugins/tmux-autoattach/README.md	/^# tmux-autoattach.plugin$/;"	c
today	aliases/misc.aliases.sh	/^alias today='date +"%A, %B %-d, %Y"'$/;"	a
todo_txt_count	themes/rjorgenson/rjorgenson.theme.sh	/^todo_txt_count() {$/;"	f
topForever	aliases/misc.aliases.sh	/^    alias topForever='top -l 9999999 -s 10 -o cpu'$/;"	a
try_alias_value	lib/functions.sh	/^function try_alias_value() {$/;"	f
ttop	aliases/misc.aliases.sh	/^    alias ttop="top -R -F -s 10 -o rsize"$/;"	a
uninstall_oh_my_bash	lib/functions.sh	/^function uninstall_oh_my_bash() {$/;"	f
upgrade_oh_my_bash	lib/functions.sh	/^function upgrade_oh_my_bash() {$/;"	f
usage	lib/base.sh	/^    usage () {$/;"	f
usage	plugins/bu/bu.plugin.sh	/^	function usage () {$/;"	f
user_host_prompt	lib/omb-prompt-base.sh	/^function user_host_prompt {$/;"	f
ux	aliases/chmod.aliases.sh	/^alias ux='chmod u+x'                        # ---x------ (user: --x, group: -, other: -)$/;"	a
va	plugins/vagrant/vagrant.plugin.sh	/^alias va='vagrant'$/;"	a
vaba	plugins/vagrant/vagrant.plugin.sh	/^alias vaba='vagrant box add'$/;"	a
vabr	plugins/vagrant/vagrant.plugin.sh	/^alias vabr='vagrant box remove'$/;"	a
vacheck	plugins/vagrant/vagrant.plugin.sh	/^alias vacheck='vagrant validate'$/;"	a
vaconf	plugins/vagrant/vagrant.plugin.sh	/^alias vaconf='vagrant ssh-config'$/;"	a
vagrant plugin	plugins/vagrant/README.md	/^# vagrant plugin$/;"	c
vagrant-init	plugins/vagrant/vagrant.plugin.sh	/^function vagrant-init() {$/;"	f
vagrant-plugin-vm	plugins/vagrant/vagrant.plugin.sh	/^function vagrant-plugin-vm() {$/;"	f
vagrant-ssh	plugins/vagrant/vagrant.plugin.sh	/^function vagrant-ssh() {$/;"	f
vagrant-status	plugins/vagrant/vagrant.plugin.sh	/^function vagrant-status() {$/;"	f
vagrant-up	plugins/vagrant/vagrant.plugin.sh	/^function vagrant-up() {$/;"	f
vagrant-version	plugins/vagrant/vagrant.plugin.sh	/^function vagrant-version() {$/;"	f
vah	plugins/vagrant/vagrant.plugin.sh	/^alias vah='vagrant halt'$/;"	a
vai	plugins/vagrant/vagrant.plugin.sh	/^alias vai='vagrant-init'$/;"	a
vapi	plugins/vagrant/vagrant.plugin.sh	/^alias vapi='vagrant plugin install'$/;"	a
vaport	plugins/vagrant/vagrant.plugin.sh	/^alias vaport='vagrant port'$/;"	a
vapr	plugins/vagrant/vagrant.plugin.sh	/^alias vapr='vagrant plugin uninstall'$/;"	a
vapvm	plugins/vagrant/vagrant.plugin.sh	/^alias vapvm='vagrant-plugin-vm'$/;"	a
varel	plugins/vagrant/vagrant.plugin.sh	/^alias varel='vagrant reload'$/;"	a
vassh	plugins/vagrant/vagrant.plugin.sh	/^alias vassh='vagrant-ssh'$/;"	a
vastat	plugins/vagrant/vagrant.plugin.sh	/^alias vastat='vagrant-status'$/;"	a
vat	plugins/vagrant/vagrant.plugin.sh	/^alias vat='vagrant destroy -f'$/;"	a
vau	plugins/vagrant/vagrant.plugin.sh	/^alias vau='vagrant-up'$/;"	a
vaver	plugins/vagrant/vagrant.plugin.sh	/^alias vaver='vagrant-version'$/;"	a
vavl	plugins/vagrant/vagrant.plugin.sh	/^alias vavl='vagrant box list'$/;"	a
venv	themes/duru/duru.theme.sh	/^venv() {$/;"	f
vi	.bashrc	/^alias vi=nvim$/;"	a
vim	.bashrc	/^alias vim=nvim$/;"	a
virtual_prompt_info	themes/hawaii50/hawaii50.theme.sh	/^function virtual_prompt_info() {$/;"	f
weeknum	aliases/misc.aliases.sh	/^alias weeknum='date +%V'$/;"	a
wget	aliases/general.aliases.sh	/^alias wget='wget -c'                        # Preferred 'wget' implementation (resume download)$/;"	a
winname	themes/cupcake/cupcake.theme.sh	/^function winname {$/;"	f
work_in_progress	plugins/git/git.plugin.sh	/^function work_in_progress() {$/;"	f
xcopy	aliases/misc.aliases.sh	/^_omb_util_binary_exists xclip && alias xcopy="xclip -se c"$/;"	a
zipf	lib/base.sh	/^zipf () { zip -r "$1".zip "$1" ; }           # zipf:         To create a ZIP archive of a folder$/;"	f
zoxide plugin	plugins/zoxide/README.md	/^# zoxide plugin$/;"	c
